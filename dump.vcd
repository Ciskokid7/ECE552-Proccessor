$date
	Mon Mar 19 15:57:36 2018
$end
$version
	ModelSim Version 10.4d
$end
$timescale
	1ps
$end

$scope module cpu_tb $end
$var wire 1 ! PC [15] $end
$var wire 1 " PC [14] $end
$var wire 1 # PC [13] $end
$var wire 1 $ PC [12] $end
$var wire 1 % PC [11] $end
$var wire 1 & PC [10] $end
$var wire 1 ' PC [9] $end
$var wire 1 ( PC [8] $end
$var wire 1 ) PC [7] $end
$var wire 1 * PC [6] $end
$var wire 1 + PC [5] $end
$var wire 1 , PC [4] $end
$var wire 1 - PC [3] $end
$var wire 1 . PC [2] $end
$var wire 1 / PC [1] $end
$var wire 1 0 PC [0] $end
$var wire 1 1 Inst [15] $end
$var wire 1 2 Inst [14] $end
$var wire 1 3 Inst [13] $end
$var wire 1 4 Inst [12] $end
$var wire 1 5 Inst [11] $end
$var wire 1 6 Inst [10] $end
$var wire 1 7 Inst [9] $end
$var wire 1 8 Inst [8] $end
$var wire 1 9 Inst [7] $end
$var wire 1 : Inst [6] $end
$var wire 1 ; Inst [5] $end
$var wire 1 < Inst [4] $end
$var wire 1 = Inst [3] $end
$var wire 1 > Inst [2] $end
$var wire 1 ? Inst [1] $end
$var wire 1 @ Inst [0] $end
$var wire 1 A RegWrite $end
$var wire 1 B WriteRegister [3] $end
$var wire 1 C WriteRegister [2] $end
$var wire 1 D WriteRegister [1] $end
$var wire 1 E WriteRegister [0] $end
$var wire 1 F WriteData [15] $end
$var wire 1 G WriteData [14] $end
$var wire 1 H WriteData [13] $end
$var wire 1 I WriteData [12] $end
$var wire 1 J WriteData [11] $end
$var wire 1 K WriteData [10] $end
$var wire 1 L WriteData [9] $end
$var wire 1 M WriteData [8] $end
$var wire 1 N WriteData [7] $end
$var wire 1 O WriteData [6] $end
$var wire 1 P WriteData [5] $end
$var wire 1 Q WriteData [4] $end
$var wire 1 R WriteData [3] $end
$var wire 1 S WriteData [2] $end
$var wire 1 T WriteData [1] $end
$var wire 1 U WriteData [0] $end
$var wire 1 V MemWrite $end
$var wire 1 W MemRead $end
$var wire 1 X MemAddress [15] $end
$var wire 1 Y MemAddress [14] $end
$var wire 1 Z MemAddress [13] $end
$var wire 1 [ MemAddress [12] $end
$var wire 1 \ MemAddress [11] $end
$var wire 1 ] MemAddress [10] $end
$var wire 1 ^ MemAddress [9] $end
$var wire 1 _ MemAddress [8] $end
$var wire 1 ` MemAddress [7] $end
$var wire 1 a MemAddress [6] $end
$var wire 1 b MemAddress [5] $end
$var wire 1 c MemAddress [4] $end
$var wire 1 d MemAddress [3] $end
$var wire 1 e MemAddress [2] $end
$var wire 1 f MemAddress [1] $end
$var wire 1 g MemAddress [0] $end
$var wire 1 h MemData [15] $end
$var wire 1 i MemData [14] $end
$var wire 1 j MemData [13] $end
$var wire 1 k MemData [12] $end
$var wire 1 l MemData [11] $end
$var wire 1 m MemData [10] $end
$var wire 1 n MemData [9] $end
$var wire 1 o MemData [8] $end
$var wire 1 p MemData [7] $end
$var wire 1 q MemData [6] $end
$var wire 1 r MemData [5] $end
$var wire 1 s MemData [4] $end
$var wire 1 t MemData [3] $end
$var wire 1 u MemData [2] $end
$var wire 1 v MemData [1] $end
$var wire 1 w MemData [0] $end
$var wire 1 x signals_out [9] $end
$var wire 1 y signals_out [8] $end
$var wire 1 z signals_out [7] $end
$var wire 1 { signals_out [6] $end
$var wire 1 | signals_out [5] $end
$var wire 1 } signals_out [4] $end
$var wire 1 ~ signals_out [3] $end
$var wire 1 !! signals_out [2] $end
$var wire 1 "! signals_out [1] $end
$var wire 1 #! signals_out [0] $end
$var wire 1 $! rs [15] $end
$var wire 1 %! rs [14] $end
$var wire 1 &! rs [13] $end
$var wire 1 '! rs [12] $end
$var wire 1 (! rs [11] $end
$var wire 1 )! rs [10] $end
$var wire 1 *! rs [9] $end
$var wire 1 +! rs [8] $end
$var wire 1 ,! rs [7] $end
$var wire 1 -! rs [6] $end
$var wire 1 .! rs [5] $end
$var wire 1 /! rs [4] $end
$var wire 1 0! rs [3] $end
$var wire 1 1! rs [2] $end
$var wire 1 2! rs [1] $end
$var wire 1 3! rs [0] $end
$var wire 1 4! rt [15] $end
$var wire 1 5! rt [14] $end
$var wire 1 6! rt [13] $end
$var wire 1 7! rt [12] $end
$var wire 1 8! rt [11] $end
$var wire 1 9! rt [10] $end
$var wire 1 :! rt [9] $end
$var wire 1 ;! rt [8] $end
$var wire 1 <! rt [7] $end
$var wire 1 =! rt [6] $end
$var wire 1 >! rt [5] $end
$var wire 1 ?! rt [4] $end
$var wire 1 @! rt [3] $end
$var wire 1 A! rt [2] $end
$var wire 1 B! rt [1] $end
$var wire 1 C! rt [0] $end
$var wire 1 D! Halt $end
$var integer 32 E! inst_count $end
$var integer 32 F! cycle_count $end
$var integer 32 G! trace_file $end
$var integer 32 H! sim_log_file $end
$var reg 1 I! clk $end
$var reg 1 J! rst_n $end

$scope module DUT $end
$var wire 1 K! clk $end
$var wire 1 L! rst_n $end
$var wire 1 D! hlt $end
$var wire 1 ! pc [15] $end
$var wire 1 " pc [14] $end
$var wire 1 # pc [13] $end
$var wire 1 $ pc [12] $end
$var wire 1 % pc [11] $end
$var wire 1 & pc [10] $end
$var wire 1 ' pc [9] $end
$var wire 1 ( pc [8] $end
$var wire 1 ) pc [7] $end
$var wire 1 * pc [6] $end
$var wire 1 + pc [5] $end
$var wire 1 , pc [4] $end
$var wire 1 - pc [3] $end
$var wire 1 . pc [2] $end
$var wire 1 / pc [1] $end
$var wire 1 0 pc [0] $end
$var wire 1 M! instr [15] $end
$var wire 1 N! instr [14] $end
$var wire 1 O! instr [13] $end
$var wire 1 P! instr [12] $end
$var wire 1 Q! instr [11] $end
$var wire 1 R! instr [10] $end
$var wire 1 S! instr [9] $end
$var wire 1 T! instr [8] $end
$var wire 1 U! instr [7] $end
$var wire 1 V! instr [6] $end
$var wire 1 W! instr [5] $end
$var wire 1 X! instr [4] $end
$var wire 1 Y! instr [3] $end
$var wire 1 Z! instr [2] $end
$var wire 1 [! instr [1] $end
$var wire 1 \! instr [0] $end
$var wire 1 ]! read_data1 [15] $end
$var wire 1 ^! read_data1 [14] $end
$var wire 1 _! read_data1 [13] $end
$var wire 1 `! read_data1 [12] $end
$var wire 1 a! read_data1 [11] $end
$var wire 1 b! read_data1 [10] $end
$var wire 1 c! read_data1 [9] $end
$var wire 1 d! read_data1 [8] $end
$var wire 1 e! read_data1 [7] $end
$var wire 1 f! read_data1 [6] $end
$var wire 1 g! read_data1 [5] $end
$var wire 1 h! read_data1 [4] $end
$var wire 1 i! read_data1 [3] $end
$var wire 1 j! read_data1 [2] $end
$var wire 1 k! read_data1 [1] $end
$var wire 1 l! read_data1 [0] $end
$var wire 1 m! read_data2 [15] $end
$var wire 1 n! read_data2 [14] $end
$var wire 1 o! read_data2 [13] $end
$var wire 1 p! read_data2 [12] $end
$var wire 1 q! read_data2 [11] $end
$var wire 1 r! read_data2 [10] $end
$var wire 1 s! read_data2 [9] $end
$var wire 1 t! read_data2 [8] $end
$var wire 1 u! read_data2 [7] $end
$var wire 1 v! read_data2 [6] $end
$var wire 1 w! read_data2 [5] $end
$var wire 1 x! read_data2 [4] $end
$var wire 1 y! read_data2 [3] $end
$var wire 1 z! read_data2 [2] $end
$var wire 1 {! read_data2 [1] $end
$var wire 1 |! read_data2 [0] $end
$var wire 1 }! alu_result [15] $end
$var wire 1 ~! alu_result [14] $end
$var wire 1 !" alu_result [13] $end
$var wire 1 "" alu_result [12] $end
$var wire 1 #" alu_result [11] $end
$var wire 1 $" alu_result [10] $end
$var wire 1 %" alu_result [9] $end
$var wire 1 &" alu_result [8] $end
$var wire 1 '" alu_result [7] $end
$var wire 1 (" alu_result [6] $end
$var wire 1 )" alu_result [5] $end
$var wire 1 *" alu_result [4] $end
$var wire 1 +" alu_result [3] $end
$var wire 1 ," alu_result [2] $end
$var wire 1 -" alu_result [1] $end
$var wire 1 ." alu_result [0] $end
$var wire 1 /" read_data [15] $end
$var wire 1 0" read_data [14] $end
$var wire 1 1" read_data [13] $end
$var wire 1 2" read_data [12] $end
$var wire 1 3" read_data [11] $end
$var wire 1 4" read_data [10] $end
$var wire 1 5" read_data [9] $end
$var wire 1 6" read_data [8] $end
$var wire 1 7" read_data [7] $end
$var wire 1 8" read_data [6] $end
$var wire 1 9" read_data [5] $end
$var wire 1 :" read_data [4] $end
$var wire 1 ;" read_data [3] $end
$var wire 1 <" read_data [2] $end
$var wire 1 =" read_data [1] $end
$var wire 1 >" read_data [0] $end
$var wire 1 ?" write_data [15] $end
$var wire 1 @" write_data [14] $end
$var wire 1 A" write_data [13] $end
$var wire 1 B" write_data [12] $end
$var wire 1 C" write_data [11] $end
$var wire 1 D" write_data [10] $end
$var wire 1 E" write_data [9] $end
$var wire 1 F" write_data [8] $end
$var wire 1 G" write_data [7] $end
$var wire 1 H" write_data [6] $end
$var wire 1 I" write_data [5] $end
$var wire 1 J" write_data [4] $end
$var wire 1 K" write_data [3] $end
$var wire 1 L" write_data [2] $end
$var wire 1 M" write_data [1] $end
$var wire 1 N" write_data [0] $end
$var wire 1 O" alu_src_data [15] $end
$var wire 1 P" alu_src_data [14] $end
$var wire 1 Q" alu_src_data [13] $end
$var wire 1 R" alu_src_data [12] $end
$var wire 1 S" alu_src_data [11] $end
$var wire 1 T" alu_src_data [10] $end
$var wire 1 U" alu_src_data [9] $end
$var wire 1 V" alu_src_data [8] $end
$var wire 1 W" alu_src_data [7] $end
$var wire 1 X" alu_src_data [6] $end
$var wire 1 Y" alu_src_data [5] $end
$var wire 1 Z" alu_src_data [4] $end
$var wire 1 [" alu_src_data [3] $end
$var wire 1 \" alu_src_data [2] $end
$var wire 1 ]" alu_src_data [1] $end
$var wire 1 ^" alu_src_data [0] $end
$var wire 1 _" alu_src_data_rs [15] $end
$var wire 1 `" alu_src_data_rs [14] $end
$var wire 1 a" alu_src_data_rs [13] $end
$var wire 1 b" alu_src_data_rs [12] $end
$var wire 1 c" alu_src_data_rs [11] $end
$var wire 1 d" alu_src_data_rs [10] $end
$var wire 1 e" alu_src_data_rs [9] $end
$var wire 1 f" alu_src_data_rs [8] $end
$var wire 1 g" alu_src_data_rs [7] $end
$var wire 1 h" alu_src_data_rs [6] $end
$var wire 1 i" alu_src_data_rs [5] $end
$var wire 1 j" alu_src_data_rs [4] $end
$var wire 1 k" alu_src_data_rs [3] $end
$var wire 1 l" alu_src_data_rs [2] $end
$var wire 1 m" alu_src_data_rs [1] $end
$var wire 1 n" alu_src_data_rs [0] $end
$var wire 1 o" imm_off [15] $end
$var wire 1 p" imm_off [14] $end
$var wire 1 q" imm_off [13] $end
$var wire 1 r" imm_off [12] $end
$var wire 1 s" imm_off [11] $end
$var wire 1 t" imm_off [10] $end
$var wire 1 u" imm_off [9] $end
$var wire 1 v" imm_off [8] $end
$var wire 1 w" imm_off [7] $end
$var wire 1 x" imm_off [6] $end
$var wire 1 y" imm_off [5] $end
$var wire 1 z" imm_off [4] $end
$var wire 1 {" imm_off [3] $end
$var wire 1 |" imm_off [2] $end
$var wire 1 }" imm_off [1] $end
$var wire 1 ~" imm_off [0] $end
$var wire 1 !# pc_branch [15] $end
$var wire 1 "# pc_branch [14] $end
$var wire 1 ## pc_branch [13] $end
$var wire 1 $# pc_branch [12] $end
$var wire 1 %# pc_branch [11] $end
$var wire 1 &# pc_branch [10] $end
$var wire 1 '# pc_branch [9] $end
$var wire 1 (# pc_branch [8] $end
$var wire 1 )# pc_branch [7] $end
$var wire 1 *# pc_branch [6] $end
$var wire 1 +# pc_branch [5] $end
$var wire 1 ,# pc_branch [4] $end
$var wire 1 -# pc_branch [3] $end
$var wire 1 .# pc_branch [2] $end
$var wire 1 /# pc_branch [1] $end
$var wire 1 0# pc_branch [0] $end
$var wire 1 1# pc_branch_temp [15] $end
$var wire 1 2# pc_branch_temp [14] $end
$var wire 1 3# pc_branch_temp [13] $end
$var wire 1 4# pc_branch_temp [12] $end
$var wire 1 5# pc_branch_temp [11] $end
$var wire 1 6# pc_branch_temp [10] $end
$var wire 1 7# pc_branch_temp [9] $end
$var wire 1 8# pc_branch_temp [8] $end
$var wire 1 9# pc_branch_temp [7] $end
$var wire 1 :# pc_branch_temp [6] $end
$var wire 1 ;# pc_branch_temp [5] $end
$var wire 1 <# pc_branch_temp [4] $end
$var wire 1 =# pc_branch_temp [3] $end
$var wire 1 ># pc_branch_temp [2] $end
$var wire 1 ?# pc_branch_temp [1] $end
$var wire 1 @# pc_branch_temp [0] $end
$var wire 1 A# pc_incr [15] $end
$var wire 1 B# pc_incr [14] $end
$var wire 1 C# pc_incr [13] $end
$var wire 1 D# pc_incr [12] $end
$var wire 1 E# pc_incr [11] $end
$var wire 1 F# pc_incr [10] $end
$var wire 1 G# pc_incr [9] $end
$var wire 1 H# pc_incr [8] $end
$var wire 1 I# pc_incr [7] $end
$var wire 1 J# pc_incr [6] $end
$var wire 1 K# pc_incr [5] $end
$var wire 1 L# pc_incr [4] $end
$var wire 1 M# pc_incr [3] $end
$var wire 1 N# pc_incr [2] $end
$var wire 1 O# pc_incr [1] $end
$var wire 1 P# pc_incr [0] $end
$var wire 1 Q# pc_descion [15] $end
$var wire 1 R# pc_descion [14] $end
$var wire 1 S# pc_descion [13] $end
$var wire 1 T# pc_descion [12] $end
$var wire 1 U# pc_descion [11] $end
$var wire 1 V# pc_descion [10] $end
$var wire 1 W# pc_descion [9] $end
$var wire 1 X# pc_descion [8] $end
$var wire 1 Y# pc_descion [7] $end
$var wire 1 Z# pc_descion [6] $end
$var wire 1 [# pc_descion [5] $end
$var wire 1 \# pc_descion [4] $end
$var wire 1 ]# pc_descion [3] $end
$var wire 1 ^# pc_descion [2] $end
$var wire 1 _# pc_descion [1] $end
$var wire 1 `# pc_descion [0] $end
$var wire 1 a# cond [2] $end
$var wire 1 b# cond [1] $end
$var wire 1 c# cond [0] $end
$var wire 1 d# flags [2] $end
$var wire 1 e# flags [1] $end
$var wire 1 f# flags [0] $end
$var wire 1 g# src_reg1_check [3] $end
$var wire 1 h# src_reg1_check [2] $end
$var wire 1 i# src_reg1_check [1] $end
$var wire 1 j# src_reg1_check [0] $end
$var wire 1 k# signals_out [9] $end
$var wire 1 l# signals_out [8] $end
$var wire 1 m# signals_out [7] $end
$var wire 1 n# signals_out [6] $end
$var wire 1 o# signals_out [5] $end
$var wire 1 p# signals_out [4] $end
$var wire 1 q# signals_out [3] $end
$var wire 1 r# signals_out [2] $end
$var wire 1 s# signals_out [1] $end
$var wire 1 t# signals_out [0] $end
$var wire 1 u# pc_write $end
$var wire 1 v# b_l $end
$var wire 1 w# hlt_sig $end
$var wire 1 x# pcs $end
$var wire 1 y# jump_register $end
$var wire 1 z# branch $end
$var wire 1 {# mem_read $end
$var wire 1 |# mem_to_reg $end
$var wire 1 }# mem_write $end
$var wire 1 ~# alu_src $end
$var wire 1 !$ reg_write $end

$scope module I_mem $end
$var parameter 32 "$ ADDR_WIDTH $end
$var wire 1 M! data_out [15] $end
$var wire 1 N! data_out [14] $end
$var wire 1 O! data_out [13] $end
$var wire 1 P! data_out [12] $end
$var wire 1 Q! data_out [11] $end
$var wire 1 R! data_out [10] $end
$var wire 1 S! data_out [9] $end
$var wire 1 T! data_out [8] $end
$var wire 1 U! data_out [7] $end
$var wire 1 V! data_out [6] $end
$var wire 1 W! data_out [5] $end
$var wire 1 X! data_out [4] $end
$var wire 1 Y! data_out [3] $end
$var wire 1 Z! data_out [2] $end
$var wire 1 [! data_out [1] $end
$var wire 1 \! data_out [0] $end
$var wire 1 #$ data_in [15] $end
$var wire 1 $$ data_in [14] $end
$var wire 1 %$ data_in [13] $end
$var wire 1 &$ data_in [12] $end
$var wire 1 '$ data_in [11] $end
$var wire 1 ($ data_in [10] $end
$var wire 1 )$ data_in [9] $end
$var wire 1 *$ data_in [8] $end
$var wire 1 +$ data_in [7] $end
$var wire 1 ,$ data_in [6] $end
$var wire 1 -$ data_in [5] $end
$var wire 1 .$ data_in [4] $end
$var wire 1 /$ data_in [3] $end
$var wire 1 0$ data_in [2] $end
$var wire 1 1$ data_in [1] $end
$var wire 1 2$ data_in [0] $end
$var wire 1 ! addr [15] $end
$var wire 1 " addr [14] $end
$var wire 1 # addr [13] $end
$var wire 1 $ addr [12] $end
$var wire 1 % addr [11] $end
$var wire 1 & addr [10] $end
$var wire 1 ' addr [9] $end
$var wire 1 ( addr [8] $end
$var wire 1 ) addr [7] $end
$var wire 1 * addr [6] $end
$var wire 1 + addr [5] $end
$var wire 1 , addr [4] $end
$var wire 1 - addr [3] $end
$var wire 1 . addr [2] $end
$var wire 1 / addr [1] $end
$var wire 1 0 addr [0] $end
$var wire 1 3$ enable $end
$var wire 1 4$ wr $end
$var wire 1 K! clk $end
$var wire 1 5$ rst $end
$var reg 1 6$ loaded $end
$upscope $end

$scope module control $end
$var parameter 4 7$ ADD $end
$var parameter 4 8$ SUB $end
$var parameter 4 9$ RED $end
$var parameter 4 :$ XOR $end
$var parameter 4 ;$ SLL $end
$var parameter 4 <$ SRA $end
$var parameter 4 =$ ROR $end
$var parameter 4 >$ PADDSB $end
$var parameter 4 ?$ LW $end
$var parameter 4 @$ SW $end
$var parameter 4 A$ LHB $end
$var parameter 4 B$ LLB $end
$var parameter 4 C$ B $end
$var parameter 4 D$ BR $end
$var parameter 4 E$ PCS $end
$var parameter 4 F$ HLT $end
$var wire 1 M! instr [15] $end
$var wire 1 N! instr [14] $end
$var wire 1 O! instr [13] $end
$var wire 1 P! instr [12] $end
$var wire 1 Q! instr [11] $end
$var wire 1 R! instr [10] $end
$var wire 1 S! instr [9] $end
$var wire 1 T! instr [8] $end
$var wire 1 U! instr [7] $end
$var wire 1 V! instr [6] $end
$var wire 1 W! instr [5] $end
$var wire 1 X! instr [4] $end
$var wire 1 Y! instr [3] $end
$var wire 1 Z! instr [2] $end
$var wire 1 [! instr [1] $end
$var wire 1 \! instr [0] $end
$var wire 1 k# signals_out [9] $end
$var wire 1 l# signals_out [8] $end
$var wire 1 m# signals_out [7] $end
$var wire 1 n# signals_out [6] $end
$var wire 1 o# signals_out [5] $end
$var wire 1 p# signals_out [4] $end
$var wire 1 q# signals_out [3] $end
$var wire 1 r# signals_out [2] $end
$var wire 1 s# signals_out [1] $end
$var wire 1 t# signals_out [0] $end
$var wire 1 o" imm_dec [15] $end
$var wire 1 p" imm_dec [14] $end
$var wire 1 q" imm_dec [13] $end
$var wire 1 r" imm_dec [12] $end
$var wire 1 s" imm_dec [11] $end
$var wire 1 t" imm_dec [10] $end
$var wire 1 u" imm_dec [9] $end
$var wire 1 v" imm_dec [8] $end
$var wire 1 w" imm_dec [7] $end
$var wire 1 x" imm_dec [6] $end
$var wire 1 y" imm_dec [5] $end
$var wire 1 z" imm_dec [4] $end
$var wire 1 {" imm_dec [3] $end
$var wire 1 |" imm_dec [2] $end
$var wire 1 }" imm_dec [1] $end
$var wire 1 ~" imm_dec [0] $end
$var wire 1 G$ Opcode [3] $end
$var wire 1 H$ Opcode [2] $end
$var wire 1 I$ Opcode [1] $end
$var wire 1 J$ Opcode [0] $end
$upscope $end

$scope module reg_file $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 !$ WriteReg $end
$var wire 1 g# SrcReg1 [3] $end
$var wire 1 h# SrcReg1 [2] $end
$var wire 1 i# SrcReg1 [1] $end
$var wire 1 j# SrcReg1 [0] $end
$var wire 1 Y! SrcReg2 [3] $end
$var wire 1 Z! SrcReg2 [2] $end
$var wire 1 [! SrcReg2 [1] $end
$var wire 1 \! SrcReg2 [0] $end
$var wire 1 Q! DstReg [3] $end
$var wire 1 R! DstReg [2] $end
$var wire 1 S! DstReg [1] $end
$var wire 1 T! DstReg [0] $end
$var wire 1 ?" DstData [15] $end
$var wire 1 @" DstData [14] $end
$var wire 1 A" DstData [13] $end
$var wire 1 B" DstData [12] $end
$var wire 1 C" DstData [11] $end
$var wire 1 D" DstData [10] $end
$var wire 1 E" DstData [9] $end
$var wire 1 F" DstData [8] $end
$var wire 1 G" DstData [7] $end
$var wire 1 H" DstData [6] $end
$var wire 1 I" DstData [5] $end
$var wire 1 J" DstData [4] $end
$var wire 1 K" DstData [3] $end
$var wire 1 L" DstData [2] $end
$var wire 1 M" DstData [1] $end
$var wire 1 N" DstData [0] $end
$var wire 1 ]! SrcData1 [15] $end
$var wire 1 ^! SrcData1 [14] $end
$var wire 1 _! SrcData1 [13] $end
$var wire 1 `! SrcData1 [12] $end
$var wire 1 a! SrcData1 [11] $end
$var wire 1 b! SrcData1 [10] $end
$var wire 1 c! SrcData1 [9] $end
$var wire 1 d! SrcData1 [8] $end
$var wire 1 e! SrcData1 [7] $end
$var wire 1 f! SrcData1 [6] $end
$var wire 1 g! SrcData1 [5] $end
$var wire 1 h! SrcData1 [4] $end
$var wire 1 i! SrcData1 [3] $end
$var wire 1 j! SrcData1 [2] $end
$var wire 1 k! SrcData1 [1] $end
$var wire 1 l! SrcData1 [0] $end
$var wire 1 m! SrcData2 [15] $end
$var wire 1 n! SrcData2 [14] $end
$var wire 1 o! SrcData2 [13] $end
$var wire 1 p! SrcData2 [12] $end
$var wire 1 q! SrcData2 [11] $end
$var wire 1 r! SrcData2 [10] $end
$var wire 1 s! SrcData2 [9] $end
$var wire 1 t! SrcData2 [8] $end
$var wire 1 u! SrcData2 [7] $end
$var wire 1 v! SrcData2 [6] $end
$var wire 1 w! SrcData2 [5] $end
$var wire 1 x! SrcData2 [4] $end
$var wire 1 y! SrcData2 [3] $end
$var wire 1 z! SrcData2 [2] $end
$var wire 1 {! SrcData2 [1] $end
$var wire 1 |! SrcData2 [0] $end
$var wire 1 L$ dec_src_reg1 [15] $end
$var wire 1 M$ dec_src_reg1 [14] $end
$var wire 1 N$ dec_src_reg1 [13] $end
$var wire 1 O$ dec_src_reg1 [12] $end
$var wire 1 P$ dec_src_reg1 [11] $end
$var wire 1 Q$ dec_src_reg1 [10] $end
$var wire 1 R$ dec_src_reg1 [9] $end
$var wire 1 S$ dec_src_reg1 [8] $end
$var wire 1 T$ dec_src_reg1 [7] $end
$var wire 1 U$ dec_src_reg1 [6] $end
$var wire 1 V$ dec_src_reg1 [5] $end
$var wire 1 W$ dec_src_reg1 [4] $end
$var wire 1 X$ dec_src_reg1 [3] $end
$var wire 1 Y$ dec_src_reg1 [2] $end
$var wire 1 Z$ dec_src_reg1 [1] $end
$var wire 1 [$ dec_src_reg1 [0] $end
$var wire 1 \$ dec_src_reg2 [15] $end
$var wire 1 ]$ dec_src_reg2 [14] $end
$var wire 1 ^$ dec_src_reg2 [13] $end
$var wire 1 _$ dec_src_reg2 [12] $end
$var wire 1 `$ dec_src_reg2 [11] $end
$var wire 1 a$ dec_src_reg2 [10] $end
$var wire 1 b$ dec_src_reg2 [9] $end
$var wire 1 c$ dec_src_reg2 [8] $end
$var wire 1 d$ dec_src_reg2 [7] $end
$var wire 1 e$ dec_src_reg2 [6] $end
$var wire 1 f$ dec_src_reg2 [5] $end
$var wire 1 g$ dec_src_reg2 [4] $end
$var wire 1 h$ dec_src_reg2 [3] $end
$var wire 1 i$ dec_src_reg2 [2] $end
$var wire 1 j$ dec_src_reg2 [1] $end
$var wire 1 k$ dec_src_reg2 [0] $end
$var wire 1 l$ dec_dst_reg [15] $end
$var wire 1 m$ dec_dst_reg [14] $end
$var wire 1 n$ dec_dst_reg [13] $end
$var wire 1 o$ dec_dst_reg [12] $end
$var wire 1 p$ dec_dst_reg [11] $end
$var wire 1 q$ dec_dst_reg [10] $end
$var wire 1 r$ dec_dst_reg [9] $end
$var wire 1 s$ dec_dst_reg [8] $end
$var wire 1 t$ dec_dst_reg [7] $end
$var wire 1 u$ dec_dst_reg [6] $end
$var wire 1 v$ dec_dst_reg [5] $end
$var wire 1 w$ dec_dst_reg [4] $end
$var wire 1 x$ dec_dst_reg [3] $end
$var wire 1 y$ dec_dst_reg [2] $end
$var wire 1 z$ dec_dst_reg [1] $end
$var wire 1 {$ dec_dst_reg [0] $end
$var wire 1 |$ temp1 [15] $end
$var wire 1 }$ temp1 [14] $end
$var wire 1 ~$ temp1 [13] $end
$var wire 1 !% temp1 [12] $end
$var wire 1 "% temp1 [11] $end
$var wire 1 #% temp1 [10] $end
$var wire 1 $% temp1 [9] $end
$var wire 1 %% temp1 [8] $end
$var wire 1 &% temp1 [7] $end
$var wire 1 '% temp1 [6] $end
$var wire 1 (% temp1 [5] $end
$var wire 1 )% temp1 [4] $end
$var wire 1 *% temp1 [3] $end
$var wire 1 +% temp1 [2] $end
$var wire 1 ,% temp1 [1] $end
$var wire 1 -% temp1 [0] $end
$var wire 1 .% temp2 [15] $end
$var wire 1 /% temp2 [14] $end
$var wire 1 0% temp2 [13] $end
$var wire 1 1% temp2 [12] $end
$var wire 1 2% temp2 [11] $end
$var wire 1 3% temp2 [10] $end
$var wire 1 4% temp2 [9] $end
$var wire 1 5% temp2 [8] $end
$var wire 1 6% temp2 [7] $end
$var wire 1 7% temp2 [6] $end
$var wire 1 8% temp2 [5] $end
$var wire 1 9% temp2 [4] $end
$var wire 1 :% temp2 [3] $end
$var wire 1 ;% temp2 [2] $end
$var wire 1 <% temp2 [1] $end
$var wire 1 =% temp2 [0] $end

$scope module Dec_SrcReg1 $end
$var wire 1 g# RegId [3] $end
$var wire 1 h# RegId [2] $end
$var wire 1 i# RegId [1] $end
$var wire 1 j# RegId [0] $end
$var wire 1 L$ Wordline [15] $end
$var wire 1 M$ Wordline [14] $end
$var wire 1 N$ Wordline [13] $end
$var wire 1 O$ Wordline [12] $end
$var wire 1 P$ Wordline [11] $end
$var wire 1 Q$ Wordline [10] $end
$var wire 1 R$ Wordline [9] $end
$var wire 1 S$ Wordline [8] $end
$var wire 1 T$ Wordline [7] $end
$var wire 1 U$ Wordline [6] $end
$var wire 1 V$ Wordline [5] $end
$var wire 1 W$ Wordline [4] $end
$var wire 1 X$ Wordline [3] $end
$var wire 1 Y$ Wordline [2] $end
$var wire 1 Z$ Wordline [1] $end
$var wire 1 [$ Wordline [0] $end
$upscope $end

$scope module Dec_SrcReg2 $end
$var wire 1 Y! RegId [3] $end
$var wire 1 Z! RegId [2] $end
$var wire 1 [! RegId [1] $end
$var wire 1 \! RegId [0] $end
$var wire 1 \$ Wordline [15] $end
$var wire 1 ]$ Wordline [14] $end
$var wire 1 ^$ Wordline [13] $end
$var wire 1 _$ Wordline [12] $end
$var wire 1 `$ Wordline [11] $end
$var wire 1 a$ Wordline [10] $end
$var wire 1 b$ Wordline [9] $end
$var wire 1 c$ Wordline [8] $end
$var wire 1 d$ Wordline [7] $end
$var wire 1 e$ Wordline [6] $end
$var wire 1 f$ Wordline [5] $end
$var wire 1 g$ Wordline [4] $end
$var wire 1 h$ Wordline [3] $end
$var wire 1 i$ Wordline [2] $end
$var wire 1 j$ Wordline [1] $end
$var wire 1 k$ Wordline [0] $end
$upscope $end

$scope module Dec_DstReg $end
$var wire 1 Q! RegId [3] $end
$var wire 1 R! RegId [2] $end
$var wire 1 S! RegId [1] $end
$var wire 1 T! RegId [0] $end
$var wire 1 !$ WriteReg $end
$var wire 1 l$ Wordline [15] $end
$var wire 1 m$ Wordline [14] $end
$var wire 1 n$ Wordline [13] $end
$var wire 1 o$ Wordline [12] $end
$var wire 1 p$ Wordline [11] $end
$var wire 1 q$ Wordline [10] $end
$var wire 1 r$ Wordline [9] $end
$var wire 1 s$ Wordline [8] $end
$var wire 1 t$ Wordline [7] $end
$var wire 1 u$ Wordline [6] $end
$var wire 1 v$ Wordline [5] $end
$var wire 1 w$ Wordline [4] $end
$var wire 1 x$ Wordline [3] $end
$var wire 1 y$ Wordline [2] $end
$var wire 1 z$ Wordline [1] $end
$var wire 1 {$ Wordline [0] $end
$upscope $end

$scope module R16 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 l$ WriteReg $end
$var wire 1 L$ ReadEnable1 $end
$var wire 1 \$ ReadEnable2 $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 |$ Bitline1 [15] $end
$var wire 1 }$ Bitline1 [14] $end
$var wire 1 ~$ Bitline1 [13] $end
$var wire 1 !% Bitline1 [12] $end
$var wire 1 "% Bitline1 [11] $end
$var wire 1 #% Bitline1 [10] $end
$var wire 1 $% Bitline1 [9] $end
$var wire 1 %% Bitline1 [8] $end
$var wire 1 &% Bitline1 [7] $end
$var wire 1 '% Bitline1 [6] $end
$var wire 1 (% Bitline1 [5] $end
$var wire 1 )% Bitline1 [4] $end
$var wire 1 *% Bitline1 [3] $end
$var wire 1 +% Bitline1 [2] $end
$var wire 1 ,% Bitline1 [1] $end
$var wire 1 -% Bitline1 [0] $end
$var wire 1 .% Bitline2 [15] $end
$var wire 1 /% Bitline2 [14] $end
$var wire 1 0% Bitline2 [13] $end
$var wire 1 1% Bitline2 [12] $end
$var wire 1 2% Bitline2 [11] $end
$var wire 1 3% Bitline2 [10] $end
$var wire 1 4% Bitline2 [9] $end
$var wire 1 5% Bitline2 [8] $end
$var wire 1 6% Bitline2 [7] $end
$var wire 1 7% Bitline2 [6] $end
$var wire 1 8% Bitline2 [5] $end
$var wire 1 9% Bitline2 [4] $end
$var wire 1 :% Bitline2 [3] $end
$var wire 1 ;% Bitline2 [2] $end
$var wire 1 <% Bitline2 [1] $end
$var wire 1 =% Bitline2 [0] $end

$scope module B_C_16 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 ?" D $end
$var wire 1 l$ WriteEnable $end
$var wire 1 L$ ReadEnabel1 $end
$var wire 1 \$ ReadEnable2 $end
$var wire 1 |$ Bitline1 $end
$var wire 1 .% Bitline2 $end
$var wire 1 >% q_2_reg $end

$scope module b_c $end
$var wire 1 >% q $end
$var wire 1 ?" d $end
$var wire 1 l$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 ?% state $end
$upscope $end
$upscope $end

$scope module B_C_15 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 @" D $end
$var wire 1 l$ WriteEnable $end
$var wire 1 L$ ReadEnabel1 $end
$var wire 1 \$ ReadEnable2 $end
$var wire 1 }$ Bitline1 $end
$var wire 1 /% Bitline2 $end
$var wire 1 @% q_2_reg $end

$scope module b_c $end
$var wire 1 @% q $end
$var wire 1 @" d $end
$var wire 1 l$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 A% state $end
$upscope $end
$upscope $end

$scope module B_C_14 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 A" D $end
$var wire 1 l$ WriteEnable $end
$var wire 1 L$ ReadEnabel1 $end
$var wire 1 \$ ReadEnable2 $end
$var wire 1 ~$ Bitline1 $end
$var wire 1 0% Bitline2 $end
$var wire 1 B% q_2_reg $end

$scope module b_c $end
$var wire 1 B% q $end
$var wire 1 A" d $end
$var wire 1 l$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 C% state $end
$upscope $end
$upscope $end

$scope module B_C_13 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 B" D $end
$var wire 1 l$ WriteEnable $end
$var wire 1 L$ ReadEnabel1 $end
$var wire 1 \$ ReadEnable2 $end
$var wire 1 !% Bitline1 $end
$var wire 1 1% Bitline2 $end
$var wire 1 D% q_2_reg $end

$scope module b_c $end
$var wire 1 D% q $end
$var wire 1 B" d $end
$var wire 1 l$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 E% state $end
$upscope $end
$upscope $end

$scope module B_C_12 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 C" D $end
$var wire 1 l$ WriteEnable $end
$var wire 1 L$ ReadEnabel1 $end
$var wire 1 \$ ReadEnable2 $end
$var wire 1 "% Bitline1 $end
$var wire 1 2% Bitline2 $end
$var wire 1 F% q_2_reg $end

$scope module b_c $end
$var wire 1 F% q $end
$var wire 1 C" d $end
$var wire 1 l$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 G% state $end
$upscope $end
$upscope $end

$scope module B_C_11 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 D" D $end
$var wire 1 l$ WriteEnable $end
$var wire 1 L$ ReadEnabel1 $end
$var wire 1 \$ ReadEnable2 $end
$var wire 1 #% Bitline1 $end
$var wire 1 3% Bitline2 $end
$var wire 1 H% q_2_reg $end

$scope module b_c $end
$var wire 1 H% q $end
$var wire 1 D" d $end
$var wire 1 l$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 I% state $end
$upscope $end
$upscope $end

$scope module B_C_10 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 E" D $end
$var wire 1 l$ WriteEnable $end
$var wire 1 L$ ReadEnabel1 $end
$var wire 1 \$ ReadEnable2 $end
$var wire 1 $% Bitline1 $end
$var wire 1 4% Bitline2 $end
$var wire 1 J% q_2_reg $end

$scope module b_c $end
$var wire 1 J% q $end
$var wire 1 E" d $end
$var wire 1 l$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 K% state $end
$upscope $end
$upscope $end

$scope module B_C_9 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 F" D $end
$var wire 1 l$ WriteEnable $end
$var wire 1 L$ ReadEnabel1 $end
$var wire 1 \$ ReadEnable2 $end
$var wire 1 %% Bitline1 $end
$var wire 1 5% Bitline2 $end
$var wire 1 L% q_2_reg $end

$scope module b_c $end
$var wire 1 L% q $end
$var wire 1 F" d $end
$var wire 1 l$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 M% state $end
$upscope $end
$upscope $end

$scope module B_C_8 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 G" D $end
$var wire 1 l$ WriteEnable $end
$var wire 1 L$ ReadEnabel1 $end
$var wire 1 \$ ReadEnable2 $end
$var wire 1 &% Bitline1 $end
$var wire 1 6% Bitline2 $end
$var wire 1 N% q_2_reg $end

$scope module b_c $end
$var wire 1 N% q $end
$var wire 1 G" d $end
$var wire 1 l$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 O% state $end
$upscope $end
$upscope $end

$scope module B_C_7 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 H" D $end
$var wire 1 l$ WriteEnable $end
$var wire 1 L$ ReadEnabel1 $end
$var wire 1 \$ ReadEnable2 $end
$var wire 1 '% Bitline1 $end
$var wire 1 7% Bitline2 $end
$var wire 1 P% q_2_reg $end

$scope module b_c $end
$var wire 1 P% q $end
$var wire 1 H" d $end
$var wire 1 l$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 Q% state $end
$upscope $end
$upscope $end

$scope module B_C_6 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 I" D $end
$var wire 1 l$ WriteEnable $end
$var wire 1 L$ ReadEnabel1 $end
$var wire 1 \$ ReadEnable2 $end
$var wire 1 (% Bitline1 $end
$var wire 1 8% Bitline2 $end
$var wire 1 R% q_2_reg $end

$scope module b_c $end
$var wire 1 R% q $end
$var wire 1 I" d $end
$var wire 1 l$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 S% state $end
$upscope $end
$upscope $end

$scope module B_C_5 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 J" D $end
$var wire 1 l$ WriteEnable $end
$var wire 1 L$ ReadEnabel1 $end
$var wire 1 \$ ReadEnable2 $end
$var wire 1 )% Bitline1 $end
$var wire 1 9% Bitline2 $end
$var wire 1 T% q_2_reg $end

$scope module b_c $end
$var wire 1 T% q $end
$var wire 1 J" d $end
$var wire 1 l$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 U% state $end
$upscope $end
$upscope $end

$scope module B_C_4 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 K" D $end
$var wire 1 l$ WriteEnable $end
$var wire 1 L$ ReadEnabel1 $end
$var wire 1 \$ ReadEnable2 $end
$var wire 1 *% Bitline1 $end
$var wire 1 :% Bitline2 $end
$var wire 1 V% q_2_reg $end

$scope module b_c $end
$var wire 1 V% q $end
$var wire 1 K" d $end
$var wire 1 l$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 W% state $end
$upscope $end
$upscope $end

$scope module B_C_3 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 L" D $end
$var wire 1 l$ WriteEnable $end
$var wire 1 L$ ReadEnabel1 $end
$var wire 1 \$ ReadEnable2 $end
$var wire 1 +% Bitline1 $end
$var wire 1 ;% Bitline2 $end
$var wire 1 X% q_2_reg $end

$scope module b_c $end
$var wire 1 X% q $end
$var wire 1 L" d $end
$var wire 1 l$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 Y% state $end
$upscope $end
$upscope $end

$scope module B_C_2 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 M" D $end
$var wire 1 l$ WriteEnable $end
$var wire 1 L$ ReadEnabel1 $end
$var wire 1 \$ ReadEnable2 $end
$var wire 1 ,% Bitline1 $end
$var wire 1 <% Bitline2 $end
$var wire 1 Z% q_2_reg $end

$scope module b_c $end
$var wire 1 Z% q $end
$var wire 1 M" d $end
$var wire 1 l$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 [% state $end
$upscope $end
$upscope $end

$scope module B_C_1 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 N" D $end
$var wire 1 l$ WriteEnable $end
$var wire 1 L$ ReadEnabel1 $end
$var wire 1 \$ ReadEnable2 $end
$var wire 1 -% Bitline1 $end
$var wire 1 =% Bitline2 $end
$var wire 1 \% q_2_reg $end

$scope module b_c $end
$var wire 1 \% q $end
$var wire 1 N" d $end
$var wire 1 l$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 ]% state $end
$upscope $end
$upscope $end
$upscope $end

$scope module R15 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 m$ WriteReg $end
$var wire 1 M$ ReadEnable1 $end
$var wire 1 ]$ ReadEnable2 $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 |$ Bitline1 [15] $end
$var wire 1 }$ Bitline1 [14] $end
$var wire 1 ~$ Bitline1 [13] $end
$var wire 1 !% Bitline1 [12] $end
$var wire 1 "% Bitline1 [11] $end
$var wire 1 #% Bitline1 [10] $end
$var wire 1 $% Bitline1 [9] $end
$var wire 1 %% Bitline1 [8] $end
$var wire 1 &% Bitline1 [7] $end
$var wire 1 '% Bitline1 [6] $end
$var wire 1 (% Bitline1 [5] $end
$var wire 1 )% Bitline1 [4] $end
$var wire 1 *% Bitline1 [3] $end
$var wire 1 +% Bitline1 [2] $end
$var wire 1 ,% Bitline1 [1] $end
$var wire 1 -% Bitline1 [0] $end
$var wire 1 .% Bitline2 [15] $end
$var wire 1 /% Bitline2 [14] $end
$var wire 1 0% Bitline2 [13] $end
$var wire 1 1% Bitline2 [12] $end
$var wire 1 2% Bitline2 [11] $end
$var wire 1 3% Bitline2 [10] $end
$var wire 1 4% Bitline2 [9] $end
$var wire 1 5% Bitline2 [8] $end
$var wire 1 6% Bitline2 [7] $end
$var wire 1 7% Bitline2 [6] $end
$var wire 1 8% Bitline2 [5] $end
$var wire 1 9% Bitline2 [4] $end
$var wire 1 :% Bitline2 [3] $end
$var wire 1 ;% Bitline2 [2] $end
$var wire 1 <% Bitline2 [1] $end
$var wire 1 =% Bitline2 [0] $end

$scope module B_C_16 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 ?" D $end
$var wire 1 m$ WriteEnable $end
$var wire 1 M$ ReadEnabel1 $end
$var wire 1 ]$ ReadEnable2 $end
$var wire 1 |$ Bitline1 $end
$var wire 1 .% Bitline2 $end
$var wire 1 ^% q_2_reg $end

$scope module b_c $end
$var wire 1 ^% q $end
$var wire 1 ?" d $end
$var wire 1 m$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 _% state $end
$upscope $end
$upscope $end

$scope module B_C_15 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 @" D $end
$var wire 1 m$ WriteEnable $end
$var wire 1 M$ ReadEnabel1 $end
$var wire 1 ]$ ReadEnable2 $end
$var wire 1 }$ Bitline1 $end
$var wire 1 /% Bitline2 $end
$var wire 1 `% q_2_reg $end

$scope module b_c $end
$var wire 1 `% q $end
$var wire 1 @" d $end
$var wire 1 m$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 a% state $end
$upscope $end
$upscope $end

$scope module B_C_14 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 A" D $end
$var wire 1 m$ WriteEnable $end
$var wire 1 M$ ReadEnabel1 $end
$var wire 1 ]$ ReadEnable2 $end
$var wire 1 ~$ Bitline1 $end
$var wire 1 0% Bitline2 $end
$var wire 1 b% q_2_reg $end

$scope module b_c $end
$var wire 1 b% q $end
$var wire 1 A" d $end
$var wire 1 m$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 c% state $end
$upscope $end
$upscope $end

$scope module B_C_13 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 B" D $end
$var wire 1 m$ WriteEnable $end
$var wire 1 M$ ReadEnabel1 $end
$var wire 1 ]$ ReadEnable2 $end
$var wire 1 !% Bitline1 $end
$var wire 1 1% Bitline2 $end
$var wire 1 d% q_2_reg $end

$scope module b_c $end
$var wire 1 d% q $end
$var wire 1 B" d $end
$var wire 1 m$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 e% state $end
$upscope $end
$upscope $end

$scope module B_C_12 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 C" D $end
$var wire 1 m$ WriteEnable $end
$var wire 1 M$ ReadEnabel1 $end
$var wire 1 ]$ ReadEnable2 $end
$var wire 1 "% Bitline1 $end
$var wire 1 2% Bitline2 $end
$var wire 1 f% q_2_reg $end

$scope module b_c $end
$var wire 1 f% q $end
$var wire 1 C" d $end
$var wire 1 m$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 g% state $end
$upscope $end
$upscope $end

$scope module B_C_11 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 D" D $end
$var wire 1 m$ WriteEnable $end
$var wire 1 M$ ReadEnabel1 $end
$var wire 1 ]$ ReadEnable2 $end
$var wire 1 #% Bitline1 $end
$var wire 1 3% Bitline2 $end
$var wire 1 h% q_2_reg $end

$scope module b_c $end
$var wire 1 h% q $end
$var wire 1 D" d $end
$var wire 1 m$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 i% state $end
$upscope $end
$upscope $end

$scope module B_C_10 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 E" D $end
$var wire 1 m$ WriteEnable $end
$var wire 1 M$ ReadEnabel1 $end
$var wire 1 ]$ ReadEnable2 $end
$var wire 1 $% Bitline1 $end
$var wire 1 4% Bitline2 $end
$var wire 1 j% q_2_reg $end

$scope module b_c $end
$var wire 1 j% q $end
$var wire 1 E" d $end
$var wire 1 m$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 k% state $end
$upscope $end
$upscope $end

$scope module B_C_9 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 F" D $end
$var wire 1 m$ WriteEnable $end
$var wire 1 M$ ReadEnabel1 $end
$var wire 1 ]$ ReadEnable2 $end
$var wire 1 %% Bitline1 $end
$var wire 1 5% Bitline2 $end
$var wire 1 l% q_2_reg $end

$scope module b_c $end
$var wire 1 l% q $end
$var wire 1 F" d $end
$var wire 1 m$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 m% state $end
$upscope $end
$upscope $end

$scope module B_C_8 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 G" D $end
$var wire 1 m$ WriteEnable $end
$var wire 1 M$ ReadEnabel1 $end
$var wire 1 ]$ ReadEnable2 $end
$var wire 1 &% Bitline1 $end
$var wire 1 6% Bitline2 $end
$var wire 1 n% q_2_reg $end

$scope module b_c $end
$var wire 1 n% q $end
$var wire 1 G" d $end
$var wire 1 m$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 o% state $end
$upscope $end
$upscope $end

$scope module B_C_7 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 H" D $end
$var wire 1 m$ WriteEnable $end
$var wire 1 M$ ReadEnabel1 $end
$var wire 1 ]$ ReadEnable2 $end
$var wire 1 '% Bitline1 $end
$var wire 1 7% Bitline2 $end
$var wire 1 p% q_2_reg $end

$scope module b_c $end
$var wire 1 p% q $end
$var wire 1 H" d $end
$var wire 1 m$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 q% state $end
$upscope $end
$upscope $end

$scope module B_C_6 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 I" D $end
$var wire 1 m$ WriteEnable $end
$var wire 1 M$ ReadEnabel1 $end
$var wire 1 ]$ ReadEnable2 $end
$var wire 1 (% Bitline1 $end
$var wire 1 8% Bitline2 $end
$var wire 1 r% q_2_reg $end

$scope module b_c $end
$var wire 1 r% q $end
$var wire 1 I" d $end
$var wire 1 m$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 s% state $end
$upscope $end
$upscope $end

$scope module B_C_5 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 J" D $end
$var wire 1 m$ WriteEnable $end
$var wire 1 M$ ReadEnabel1 $end
$var wire 1 ]$ ReadEnable2 $end
$var wire 1 )% Bitline1 $end
$var wire 1 9% Bitline2 $end
$var wire 1 t% q_2_reg $end

$scope module b_c $end
$var wire 1 t% q $end
$var wire 1 J" d $end
$var wire 1 m$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 u% state $end
$upscope $end
$upscope $end

$scope module B_C_4 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 K" D $end
$var wire 1 m$ WriteEnable $end
$var wire 1 M$ ReadEnabel1 $end
$var wire 1 ]$ ReadEnable2 $end
$var wire 1 *% Bitline1 $end
$var wire 1 :% Bitline2 $end
$var wire 1 v% q_2_reg $end

$scope module b_c $end
$var wire 1 v% q $end
$var wire 1 K" d $end
$var wire 1 m$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 w% state $end
$upscope $end
$upscope $end

$scope module B_C_3 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 L" D $end
$var wire 1 m$ WriteEnable $end
$var wire 1 M$ ReadEnabel1 $end
$var wire 1 ]$ ReadEnable2 $end
$var wire 1 +% Bitline1 $end
$var wire 1 ;% Bitline2 $end
$var wire 1 x% q_2_reg $end

$scope module b_c $end
$var wire 1 x% q $end
$var wire 1 L" d $end
$var wire 1 m$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 y% state $end
$upscope $end
$upscope $end

$scope module B_C_2 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 M" D $end
$var wire 1 m$ WriteEnable $end
$var wire 1 M$ ReadEnabel1 $end
$var wire 1 ]$ ReadEnable2 $end
$var wire 1 ,% Bitline1 $end
$var wire 1 <% Bitline2 $end
$var wire 1 z% q_2_reg $end

$scope module b_c $end
$var wire 1 z% q $end
$var wire 1 M" d $end
$var wire 1 m$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 {% state $end
$upscope $end
$upscope $end

$scope module B_C_1 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 N" D $end
$var wire 1 m$ WriteEnable $end
$var wire 1 M$ ReadEnabel1 $end
$var wire 1 ]$ ReadEnable2 $end
$var wire 1 -% Bitline1 $end
$var wire 1 =% Bitline2 $end
$var wire 1 |% q_2_reg $end

$scope module b_c $end
$var wire 1 |% q $end
$var wire 1 N" d $end
$var wire 1 m$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 }% state $end
$upscope $end
$upscope $end
$upscope $end

$scope module R14 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 n$ WriteReg $end
$var wire 1 N$ ReadEnable1 $end
$var wire 1 ^$ ReadEnable2 $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 |$ Bitline1 [15] $end
$var wire 1 }$ Bitline1 [14] $end
$var wire 1 ~$ Bitline1 [13] $end
$var wire 1 !% Bitline1 [12] $end
$var wire 1 "% Bitline1 [11] $end
$var wire 1 #% Bitline1 [10] $end
$var wire 1 $% Bitline1 [9] $end
$var wire 1 %% Bitline1 [8] $end
$var wire 1 &% Bitline1 [7] $end
$var wire 1 '% Bitline1 [6] $end
$var wire 1 (% Bitline1 [5] $end
$var wire 1 )% Bitline1 [4] $end
$var wire 1 *% Bitline1 [3] $end
$var wire 1 +% Bitline1 [2] $end
$var wire 1 ,% Bitline1 [1] $end
$var wire 1 -% Bitline1 [0] $end
$var wire 1 .% Bitline2 [15] $end
$var wire 1 /% Bitline2 [14] $end
$var wire 1 0% Bitline2 [13] $end
$var wire 1 1% Bitline2 [12] $end
$var wire 1 2% Bitline2 [11] $end
$var wire 1 3% Bitline2 [10] $end
$var wire 1 4% Bitline2 [9] $end
$var wire 1 5% Bitline2 [8] $end
$var wire 1 6% Bitline2 [7] $end
$var wire 1 7% Bitline2 [6] $end
$var wire 1 8% Bitline2 [5] $end
$var wire 1 9% Bitline2 [4] $end
$var wire 1 :% Bitline2 [3] $end
$var wire 1 ;% Bitline2 [2] $end
$var wire 1 <% Bitline2 [1] $end
$var wire 1 =% Bitline2 [0] $end

$scope module B_C_16 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 ?" D $end
$var wire 1 n$ WriteEnable $end
$var wire 1 N$ ReadEnabel1 $end
$var wire 1 ^$ ReadEnable2 $end
$var wire 1 |$ Bitline1 $end
$var wire 1 .% Bitline2 $end
$var wire 1 ~% q_2_reg $end

$scope module b_c $end
$var wire 1 ~% q $end
$var wire 1 ?" d $end
$var wire 1 n$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 !& state $end
$upscope $end
$upscope $end

$scope module B_C_15 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 @" D $end
$var wire 1 n$ WriteEnable $end
$var wire 1 N$ ReadEnabel1 $end
$var wire 1 ^$ ReadEnable2 $end
$var wire 1 }$ Bitline1 $end
$var wire 1 /% Bitline2 $end
$var wire 1 "& q_2_reg $end

$scope module b_c $end
$var wire 1 "& q $end
$var wire 1 @" d $end
$var wire 1 n$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 #& state $end
$upscope $end
$upscope $end

$scope module B_C_14 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 A" D $end
$var wire 1 n$ WriteEnable $end
$var wire 1 N$ ReadEnabel1 $end
$var wire 1 ^$ ReadEnable2 $end
$var wire 1 ~$ Bitline1 $end
$var wire 1 0% Bitline2 $end
$var wire 1 $& q_2_reg $end

$scope module b_c $end
$var wire 1 $& q $end
$var wire 1 A" d $end
$var wire 1 n$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 %& state $end
$upscope $end
$upscope $end

$scope module B_C_13 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 B" D $end
$var wire 1 n$ WriteEnable $end
$var wire 1 N$ ReadEnabel1 $end
$var wire 1 ^$ ReadEnable2 $end
$var wire 1 !% Bitline1 $end
$var wire 1 1% Bitline2 $end
$var wire 1 && q_2_reg $end

$scope module b_c $end
$var wire 1 && q $end
$var wire 1 B" d $end
$var wire 1 n$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 '& state $end
$upscope $end
$upscope $end

$scope module B_C_12 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 C" D $end
$var wire 1 n$ WriteEnable $end
$var wire 1 N$ ReadEnabel1 $end
$var wire 1 ^$ ReadEnable2 $end
$var wire 1 "% Bitline1 $end
$var wire 1 2% Bitline2 $end
$var wire 1 (& q_2_reg $end

$scope module b_c $end
$var wire 1 (& q $end
$var wire 1 C" d $end
$var wire 1 n$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 )& state $end
$upscope $end
$upscope $end

$scope module B_C_11 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 D" D $end
$var wire 1 n$ WriteEnable $end
$var wire 1 N$ ReadEnabel1 $end
$var wire 1 ^$ ReadEnable2 $end
$var wire 1 #% Bitline1 $end
$var wire 1 3% Bitline2 $end
$var wire 1 *& q_2_reg $end

$scope module b_c $end
$var wire 1 *& q $end
$var wire 1 D" d $end
$var wire 1 n$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 +& state $end
$upscope $end
$upscope $end

$scope module B_C_10 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 E" D $end
$var wire 1 n$ WriteEnable $end
$var wire 1 N$ ReadEnabel1 $end
$var wire 1 ^$ ReadEnable2 $end
$var wire 1 $% Bitline1 $end
$var wire 1 4% Bitline2 $end
$var wire 1 ,& q_2_reg $end

$scope module b_c $end
$var wire 1 ,& q $end
$var wire 1 E" d $end
$var wire 1 n$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 -& state $end
$upscope $end
$upscope $end

$scope module B_C_9 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 F" D $end
$var wire 1 n$ WriteEnable $end
$var wire 1 N$ ReadEnabel1 $end
$var wire 1 ^$ ReadEnable2 $end
$var wire 1 %% Bitline1 $end
$var wire 1 5% Bitline2 $end
$var wire 1 .& q_2_reg $end

$scope module b_c $end
$var wire 1 .& q $end
$var wire 1 F" d $end
$var wire 1 n$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 /& state $end
$upscope $end
$upscope $end

$scope module B_C_8 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 G" D $end
$var wire 1 n$ WriteEnable $end
$var wire 1 N$ ReadEnabel1 $end
$var wire 1 ^$ ReadEnable2 $end
$var wire 1 &% Bitline1 $end
$var wire 1 6% Bitline2 $end
$var wire 1 0& q_2_reg $end

$scope module b_c $end
$var wire 1 0& q $end
$var wire 1 G" d $end
$var wire 1 n$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 1& state $end
$upscope $end
$upscope $end

$scope module B_C_7 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 H" D $end
$var wire 1 n$ WriteEnable $end
$var wire 1 N$ ReadEnabel1 $end
$var wire 1 ^$ ReadEnable2 $end
$var wire 1 '% Bitline1 $end
$var wire 1 7% Bitline2 $end
$var wire 1 2& q_2_reg $end

$scope module b_c $end
$var wire 1 2& q $end
$var wire 1 H" d $end
$var wire 1 n$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 3& state $end
$upscope $end
$upscope $end

$scope module B_C_6 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 I" D $end
$var wire 1 n$ WriteEnable $end
$var wire 1 N$ ReadEnabel1 $end
$var wire 1 ^$ ReadEnable2 $end
$var wire 1 (% Bitline1 $end
$var wire 1 8% Bitline2 $end
$var wire 1 4& q_2_reg $end

$scope module b_c $end
$var wire 1 4& q $end
$var wire 1 I" d $end
$var wire 1 n$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 5& state $end
$upscope $end
$upscope $end

$scope module B_C_5 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 J" D $end
$var wire 1 n$ WriteEnable $end
$var wire 1 N$ ReadEnabel1 $end
$var wire 1 ^$ ReadEnable2 $end
$var wire 1 )% Bitline1 $end
$var wire 1 9% Bitline2 $end
$var wire 1 6& q_2_reg $end

$scope module b_c $end
$var wire 1 6& q $end
$var wire 1 J" d $end
$var wire 1 n$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 7& state $end
$upscope $end
$upscope $end

$scope module B_C_4 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 K" D $end
$var wire 1 n$ WriteEnable $end
$var wire 1 N$ ReadEnabel1 $end
$var wire 1 ^$ ReadEnable2 $end
$var wire 1 *% Bitline1 $end
$var wire 1 :% Bitline2 $end
$var wire 1 8& q_2_reg $end

$scope module b_c $end
$var wire 1 8& q $end
$var wire 1 K" d $end
$var wire 1 n$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 9& state $end
$upscope $end
$upscope $end

$scope module B_C_3 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 L" D $end
$var wire 1 n$ WriteEnable $end
$var wire 1 N$ ReadEnabel1 $end
$var wire 1 ^$ ReadEnable2 $end
$var wire 1 +% Bitline1 $end
$var wire 1 ;% Bitline2 $end
$var wire 1 :& q_2_reg $end

$scope module b_c $end
$var wire 1 :& q $end
$var wire 1 L" d $end
$var wire 1 n$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 ;& state $end
$upscope $end
$upscope $end

$scope module B_C_2 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 M" D $end
$var wire 1 n$ WriteEnable $end
$var wire 1 N$ ReadEnabel1 $end
$var wire 1 ^$ ReadEnable2 $end
$var wire 1 ,% Bitline1 $end
$var wire 1 <% Bitline2 $end
$var wire 1 <& q_2_reg $end

$scope module b_c $end
$var wire 1 <& q $end
$var wire 1 M" d $end
$var wire 1 n$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 =& state $end
$upscope $end
$upscope $end

$scope module B_C_1 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 N" D $end
$var wire 1 n$ WriteEnable $end
$var wire 1 N$ ReadEnabel1 $end
$var wire 1 ^$ ReadEnable2 $end
$var wire 1 -% Bitline1 $end
$var wire 1 =% Bitline2 $end
$var wire 1 >& q_2_reg $end

$scope module b_c $end
$var wire 1 >& q $end
$var wire 1 N" d $end
$var wire 1 n$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 ?& state $end
$upscope $end
$upscope $end
$upscope $end

$scope module R13 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 o$ WriteReg $end
$var wire 1 O$ ReadEnable1 $end
$var wire 1 _$ ReadEnable2 $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 |$ Bitline1 [15] $end
$var wire 1 }$ Bitline1 [14] $end
$var wire 1 ~$ Bitline1 [13] $end
$var wire 1 !% Bitline1 [12] $end
$var wire 1 "% Bitline1 [11] $end
$var wire 1 #% Bitline1 [10] $end
$var wire 1 $% Bitline1 [9] $end
$var wire 1 %% Bitline1 [8] $end
$var wire 1 &% Bitline1 [7] $end
$var wire 1 '% Bitline1 [6] $end
$var wire 1 (% Bitline1 [5] $end
$var wire 1 )% Bitline1 [4] $end
$var wire 1 *% Bitline1 [3] $end
$var wire 1 +% Bitline1 [2] $end
$var wire 1 ,% Bitline1 [1] $end
$var wire 1 -% Bitline1 [0] $end
$var wire 1 .% Bitline2 [15] $end
$var wire 1 /% Bitline2 [14] $end
$var wire 1 0% Bitline2 [13] $end
$var wire 1 1% Bitline2 [12] $end
$var wire 1 2% Bitline2 [11] $end
$var wire 1 3% Bitline2 [10] $end
$var wire 1 4% Bitline2 [9] $end
$var wire 1 5% Bitline2 [8] $end
$var wire 1 6% Bitline2 [7] $end
$var wire 1 7% Bitline2 [6] $end
$var wire 1 8% Bitline2 [5] $end
$var wire 1 9% Bitline2 [4] $end
$var wire 1 :% Bitline2 [3] $end
$var wire 1 ;% Bitline2 [2] $end
$var wire 1 <% Bitline2 [1] $end
$var wire 1 =% Bitline2 [0] $end

$scope module B_C_16 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 ?" D $end
$var wire 1 o$ WriteEnable $end
$var wire 1 O$ ReadEnabel1 $end
$var wire 1 _$ ReadEnable2 $end
$var wire 1 |$ Bitline1 $end
$var wire 1 .% Bitline2 $end
$var wire 1 @& q_2_reg $end

$scope module b_c $end
$var wire 1 @& q $end
$var wire 1 ?" d $end
$var wire 1 o$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 A& state $end
$upscope $end
$upscope $end

$scope module B_C_15 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 @" D $end
$var wire 1 o$ WriteEnable $end
$var wire 1 O$ ReadEnabel1 $end
$var wire 1 _$ ReadEnable2 $end
$var wire 1 }$ Bitline1 $end
$var wire 1 /% Bitline2 $end
$var wire 1 B& q_2_reg $end

$scope module b_c $end
$var wire 1 B& q $end
$var wire 1 @" d $end
$var wire 1 o$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 C& state $end
$upscope $end
$upscope $end

$scope module B_C_14 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 A" D $end
$var wire 1 o$ WriteEnable $end
$var wire 1 O$ ReadEnabel1 $end
$var wire 1 _$ ReadEnable2 $end
$var wire 1 ~$ Bitline1 $end
$var wire 1 0% Bitline2 $end
$var wire 1 D& q_2_reg $end

$scope module b_c $end
$var wire 1 D& q $end
$var wire 1 A" d $end
$var wire 1 o$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 E& state $end
$upscope $end
$upscope $end

$scope module B_C_13 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 B" D $end
$var wire 1 o$ WriteEnable $end
$var wire 1 O$ ReadEnabel1 $end
$var wire 1 _$ ReadEnable2 $end
$var wire 1 !% Bitline1 $end
$var wire 1 1% Bitline2 $end
$var wire 1 F& q_2_reg $end

$scope module b_c $end
$var wire 1 F& q $end
$var wire 1 B" d $end
$var wire 1 o$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 G& state $end
$upscope $end
$upscope $end

$scope module B_C_12 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 C" D $end
$var wire 1 o$ WriteEnable $end
$var wire 1 O$ ReadEnabel1 $end
$var wire 1 _$ ReadEnable2 $end
$var wire 1 "% Bitline1 $end
$var wire 1 2% Bitline2 $end
$var wire 1 H& q_2_reg $end

$scope module b_c $end
$var wire 1 H& q $end
$var wire 1 C" d $end
$var wire 1 o$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 I& state $end
$upscope $end
$upscope $end

$scope module B_C_11 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 D" D $end
$var wire 1 o$ WriteEnable $end
$var wire 1 O$ ReadEnabel1 $end
$var wire 1 _$ ReadEnable2 $end
$var wire 1 #% Bitline1 $end
$var wire 1 3% Bitline2 $end
$var wire 1 J& q_2_reg $end

$scope module b_c $end
$var wire 1 J& q $end
$var wire 1 D" d $end
$var wire 1 o$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 K& state $end
$upscope $end
$upscope $end

$scope module B_C_10 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 E" D $end
$var wire 1 o$ WriteEnable $end
$var wire 1 O$ ReadEnabel1 $end
$var wire 1 _$ ReadEnable2 $end
$var wire 1 $% Bitline1 $end
$var wire 1 4% Bitline2 $end
$var wire 1 L& q_2_reg $end

$scope module b_c $end
$var wire 1 L& q $end
$var wire 1 E" d $end
$var wire 1 o$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 M& state $end
$upscope $end
$upscope $end

$scope module B_C_9 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 F" D $end
$var wire 1 o$ WriteEnable $end
$var wire 1 O$ ReadEnabel1 $end
$var wire 1 _$ ReadEnable2 $end
$var wire 1 %% Bitline1 $end
$var wire 1 5% Bitline2 $end
$var wire 1 N& q_2_reg $end

$scope module b_c $end
$var wire 1 N& q $end
$var wire 1 F" d $end
$var wire 1 o$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 O& state $end
$upscope $end
$upscope $end

$scope module B_C_8 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 G" D $end
$var wire 1 o$ WriteEnable $end
$var wire 1 O$ ReadEnabel1 $end
$var wire 1 _$ ReadEnable2 $end
$var wire 1 &% Bitline1 $end
$var wire 1 6% Bitline2 $end
$var wire 1 P& q_2_reg $end

$scope module b_c $end
$var wire 1 P& q $end
$var wire 1 G" d $end
$var wire 1 o$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 Q& state $end
$upscope $end
$upscope $end

$scope module B_C_7 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 H" D $end
$var wire 1 o$ WriteEnable $end
$var wire 1 O$ ReadEnabel1 $end
$var wire 1 _$ ReadEnable2 $end
$var wire 1 '% Bitline1 $end
$var wire 1 7% Bitline2 $end
$var wire 1 R& q_2_reg $end

$scope module b_c $end
$var wire 1 R& q $end
$var wire 1 H" d $end
$var wire 1 o$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 S& state $end
$upscope $end
$upscope $end

$scope module B_C_6 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 I" D $end
$var wire 1 o$ WriteEnable $end
$var wire 1 O$ ReadEnabel1 $end
$var wire 1 _$ ReadEnable2 $end
$var wire 1 (% Bitline1 $end
$var wire 1 8% Bitline2 $end
$var wire 1 T& q_2_reg $end

$scope module b_c $end
$var wire 1 T& q $end
$var wire 1 I" d $end
$var wire 1 o$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 U& state $end
$upscope $end
$upscope $end

$scope module B_C_5 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 J" D $end
$var wire 1 o$ WriteEnable $end
$var wire 1 O$ ReadEnabel1 $end
$var wire 1 _$ ReadEnable2 $end
$var wire 1 )% Bitline1 $end
$var wire 1 9% Bitline2 $end
$var wire 1 V& q_2_reg $end

$scope module b_c $end
$var wire 1 V& q $end
$var wire 1 J" d $end
$var wire 1 o$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 W& state $end
$upscope $end
$upscope $end

$scope module B_C_4 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 K" D $end
$var wire 1 o$ WriteEnable $end
$var wire 1 O$ ReadEnabel1 $end
$var wire 1 _$ ReadEnable2 $end
$var wire 1 *% Bitline1 $end
$var wire 1 :% Bitline2 $end
$var wire 1 X& q_2_reg $end

$scope module b_c $end
$var wire 1 X& q $end
$var wire 1 K" d $end
$var wire 1 o$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 Y& state $end
$upscope $end
$upscope $end

$scope module B_C_3 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 L" D $end
$var wire 1 o$ WriteEnable $end
$var wire 1 O$ ReadEnabel1 $end
$var wire 1 _$ ReadEnable2 $end
$var wire 1 +% Bitline1 $end
$var wire 1 ;% Bitline2 $end
$var wire 1 Z& q_2_reg $end

$scope module b_c $end
$var wire 1 Z& q $end
$var wire 1 L" d $end
$var wire 1 o$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 [& state $end
$upscope $end
$upscope $end

$scope module B_C_2 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 M" D $end
$var wire 1 o$ WriteEnable $end
$var wire 1 O$ ReadEnabel1 $end
$var wire 1 _$ ReadEnable2 $end
$var wire 1 ,% Bitline1 $end
$var wire 1 <% Bitline2 $end
$var wire 1 \& q_2_reg $end

$scope module b_c $end
$var wire 1 \& q $end
$var wire 1 M" d $end
$var wire 1 o$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 ]& state $end
$upscope $end
$upscope $end

$scope module B_C_1 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 N" D $end
$var wire 1 o$ WriteEnable $end
$var wire 1 O$ ReadEnabel1 $end
$var wire 1 _$ ReadEnable2 $end
$var wire 1 -% Bitline1 $end
$var wire 1 =% Bitline2 $end
$var wire 1 ^& q_2_reg $end

$scope module b_c $end
$var wire 1 ^& q $end
$var wire 1 N" d $end
$var wire 1 o$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 _& state $end
$upscope $end
$upscope $end
$upscope $end

$scope module R12 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 p$ WriteReg $end
$var wire 1 P$ ReadEnable1 $end
$var wire 1 `$ ReadEnable2 $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 |$ Bitline1 [15] $end
$var wire 1 }$ Bitline1 [14] $end
$var wire 1 ~$ Bitline1 [13] $end
$var wire 1 !% Bitline1 [12] $end
$var wire 1 "% Bitline1 [11] $end
$var wire 1 #% Bitline1 [10] $end
$var wire 1 $% Bitline1 [9] $end
$var wire 1 %% Bitline1 [8] $end
$var wire 1 &% Bitline1 [7] $end
$var wire 1 '% Bitline1 [6] $end
$var wire 1 (% Bitline1 [5] $end
$var wire 1 )% Bitline1 [4] $end
$var wire 1 *% Bitline1 [3] $end
$var wire 1 +% Bitline1 [2] $end
$var wire 1 ,% Bitline1 [1] $end
$var wire 1 -% Bitline1 [0] $end
$var wire 1 .% Bitline2 [15] $end
$var wire 1 /% Bitline2 [14] $end
$var wire 1 0% Bitline2 [13] $end
$var wire 1 1% Bitline2 [12] $end
$var wire 1 2% Bitline2 [11] $end
$var wire 1 3% Bitline2 [10] $end
$var wire 1 4% Bitline2 [9] $end
$var wire 1 5% Bitline2 [8] $end
$var wire 1 6% Bitline2 [7] $end
$var wire 1 7% Bitline2 [6] $end
$var wire 1 8% Bitline2 [5] $end
$var wire 1 9% Bitline2 [4] $end
$var wire 1 :% Bitline2 [3] $end
$var wire 1 ;% Bitline2 [2] $end
$var wire 1 <% Bitline2 [1] $end
$var wire 1 =% Bitline2 [0] $end

$scope module B_C_16 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 ?" D $end
$var wire 1 p$ WriteEnable $end
$var wire 1 P$ ReadEnabel1 $end
$var wire 1 `$ ReadEnable2 $end
$var wire 1 |$ Bitline1 $end
$var wire 1 .% Bitline2 $end
$var wire 1 `& q_2_reg $end

$scope module b_c $end
$var wire 1 `& q $end
$var wire 1 ?" d $end
$var wire 1 p$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 a& state $end
$upscope $end
$upscope $end

$scope module B_C_15 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 @" D $end
$var wire 1 p$ WriteEnable $end
$var wire 1 P$ ReadEnabel1 $end
$var wire 1 `$ ReadEnable2 $end
$var wire 1 }$ Bitline1 $end
$var wire 1 /% Bitline2 $end
$var wire 1 b& q_2_reg $end

$scope module b_c $end
$var wire 1 b& q $end
$var wire 1 @" d $end
$var wire 1 p$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 c& state $end
$upscope $end
$upscope $end

$scope module B_C_14 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 A" D $end
$var wire 1 p$ WriteEnable $end
$var wire 1 P$ ReadEnabel1 $end
$var wire 1 `$ ReadEnable2 $end
$var wire 1 ~$ Bitline1 $end
$var wire 1 0% Bitline2 $end
$var wire 1 d& q_2_reg $end

$scope module b_c $end
$var wire 1 d& q $end
$var wire 1 A" d $end
$var wire 1 p$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 e& state $end
$upscope $end
$upscope $end

$scope module B_C_13 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 B" D $end
$var wire 1 p$ WriteEnable $end
$var wire 1 P$ ReadEnabel1 $end
$var wire 1 `$ ReadEnable2 $end
$var wire 1 !% Bitline1 $end
$var wire 1 1% Bitline2 $end
$var wire 1 f& q_2_reg $end

$scope module b_c $end
$var wire 1 f& q $end
$var wire 1 B" d $end
$var wire 1 p$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 g& state $end
$upscope $end
$upscope $end

$scope module B_C_12 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 C" D $end
$var wire 1 p$ WriteEnable $end
$var wire 1 P$ ReadEnabel1 $end
$var wire 1 `$ ReadEnable2 $end
$var wire 1 "% Bitline1 $end
$var wire 1 2% Bitline2 $end
$var wire 1 h& q_2_reg $end

$scope module b_c $end
$var wire 1 h& q $end
$var wire 1 C" d $end
$var wire 1 p$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 i& state $end
$upscope $end
$upscope $end

$scope module B_C_11 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 D" D $end
$var wire 1 p$ WriteEnable $end
$var wire 1 P$ ReadEnabel1 $end
$var wire 1 `$ ReadEnable2 $end
$var wire 1 #% Bitline1 $end
$var wire 1 3% Bitline2 $end
$var wire 1 j& q_2_reg $end

$scope module b_c $end
$var wire 1 j& q $end
$var wire 1 D" d $end
$var wire 1 p$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 k& state $end
$upscope $end
$upscope $end

$scope module B_C_10 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 E" D $end
$var wire 1 p$ WriteEnable $end
$var wire 1 P$ ReadEnabel1 $end
$var wire 1 `$ ReadEnable2 $end
$var wire 1 $% Bitline1 $end
$var wire 1 4% Bitline2 $end
$var wire 1 l& q_2_reg $end

$scope module b_c $end
$var wire 1 l& q $end
$var wire 1 E" d $end
$var wire 1 p$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 m& state $end
$upscope $end
$upscope $end

$scope module B_C_9 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 F" D $end
$var wire 1 p$ WriteEnable $end
$var wire 1 P$ ReadEnabel1 $end
$var wire 1 `$ ReadEnable2 $end
$var wire 1 %% Bitline1 $end
$var wire 1 5% Bitline2 $end
$var wire 1 n& q_2_reg $end

$scope module b_c $end
$var wire 1 n& q $end
$var wire 1 F" d $end
$var wire 1 p$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 o& state $end
$upscope $end
$upscope $end

$scope module B_C_8 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 G" D $end
$var wire 1 p$ WriteEnable $end
$var wire 1 P$ ReadEnabel1 $end
$var wire 1 `$ ReadEnable2 $end
$var wire 1 &% Bitline1 $end
$var wire 1 6% Bitline2 $end
$var wire 1 p& q_2_reg $end

$scope module b_c $end
$var wire 1 p& q $end
$var wire 1 G" d $end
$var wire 1 p$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 q& state $end
$upscope $end
$upscope $end

$scope module B_C_7 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 H" D $end
$var wire 1 p$ WriteEnable $end
$var wire 1 P$ ReadEnabel1 $end
$var wire 1 `$ ReadEnable2 $end
$var wire 1 '% Bitline1 $end
$var wire 1 7% Bitline2 $end
$var wire 1 r& q_2_reg $end

$scope module b_c $end
$var wire 1 r& q $end
$var wire 1 H" d $end
$var wire 1 p$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 s& state $end
$upscope $end
$upscope $end

$scope module B_C_6 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 I" D $end
$var wire 1 p$ WriteEnable $end
$var wire 1 P$ ReadEnabel1 $end
$var wire 1 `$ ReadEnable2 $end
$var wire 1 (% Bitline1 $end
$var wire 1 8% Bitline2 $end
$var wire 1 t& q_2_reg $end

$scope module b_c $end
$var wire 1 t& q $end
$var wire 1 I" d $end
$var wire 1 p$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 u& state $end
$upscope $end
$upscope $end

$scope module B_C_5 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 J" D $end
$var wire 1 p$ WriteEnable $end
$var wire 1 P$ ReadEnabel1 $end
$var wire 1 `$ ReadEnable2 $end
$var wire 1 )% Bitline1 $end
$var wire 1 9% Bitline2 $end
$var wire 1 v& q_2_reg $end

$scope module b_c $end
$var wire 1 v& q $end
$var wire 1 J" d $end
$var wire 1 p$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 w& state $end
$upscope $end
$upscope $end

$scope module B_C_4 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 K" D $end
$var wire 1 p$ WriteEnable $end
$var wire 1 P$ ReadEnabel1 $end
$var wire 1 `$ ReadEnable2 $end
$var wire 1 *% Bitline1 $end
$var wire 1 :% Bitline2 $end
$var wire 1 x& q_2_reg $end

$scope module b_c $end
$var wire 1 x& q $end
$var wire 1 K" d $end
$var wire 1 p$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 y& state $end
$upscope $end
$upscope $end

$scope module B_C_3 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 L" D $end
$var wire 1 p$ WriteEnable $end
$var wire 1 P$ ReadEnabel1 $end
$var wire 1 `$ ReadEnable2 $end
$var wire 1 +% Bitline1 $end
$var wire 1 ;% Bitline2 $end
$var wire 1 z& q_2_reg $end

$scope module b_c $end
$var wire 1 z& q $end
$var wire 1 L" d $end
$var wire 1 p$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 {& state $end
$upscope $end
$upscope $end

$scope module B_C_2 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 M" D $end
$var wire 1 p$ WriteEnable $end
$var wire 1 P$ ReadEnabel1 $end
$var wire 1 `$ ReadEnable2 $end
$var wire 1 ,% Bitline1 $end
$var wire 1 <% Bitline2 $end
$var wire 1 |& q_2_reg $end

$scope module b_c $end
$var wire 1 |& q $end
$var wire 1 M" d $end
$var wire 1 p$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 }& state $end
$upscope $end
$upscope $end

$scope module B_C_1 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 N" D $end
$var wire 1 p$ WriteEnable $end
$var wire 1 P$ ReadEnabel1 $end
$var wire 1 `$ ReadEnable2 $end
$var wire 1 -% Bitline1 $end
$var wire 1 =% Bitline2 $end
$var wire 1 ~& q_2_reg $end

$scope module b_c $end
$var wire 1 ~& q $end
$var wire 1 N" d $end
$var wire 1 p$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 !' state $end
$upscope $end
$upscope $end
$upscope $end

$scope module R11 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 q$ WriteReg $end
$var wire 1 Q$ ReadEnable1 $end
$var wire 1 a$ ReadEnable2 $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 |$ Bitline1 [15] $end
$var wire 1 }$ Bitline1 [14] $end
$var wire 1 ~$ Bitline1 [13] $end
$var wire 1 !% Bitline1 [12] $end
$var wire 1 "% Bitline1 [11] $end
$var wire 1 #% Bitline1 [10] $end
$var wire 1 $% Bitline1 [9] $end
$var wire 1 %% Bitline1 [8] $end
$var wire 1 &% Bitline1 [7] $end
$var wire 1 '% Bitline1 [6] $end
$var wire 1 (% Bitline1 [5] $end
$var wire 1 )% Bitline1 [4] $end
$var wire 1 *% Bitline1 [3] $end
$var wire 1 +% Bitline1 [2] $end
$var wire 1 ,% Bitline1 [1] $end
$var wire 1 -% Bitline1 [0] $end
$var wire 1 .% Bitline2 [15] $end
$var wire 1 /% Bitline2 [14] $end
$var wire 1 0% Bitline2 [13] $end
$var wire 1 1% Bitline2 [12] $end
$var wire 1 2% Bitline2 [11] $end
$var wire 1 3% Bitline2 [10] $end
$var wire 1 4% Bitline2 [9] $end
$var wire 1 5% Bitline2 [8] $end
$var wire 1 6% Bitline2 [7] $end
$var wire 1 7% Bitline2 [6] $end
$var wire 1 8% Bitline2 [5] $end
$var wire 1 9% Bitline2 [4] $end
$var wire 1 :% Bitline2 [3] $end
$var wire 1 ;% Bitline2 [2] $end
$var wire 1 <% Bitline2 [1] $end
$var wire 1 =% Bitline2 [0] $end

$scope module B_C_16 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 ?" D $end
$var wire 1 q$ WriteEnable $end
$var wire 1 Q$ ReadEnabel1 $end
$var wire 1 a$ ReadEnable2 $end
$var wire 1 |$ Bitline1 $end
$var wire 1 .% Bitline2 $end
$var wire 1 "' q_2_reg $end

$scope module b_c $end
$var wire 1 "' q $end
$var wire 1 ?" d $end
$var wire 1 q$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 #' state $end
$upscope $end
$upscope $end

$scope module B_C_15 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 @" D $end
$var wire 1 q$ WriteEnable $end
$var wire 1 Q$ ReadEnabel1 $end
$var wire 1 a$ ReadEnable2 $end
$var wire 1 }$ Bitline1 $end
$var wire 1 /% Bitline2 $end
$var wire 1 $' q_2_reg $end

$scope module b_c $end
$var wire 1 $' q $end
$var wire 1 @" d $end
$var wire 1 q$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 %' state $end
$upscope $end
$upscope $end

$scope module B_C_14 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 A" D $end
$var wire 1 q$ WriteEnable $end
$var wire 1 Q$ ReadEnabel1 $end
$var wire 1 a$ ReadEnable2 $end
$var wire 1 ~$ Bitline1 $end
$var wire 1 0% Bitline2 $end
$var wire 1 &' q_2_reg $end

$scope module b_c $end
$var wire 1 &' q $end
$var wire 1 A" d $end
$var wire 1 q$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 '' state $end
$upscope $end
$upscope $end

$scope module B_C_13 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 B" D $end
$var wire 1 q$ WriteEnable $end
$var wire 1 Q$ ReadEnabel1 $end
$var wire 1 a$ ReadEnable2 $end
$var wire 1 !% Bitline1 $end
$var wire 1 1% Bitline2 $end
$var wire 1 (' q_2_reg $end

$scope module b_c $end
$var wire 1 (' q $end
$var wire 1 B" d $end
$var wire 1 q$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 )' state $end
$upscope $end
$upscope $end

$scope module B_C_12 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 C" D $end
$var wire 1 q$ WriteEnable $end
$var wire 1 Q$ ReadEnabel1 $end
$var wire 1 a$ ReadEnable2 $end
$var wire 1 "% Bitline1 $end
$var wire 1 2% Bitline2 $end
$var wire 1 *' q_2_reg $end

$scope module b_c $end
$var wire 1 *' q $end
$var wire 1 C" d $end
$var wire 1 q$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 +' state $end
$upscope $end
$upscope $end

$scope module B_C_11 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 D" D $end
$var wire 1 q$ WriteEnable $end
$var wire 1 Q$ ReadEnabel1 $end
$var wire 1 a$ ReadEnable2 $end
$var wire 1 #% Bitline1 $end
$var wire 1 3% Bitline2 $end
$var wire 1 ,' q_2_reg $end

$scope module b_c $end
$var wire 1 ,' q $end
$var wire 1 D" d $end
$var wire 1 q$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 -' state $end
$upscope $end
$upscope $end

$scope module B_C_10 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 E" D $end
$var wire 1 q$ WriteEnable $end
$var wire 1 Q$ ReadEnabel1 $end
$var wire 1 a$ ReadEnable2 $end
$var wire 1 $% Bitline1 $end
$var wire 1 4% Bitline2 $end
$var wire 1 .' q_2_reg $end

$scope module b_c $end
$var wire 1 .' q $end
$var wire 1 E" d $end
$var wire 1 q$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 /' state $end
$upscope $end
$upscope $end

$scope module B_C_9 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 F" D $end
$var wire 1 q$ WriteEnable $end
$var wire 1 Q$ ReadEnabel1 $end
$var wire 1 a$ ReadEnable2 $end
$var wire 1 %% Bitline1 $end
$var wire 1 5% Bitline2 $end
$var wire 1 0' q_2_reg $end

$scope module b_c $end
$var wire 1 0' q $end
$var wire 1 F" d $end
$var wire 1 q$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 1' state $end
$upscope $end
$upscope $end

$scope module B_C_8 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 G" D $end
$var wire 1 q$ WriteEnable $end
$var wire 1 Q$ ReadEnabel1 $end
$var wire 1 a$ ReadEnable2 $end
$var wire 1 &% Bitline1 $end
$var wire 1 6% Bitline2 $end
$var wire 1 2' q_2_reg $end

$scope module b_c $end
$var wire 1 2' q $end
$var wire 1 G" d $end
$var wire 1 q$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 3' state $end
$upscope $end
$upscope $end

$scope module B_C_7 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 H" D $end
$var wire 1 q$ WriteEnable $end
$var wire 1 Q$ ReadEnabel1 $end
$var wire 1 a$ ReadEnable2 $end
$var wire 1 '% Bitline1 $end
$var wire 1 7% Bitline2 $end
$var wire 1 4' q_2_reg $end

$scope module b_c $end
$var wire 1 4' q $end
$var wire 1 H" d $end
$var wire 1 q$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 5' state $end
$upscope $end
$upscope $end

$scope module B_C_6 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 I" D $end
$var wire 1 q$ WriteEnable $end
$var wire 1 Q$ ReadEnabel1 $end
$var wire 1 a$ ReadEnable2 $end
$var wire 1 (% Bitline1 $end
$var wire 1 8% Bitline2 $end
$var wire 1 6' q_2_reg $end

$scope module b_c $end
$var wire 1 6' q $end
$var wire 1 I" d $end
$var wire 1 q$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 7' state $end
$upscope $end
$upscope $end

$scope module B_C_5 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 J" D $end
$var wire 1 q$ WriteEnable $end
$var wire 1 Q$ ReadEnabel1 $end
$var wire 1 a$ ReadEnable2 $end
$var wire 1 )% Bitline1 $end
$var wire 1 9% Bitline2 $end
$var wire 1 8' q_2_reg $end

$scope module b_c $end
$var wire 1 8' q $end
$var wire 1 J" d $end
$var wire 1 q$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 9' state $end
$upscope $end
$upscope $end

$scope module B_C_4 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 K" D $end
$var wire 1 q$ WriteEnable $end
$var wire 1 Q$ ReadEnabel1 $end
$var wire 1 a$ ReadEnable2 $end
$var wire 1 *% Bitline1 $end
$var wire 1 :% Bitline2 $end
$var wire 1 :' q_2_reg $end

$scope module b_c $end
$var wire 1 :' q $end
$var wire 1 K" d $end
$var wire 1 q$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 ;' state $end
$upscope $end
$upscope $end

$scope module B_C_3 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 L" D $end
$var wire 1 q$ WriteEnable $end
$var wire 1 Q$ ReadEnabel1 $end
$var wire 1 a$ ReadEnable2 $end
$var wire 1 +% Bitline1 $end
$var wire 1 ;% Bitline2 $end
$var wire 1 <' q_2_reg $end

$scope module b_c $end
$var wire 1 <' q $end
$var wire 1 L" d $end
$var wire 1 q$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 =' state $end
$upscope $end
$upscope $end

$scope module B_C_2 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 M" D $end
$var wire 1 q$ WriteEnable $end
$var wire 1 Q$ ReadEnabel1 $end
$var wire 1 a$ ReadEnable2 $end
$var wire 1 ,% Bitline1 $end
$var wire 1 <% Bitline2 $end
$var wire 1 >' q_2_reg $end

$scope module b_c $end
$var wire 1 >' q $end
$var wire 1 M" d $end
$var wire 1 q$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 ?' state $end
$upscope $end
$upscope $end

$scope module B_C_1 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 N" D $end
$var wire 1 q$ WriteEnable $end
$var wire 1 Q$ ReadEnabel1 $end
$var wire 1 a$ ReadEnable2 $end
$var wire 1 -% Bitline1 $end
$var wire 1 =% Bitline2 $end
$var wire 1 @' q_2_reg $end

$scope module b_c $end
$var wire 1 @' q $end
$var wire 1 N" d $end
$var wire 1 q$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 A' state $end
$upscope $end
$upscope $end
$upscope $end

$scope module R10 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 r$ WriteReg $end
$var wire 1 R$ ReadEnable1 $end
$var wire 1 b$ ReadEnable2 $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 |$ Bitline1 [15] $end
$var wire 1 }$ Bitline1 [14] $end
$var wire 1 ~$ Bitline1 [13] $end
$var wire 1 !% Bitline1 [12] $end
$var wire 1 "% Bitline1 [11] $end
$var wire 1 #% Bitline1 [10] $end
$var wire 1 $% Bitline1 [9] $end
$var wire 1 %% Bitline1 [8] $end
$var wire 1 &% Bitline1 [7] $end
$var wire 1 '% Bitline1 [6] $end
$var wire 1 (% Bitline1 [5] $end
$var wire 1 )% Bitline1 [4] $end
$var wire 1 *% Bitline1 [3] $end
$var wire 1 +% Bitline1 [2] $end
$var wire 1 ,% Bitline1 [1] $end
$var wire 1 -% Bitline1 [0] $end
$var wire 1 .% Bitline2 [15] $end
$var wire 1 /% Bitline2 [14] $end
$var wire 1 0% Bitline2 [13] $end
$var wire 1 1% Bitline2 [12] $end
$var wire 1 2% Bitline2 [11] $end
$var wire 1 3% Bitline2 [10] $end
$var wire 1 4% Bitline2 [9] $end
$var wire 1 5% Bitline2 [8] $end
$var wire 1 6% Bitline2 [7] $end
$var wire 1 7% Bitline2 [6] $end
$var wire 1 8% Bitline2 [5] $end
$var wire 1 9% Bitline2 [4] $end
$var wire 1 :% Bitline2 [3] $end
$var wire 1 ;% Bitline2 [2] $end
$var wire 1 <% Bitline2 [1] $end
$var wire 1 =% Bitline2 [0] $end

$scope module B_C_16 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 ?" D $end
$var wire 1 r$ WriteEnable $end
$var wire 1 R$ ReadEnabel1 $end
$var wire 1 b$ ReadEnable2 $end
$var wire 1 |$ Bitline1 $end
$var wire 1 .% Bitline2 $end
$var wire 1 B' q_2_reg $end

$scope module b_c $end
$var wire 1 B' q $end
$var wire 1 ?" d $end
$var wire 1 r$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 C' state $end
$upscope $end
$upscope $end

$scope module B_C_15 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 @" D $end
$var wire 1 r$ WriteEnable $end
$var wire 1 R$ ReadEnabel1 $end
$var wire 1 b$ ReadEnable2 $end
$var wire 1 }$ Bitline1 $end
$var wire 1 /% Bitline2 $end
$var wire 1 D' q_2_reg $end

$scope module b_c $end
$var wire 1 D' q $end
$var wire 1 @" d $end
$var wire 1 r$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 E' state $end
$upscope $end
$upscope $end

$scope module B_C_14 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 A" D $end
$var wire 1 r$ WriteEnable $end
$var wire 1 R$ ReadEnabel1 $end
$var wire 1 b$ ReadEnable2 $end
$var wire 1 ~$ Bitline1 $end
$var wire 1 0% Bitline2 $end
$var wire 1 F' q_2_reg $end

$scope module b_c $end
$var wire 1 F' q $end
$var wire 1 A" d $end
$var wire 1 r$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 G' state $end
$upscope $end
$upscope $end

$scope module B_C_13 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 B" D $end
$var wire 1 r$ WriteEnable $end
$var wire 1 R$ ReadEnabel1 $end
$var wire 1 b$ ReadEnable2 $end
$var wire 1 !% Bitline1 $end
$var wire 1 1% Bitline2 $end
$var wire 1 H' q_2_reg $end

$scope module b_c $end
$var wire 1 H' q $end
$var wire 1 B" d $end
$var wire 1 r$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 I' state $end
$upscope $end
$upscope $end

$scope module B_C_12 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 C" D $end
$var wire 1 r$ WriteEnable $end
$var wire 1 R$ ReadEnabel1 $end
$var wire 1 b$ ReadEnable2 $end
$var wire 1 "% Bitline1 $end
$var wire 1 2% Bitline2 $end
$var wire 1 J' q_2_reg $end

$scope module b_c $end
$var wire 1 J' q $end
$var wire 1 C" d $end
$var wire 1 r$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 K' state $end
$upscope $end
$upscope $end

$scope module B_C_11 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 D" D $end
$var wire 1 r$ WriteEnable $end
$var wire 1 R$ ReadEnabel1 $end
$var wire 1 b$ ReadEnable2 $end
$var wire 1 #% Bitline1 $end
$var wire 1 3% Bitline2 $end
$var wire 1 L' q_2_reg $end

$scope module b_c $end
$var wire 1 L' q $end
$var wire 1 D" d $end
$var wire 1 r$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 M' state $end
$upscope $end
$upscope $end

$scope module B_C_10 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 E" D $end
$var wire 1 r$ WriteEnable $end
$var wire 1 R$ ReadEnabel1 $end
$var wire 1 b$ ReadEnable2 $end
$var wire 1 $% Bitline1 $end
$var wire 1 4% Bitline2 $end
$var wire 1 N' q_2_reg $end

$scope module b_c $end
$var wire 1 N' q $end
$var wire 1 E" d $end
$var wire 1 r$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 O' state $end
$upscope $end
$upscope $end

$scope module B_C_9 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 F" D $end
$var wire 1 r$ WriteEnable $end
$var wire 1 R$ ReadEnabel1 $end
$var wire 1 b$ ReadEnable2 $end
$var wire 1 %% Bitline1 $end
$var wire 1 5% Bitline2 $end
$var wire 1 P' q_2_reg $end

$scope module b_c $end
$var wire 1 P' q $end
$var wire 1 F" d $end
$var wire 1 r$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 Q' state $end
$upscope $end
$upscope $end

$scope module B_C_8 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 G" D $end
$var wire 1 r$ WriteEnable $end
$var wire 1 R$ ReadEnabel1 $end
$var wire 1 b$ ReadEnable2 $end
$var wire 1 &% Bitline1 $end
$var wire 1 6% Bitline2 $end
$var wire 1 R' q_2_reg $end

$scope module b_c $end
$var wire 1 R' q $end
$var wire 1 G" d $end
$var wire 1 r$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 S' state $end
$upscope $end
$upscope $end

$scope module B_C_7 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 H" D $end
$var wire 1 r$ WriteEnable $end
$var wire 1 R$ ReadEnabel1 $end
$var wire 1 b$ ReadEnable2 $end
$var wire 1 '% Bitline1 $end
$var wire 1 7% Bitline2 $end
$var wire 1 T' q_2_reg $end

$scope module b_c $end
$var wire 1 T' q $end
$var wire 1 H" d $end
$var wire 1 r$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 U' state $end
$upscope $end
$upscope $end

$scope module B_C_6 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 I" D $end
$var wire 1 r$ WriteEnable $end
$var wire 1 R$ ReadEnabel1 $end
$var wire 1 b$ ReadEnable2 $end
$var wire 1 (% Bitline1 $end
$var wire 1 8% Bitline2 $end
$var wire 1 V' q_2_reg $end

$scope module b_c $end
$var wire 1 V' q $end
$var wire 1 I" d $end
$var wire 1 r$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 W' state $end
$upscope $end
$upscope $end

$scope module B_C_5 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 J" D $end
$var wire 1 r$ WriteEnable $end
$var wire 1 R$ ReadEnabel1 $end
$var wire 1 b$ ReadEnable2 $end
$var wire 1 )% Bitline1 $end
$var wire 1 9% Bitline2 $end
$var wire 1 X' q_2_reg $end

$scope module b_c $end
$var wire 1 X' q $end
$var wire 1 J" d $end
$var wire 1 r$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 Y' state $end
$upscope $end
$upscope $end

$scope module B_C_4 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 K" D $end
$var wire 1 r$ WriteEnable $end
$var wire 1 R$ ReadEnabel1 $end
$var wire 1 b$ ReadEnable2 $end
$var wire 1 *% Bitline1 $end
$var wire 1 :% Bitline2 $end
$var wire 1 Z' q_2_reg $end

$scope module b_c $end
$var wire 1 Z' q $end
$var wire 1 K" d $end
$var wire 1 r$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 [' state $end
$upscope $end
$upscope $end

$scope module B_C_3 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 L" D $end
$var wire 1 r$ WriteEnable $end
$var wire 1 R$ ReadEnabel1 $end
$var wire 1 b$ ReadEnable2 $end
$var wire 1 +% Bitline1 $end
$var wire 1 ;% Bitline2 $end
$var wire 1 \' q_2_reg $end

$scope module b_c $end
$var wire 1 \' q $end
$var wire 1 L" d $end
$var wire 1 r$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 ]' state $end
$upscope $end
$upscope $end

$scope module B_C_2 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 M" D $end
$var wire 1 r$ WriteEnable $end
$var wire 1 R$ ReadEnabel1 $end
$var wire 1 b$ ReadEnable2 $end
$var wire 1 ,% Bitline1 $end
$var wire 1 <% Bitline2 $end
$var wire 1 ^' q_2_reg $end

$scope module b_c $end
$var wire 1 ^' q $end
$var wire 1 M" d $end
$var wire 1 r$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 _' state $end
$upscope $end
$upscope $end

$scope module B_C_1 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 N" D $end
$var wire 1 r$ WriteEnable $end
$var wire 1 R$ ReadEnabel1 $end
$var wire 1 b$ ReadEnable2 $end
$var wire 1 -% Bitline1 $end
$var wire 1 =% Bitline2 $end
$var wire 1 `' q_2_reg $end

$scope module b_c $end
$var wire 1 `' q $end
$var wire 1 N" d $end
$var wire 1 r$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 a' state $end
$upscope $end
$upscope $end
$upscope $end

$scope module R9 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 s$ WriteReg $end
$var wire 1 S$ ReadEnable1 $end
$var wire 1 c$ ReadEnable2 $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 |$ Bitline1 [15] $end
$var wire 1 }$ Bitline1 [14] $end
$var wire 1 ~$ Bitline1 [13] $end
$var wire 1 !% Bitline1 [12] $end
$var wire 1 "% Bitline1 [11] $end
$var wire 1 #% Bitline1 [10] $end
$var wire 1 $% Bitline1 [9] $end
$var wire 1 %% Bitline1 [8] $end
$var wire 1 &% Bitline1 [7] $end
$var wire 1 '% Bitline1 [6] $end
$var wire 1 (% Bitline1 [5] $end
$var wire 1 )% Bitline1 [4] $end
$var wire 1 *% Bitline1 [3] $end
$var wire 1 +% Bitline1 [2] $end
$var wire 1 ,% Bitline1 [1] $end
$var wire 1 -% Bitline1 [0] $end
$var wire 1 .% Bitline2 [15] $end
$var wire 1 /% Bitline2 [14] $end
$var wire 1 0% Bitline2 [13] $end
$var wire 1 1% Bitline2 [12] $end
$var wire 1 2% Bitline2 [11] $end
$var wire 1 3% Bitline2 [10] $end
$var wire 1 4% Bitline2 [9] $end
$var wire 1 5% Bitline2 [8] $end
$var wire 1 6% Bitline2 [7] $end
$var wire 1 7% Bitline2 [6] $end
$var wire 1 8% Bitline2 [5] $end
$var wire 1 9% Bitline2 [4] $end
$var wire 1 :% Bitline2 [3] $end
$var wire 1 ;% Bitline2 [2] $end
$var wire 1 <% Bitline2 [1] $end
$var wire 1 =% Bitline2 [0] $end

$scope module B_C_16 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 ?" D $end
$var wire 1 s$ WriteEnable $end
$var wire 1 S$ ReadEnabel1 $end
$var wire 1 c$ ReadEnable2 $end
$var wire 1 |$ Bitline1 $end
$var wire 1 .% Bitline2 $end
$var wire 1 b' q_2_reg $end

$scope module b_c $end
$var wire 1 b' q $end
$var wire 1 ?" d $end
$var wire 1 s$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 c' state $end
$upscope $end
$upscope $end

$scope module B_C_15 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 @" D $end
$var wire 1 s$ WriteEnable $end
$var wire 1 S$ ReadEnabel1 $end
$var wire 1 c$ ReadEnable2 $end
$var wire 1 }$ Bitline1 $end
$var wire 1 /% Bitline2 $end
$var wire 1 d' q_2_reg $end

$scope module b_c $end
$var wire 1 d' q $end
$var wire 1 @" d $end
$var wire 1 s$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 e' state $end
$upscope $end
$upscope $end

$scope module B_C_14 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 A" D $end
$var wire 1 s$ WriteEnable $end
$var wire 1 S$ ReadEnabel1 $end
$var wire 1 c$ ReadEnable2 $end
$var wire 1 ~$ Bitline1 $end
$var wire 1 0% Bitline2 $end
$var wire 1 f' q_2_reg $end

$scope module b_c $end
$var wire 1 f' q $end
$var wire 1 A" d $end
$var wire 1 s$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 g' state $end
$upscope $end
$upscope $end

$scope module B_C_13 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 B" D $end
$var wire 1 s$ WriteEnable $end
$var wire 1 S$ ReadEnabel1 $end
$var wire 1 c$ ReadEnable2 $end
$var wire 1 !% Bitline1 $end
$var wire 1 1% Bitline2 $end
$var wire 1 h' q_2_reg $end

$scope module b_c $end
$var wire 1 h' q $end
$var wire 1 B" d $end
$var wire 1 s$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 i' state $end
$upscope $end
$upscope $end

$scope module B_C_12 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 C" D $end
$var wire 1 s$ WriteEnable $end
$var wire 1 S$ ReadEnabel1 $end
$var wire 1 c$ ReadEnable2 $end
$var wire 1 "% Bitline1 $end
$var wire 1 2% Bitline2 $end
$var wire 1 j' q_2_reg $end

$scope module b_c $end
$var wire 1 j' q $end
$var wire 1 C" d $end
$var wire 1 s$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 k' state $end
$upscope $end
$upscope $end

$scope module B_C_11 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 D" D $end
$var wire 1 s$ WriteEnable $end
$var wire 1 S$ ReadEnabel1 $end
$var wire 1 c$ ReadEnable2 $end
$var wire 1 #% Bitline1 $end
$var wire 1 3% Bitline2 $end
$var wire 1 l' q_2_reg $end

$scope module b_c $end
$var wire 1 l' q $end
$var wire 1 D" d $end
$var wire 1 s$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 m' state $end
$upscope $end
$upscope $end

$scope module B_C_10 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 E" D $end
$var wire 1 s$ WriteEnable $end
$var wire 1 S$ ReadEnabel1 $end
$var wire 1 c$ ReadEnable2 $end
$var wire 1 $% Bitline1 $end
$var wire 1 4% Bitline2 $end
$var wire 1 n' q_2_reg $end

$scope module b_c $end
$var wire 1 n' q $end
$var wire 1 E" d $end
$var wire 1 s$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 o' state $end
$upscope $end
$upscope $end

$scope module B_C_9 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 F" D $end
$var wire 1 s$ WriteEnable $end
$var wire 1 S$ ReadEnabel1 $end
$var wire 1 c$ ReadEnable2 $end
$var wire 1 %% Bitline1 $end
$var wire 1 5% Bitline2 $end
$var wire 1 p' q_2_reg $end

$scope module b_c $end
$var wire 1 p' q $end
$var wire 1 F" d $end
$var wire 1 s$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 q' state $end
$upscope $end
$upscope $end

$scope module B_C_8 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 G" D $end
$var wire 1 s$ WriteEnable $end
$var wire 1 S$ ReadEnabel1 $end
$var wire 1 c$ ReadEnable2 $end
$var wire 1 &% Bitline1 $end
$var wire 1 6% Bitline2 $end
$var wire 1 r' q_2_reg $end

$scope module b_c $end
$var wire 1 r' q $end
$var wire 1 G" d $end
$var wire 1 s$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 s' state $end
$upscope $end
$upscope $end

$scope module B_C_7 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 H" D $end
$var wire 1 s$ WriteEnable $end
$var wire 1 S$ ReadEnabel1 $end
$var wire 1 c$ ReadEnable2 $end
$var wire 1 '% Bitline1 $end
$var wire 1 7% Bitline2 $end
$var wire 1 t' q_2_reg $end

$scope module b_c $end
$var wire 1 t' q $end
$var wire 1 H" d $end
$var wire 1 s$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 u' state $end
$upscope $end
$upscope $end

$scope module B_C_6 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 I" D $end
$var wire 1 s$ WriteEnable $end
$var wire 1 S$ ReadEnabel1 $end
$var wire 1 c$ ReadEnable2 $end
$var wire 1 (% Bitline1 $end
$var wire 1 8% Bitline2 $end
$var wire 1 v' q_2_reg $end

$scope module b_c $end
$var wire 1 v' q $end
$var wire 1 I" d $end
$var wire 1 s$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 w' state $end
$upscope $end
$upscope $end

$scope module B_C_5 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 J" D $end
$var wire 1 s$ WriteEnable $end
$var wire 1 S$ ReadEnabel1 $end
$var wire 1 c$ ReadEnable2 $end
$var wire 1 )% Bitline1 $end
$var wire 1 9% Bitline2 $end
$var wire 1 x' q_2_reg $end

$scope module b_c $end
$var wire 1 x' q $end
$var wire 1 J" d $end
$var wire 1 s$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 y' state $end
$upscope $end
$upscope $end

$scope module B_C_4 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 K" D $end
$var wire 1 s$ WriteEnable $end
$var wire 1 S$ ReadEnabel1 $end
$var wire 1 c$ ReadEnable2 $end
$var wire 1 *% Bitline1 $end
$var wire 1 :% Bitline2 $end
$var wire 1 z' q_2_reg $end

$scope module b_c $end
$var wire 1 z' q $end
$var wire 1 K" d $end
$var wire 1 s$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 {' state $end
$upscope $end
$upscope $end

$scope module B_C_3 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 L" D $end
$var wire 1 s$ WriteEnable $end
$var wire 1 S$ ReadEnabel1 $end
$var wire 1 c$ ReadEnable2 $end
$var wire 1 +% Bitline1 $end
$var wire 1 ;% Bitline2 $end
$var wire 1 |' q_2_reg $end

$scope module b_c $end
$var wire 1 |' q $end
$var wire 1 L" d $end
$var wire 1 s$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 }' state $end
$upscope $end
$upscope $end

$scope module B_C_2 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 M" D $end
$var wire 1 s$ WriteEnable $end
$var wire 1 S$ ReadEnabel1 $end
$var wire 1 c$ ReadEnable2 $end
$var wire 1 ,% Bitline1 $end
$var wire 1 <% Bitline2 $end
$var wire 1 ~' q_2_reg $end

$scope module b_c $end
$var wire 1 ~' q $end
$var wire 1 M" d $end
$var wire 1 s$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 !( state $end
$upscope $end
$upscope $end

$scope module B_C_1 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 N" D $end
$var wire 1 s$ WriteEnable $end
$var wire 1 S$ ReadEnabel1 $end
$var wire 1 c$ ReadEnable2 $end
$var wire 1 -% Bitline1 $end
$var wire 1 =% Bitline2 $end
$var wire 1 "( q_2_reg $end

$scope module b_c $end
$var wire 1 "( q $end
$var wire 1 N" d $end
$var wire 1 s$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 #( state $end
$upscope $end
$upscope $end
$upscope $end

$scope module R8 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 t$ WriteReg $end
$var wire 1 T$ ReadEnable1 $end
$var wire 1 d$ ReadEnable2 $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 |$ Bitline1 [15] $end
$var wire 1 }$ Bitline1 [14] $end
$var wire 1 ~$ Bitline1 [13] $end
$var wire 1 !% Bitline1 [12] $end
$var wire 1 "% Bitline1 [11] $end
$var wire 1 #% Bitline1 [10] $end
$var wire 1 $% Bitline1 [9] $end
$var wire 1 %% Bitline1 [8] $end
$var wire 1 &% Bitline1 [7] $end
$var wire 1 '% Bitline1 [6] $end
$var wire 1 (% Bitline1 [5] $end
$var wire 1 )% Bitline1 [4] $end
$var wire 1 *% Bitline1 [3] $end
$var wire 1 +% Bitline1 [2] $end
$var wire 1 ,% Bitline1 [1] $end
$var wire 1 -% Bitline1 [0] $end
$var wire 1 .% Bitline2 [15] $end
$var wire 1 /% Bitline2 [14] $end
$var wire 1 0% Bitline2 [13] $end
$var wire 1 1% Bitline2 [12] $end
$var wire 1 2% Bitline2 [11] $end
$var wire 1 3% Bitline2 [10] $end
$var wire 1 4% Bitline2 [9] $end
$var wire 1 5% Bitline2 [8] $end
$var wire 1 6% Bitline2 [7] $end
$var wire 1 7% Bitline2 [6] $end
$var wire 1 8% Bitline2 [5] $end
$var wire 1 9% Bitline2 [4] $end
$var wire 1 :% Bitline2 [3] $end
$var wire 1 ;% Bitline2 [2] $end
$var wire 1 <% Bitline2 [1] $end
$var wire 1 =% Bitline2 [0] $end

$scope module B_C_16 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 ?" D $end
$var wire 1 t$ WriteEnable $end
$var wire 1 T$ ReadEnabel1 $end
$var wire 1 d$ ReadEnable2 $end
$var wire 1 |$ Bitline1 $end
$var wire 1 .% Bitline2 $end
$var wire 1 $( q_2_reg $end

$scope module b_c $end
$var wire 1 $( q $end
$var wire 1 ?" d $end
$var wire 1 t$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 %( state $end
$upscope $end
$upscope $end

$scope module B_C_15 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 @" D $end
$var wire 1 t$ WriteEnable $end
$var wire 1 T$ ReadEnabel1 $end
$var wire 1 d$ ReadEnable2 $end
$var wire 1 }$ Bitline1 $end
$var wire 1 /% Bitline2 $end
$var wire 1 &( q_2_reg $end

$scope module b_c $end
$var wire 1 &( q $end
$var wire 1 @" d $end
$var wire 1 t$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 '( state $end
$upscope $end
$upscope $end

$scope module B_C_14 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 A" D $end
$var wire 1 t$ WriteEnable $end
$var wire 1 T$ ReadEnabel1 $end
$var wire 1 d$ ReadEnable2 $end
$var wire 1 ~$ Bitline1 $end
$var wire 1 0% Bitline2 $end
$var wire 1 (( q_2_reg $end

$scope module b_c $end
$var wire 1 (( q $end
$var wire 1 A" d $end
$var wire 1 t$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 )( state $end
$upscope $end
$upscope $end

$scope module B_C_13 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 B" D $end
$var wire 1 t$ WriteEnable $end
$var wire 1 T$ ReadEnabel1 $end
$var wire 1 d$ ReadEnable2 $end
$var wire 1 !% Bitline1 $end
$var wire 1 1% Bitline2 $end
$var wire 1 *( q_2_reg $end

$scope module b_c $end
$var wire 1 *( q $end
$var wire 1 B" d $end
$var wire 1 t$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 +( state $end
$upscope $end
$upscope $end

$scope module B_C_12 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 C" D $end
$var wire 1 t$ WriteEnable $end
$var wire 1 T$ ReadEnabel1 $end
$var wire 1 d$ ReadEnable2 $end
$var wire 1 "% Bitline1 $end
$var wire 1 2% Bitline2 $end
$var wire 1 ,( q_2_reg $end

$scope module b_c $end
$var wire 1 ,( q $end
$var wire 1 C" d $end
$var wire 1 t$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 -( state $end
$upscope $end
$upscope $end

$scope module B_C_11 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 D" D $end
$var wire 1 t$ WriteEnable $end
$var wire 1 T$ ReadEnabel1 $end
$var wire 1 d$ ReadEnable2 $end
$var wire 1 #% Bitline1 $end
$var wire 1 3% Bitline2 $end
$var wire 1 .( q_2_reg $end

$scope module b_c $end
$var wire 1 .( q $end
$var wire 1 D" d $end
$var wire 1 t$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 /( state $end
$upscope $end
$upscope $end

$scope module B_C_10 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 E" D $end
$var wire 1 t$ WriteEnable $end
$var wire 1 T$ ReadEnabel1 $end
$var wire 1 d$ ReadEnable2 $end
$var wire 1 $% Bitline1 $end
$var wire 1 4% Bitline2 $end
$var wire 1 0( q_2_reg $end

$scope module b_c $end
$var wire 1 0( q $end
$var wire 1 E" d $end
$var wire 1 t$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 1( state $end
$upscope $end
$upscope $end

$scope module B_C_9 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 F" D $end
$var wire 1 t$ WriteEnable $end
$var wire 1 T$ ReadEnabel1 $end
$var wire 1 d$ ReadEnable2 $end
$var wire 1 %% Bitline1 $end
$var wire 1 5% Bitline2 $end
$var wire 1 2( q_2_reg $end

$scope module b_c $end
$var wire 1 2( q $end
$var wire 1 F" d $end
$var wire 1 t$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 3( state $end
$upscope $end
$upscope $end

$scope module B_C_8 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 G" D $end
$var wire 1 t$ WriteEnable $end
$var wire 1 T$ ReadEnabel1 $end
$var wire 1 d$ ReadEnable2 $end
$var wire 1 &% Bitline1 $end
$var wire 1 6% Bitline2 $end
$var wire 1 4( q_2_reg $end

$scope module b_c $end
$var wire 1 4( q $end
$var wire 1 G" d $end
$var wire 1 t$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 5( state $end
$upscope $end
$upscope $end

$scope module B_C_7 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 H" D $end
$var wire 1 t$ WriteEnable $end
$var wire 1 T$ ReadEnabel1 $end
$var wire 1 d$ ReadEnable2 $end
$var wire 1 '% Bitline1 $end
$var wire 1 7% Bitline2 $end
$var wire 1 6( q_2_reg $end

$scope module b_c $end
$var wire 1 6( q $end
$var wire 1 H" d $end
$var wire 1 t$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 7( state $end
$upscope $end
$upscope $end

$scope module B_C_6 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 I" D $end
$var wire 1 t$ WriteEnable $end
$var wire 1 T$ ReadEnabel1 $end
$var wire 1 d$ ReadEnable2 $end
$var wire 1 (% Bitline1 $end
$var wire 1 8% Bitline2 $end
$var wire 1 8( q_2_reg $end

$scope module b_c $end
$var wire 1 8( q $end
$var wire 1 I" d $end
$var wire 1 t$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 9( state $end
$upscope $end
$upscope $end

$scope module B_C_5 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 J" D $end
$var wire 1 t$ WriteEnable $end
$var wire 1 T$ ReadEnabel1 $end
$var wire 1 d$ ReadEnable2 $end
$var wire 1 )% Bitline1 $end
$var wire 1 9% Bitline2 $end
$var wire 1 :( q_2_reg $end

$scope module b_c $end
$var wire 1 :( q $end
$var wire 1 J" d $end
$var wire 1 t$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 ;( state $end
$upscope $end
$upscope $end

$scope module B_C_4 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 K" D $end
$var wire 1 t$ WriteEnable $end
$var wire 1 T$ ReadEnabel1 $end
$var wire 1 d$ ReadEnable2 $end
$var wire 1 *% Bitline1 $end
$var wire 1 :% Bitline2 $end
$var wire 1 <( q_2_reg $end

$scope module b_c $end
$var wire 1 <( q $end
$var wire 1 K" d $end
$var wire 1 t$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 =( state $end
$upscope $end
$upscope $end

$scope module B_C_3 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 L" D $end
$var wire 1 t$ WriteEnable $end
$var wire 1 T$ ReadEnabel1 $end
$var wire 1 d$ ReadEnable2 $end
$var wire 1 +% Bitline1 $end
$var wire 1 ;% Bitline2 $end
$var wire 1 >( q_2_reg $end

$scope module b_c $end
$var wire 1 >( q $end
$var wire 1 L" d $end
$var wire 1 t$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 ?( state $end
$upscope $end
$upscope $end

$scope module B_C_2 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 M" D $end
$var wire 1 t$ WriteEnable $end
$var wire 1 T$ ReadEnabel1 $end
$var wire 1 d$ ReadEnable2 $end
$var wire 1 ,% Bitline1 $end
$var wire 1 <% Bitline2 $end
$var wire 1 @( q_2_reg $end

$scope module b_c $end
$var wire 1 @( q $end
$var wire 1 M" d $end
$var wire 1 t$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 A( state $end
$upscope $end
$upscope $end

$scope module B_C_1 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 N" D $end
$var wire 1 t$ WriteEnable $end
$var wire 1 T$ ReadEnabel1 $end
$var wire 1 d$ ReadEnable2 $end
$var wire 1 -% Bitline1 $end
$var wire 1 =% Bitline2 $end
$var wire 1 B( q_2_reg $end

$scope module b_c $end
$var wire 1 B( q $end
$var wire 1 N" d $end
$var wire 1 t$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 C( state $end
$upscope $end
$upscope $end
$upscope $end

$scope module R7 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 u$ WriteReg $end
$var wire 1 U$ ReadEnable1 $end
$var wire 1 e$ ReadEnable2 $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 |$ Bitline1 [15] $end
$var wire 1 }$ Bitline1 [14] $end
$var wire 1 ~$ Bitline1 [13] $end
$var wire 1 !% Bitline1 [12] $end
$var wire 1 "% Bitline1 [11] $end
$var wire 1 #% Bitline1 [10] $end
$var wire 1 $% Bitline1 [9] $end
$var wire 1 %% Bitline1 [8] $end
$var wire 1 &% Bitline1 [7] $end
$var wire 1 '% Bitline1 [6] $end
$var wire 1 (% Bitline1 [5] $end
$var wire 1 )% Bitline1 [4] $end
$var wire 1 *% Bitline1 [3] $end
$var wire 1 +% Bitline1 [2] $end
$var wire 1 ,% Bitline1 [1] $end
$var wire 1 -% Bitline1 [0] $end
$var wire 1 .% Bitline2 [15] $end
$var wire 1 /% Bitline2 [14] $end
$var wire 1 0% Bitline2 [13] $end
$var wire 1 1% Bitline2 [12] $end
$var wire 1 2% Bitline2 [11] $end
$var wire 1 3% Bitline2 [10] $end
$var wire 1 4% Bitline2 [9] $end
$var wire 1 5% Bitline2 [8] $end
$var wire 1 6% Bitline2 [7] $end
$var wire 1 7% Bitline2 [6] $end
$var wire 1 8% Bitline2 [5] $end
$var wire 1 9% Bitline2 [4] $end
$var wire 1 :% Bitline2 [3] $end
$var wire 1 ;% Bitline2 [2] $end
$var wire 1 <% Bitline2 [1] $end
$var wire 1 =% Bitline2 [0] $end

$scope module B_C_16 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 ?" D $end
$var wire 1 u$ WriteEnable $end
$var wire 1 U$ ReadEnabel1 $end
$var wire 1 e$ ReadEnable2 $end
$var wire 1 |$ Bitline1 $end
$var wire 1 .% Bitline2 $end
$var wire 1 D( q_2_reg $end

$scope module b_c $end
$var wire 1 D( q $end
$var wire 1 ?" d $end
$var wire 1 u$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 E( state $end
$upscope $end
$upscope $end

$scope module B_C_15 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 @" D $end
$var wire 1 u$ WriteEnable $end
$var wire 1 U$ ReadEnabel1 $end
$var wire 1 e$ ReadEnable2 $end
$var wire 1 }$ Bitline1 $end
$var wire 1 /% Bitline2 $end
$var wire 1 F( q_2_reg $end

$scope module b_c $end
$var wire 1 F( q $end
$var wire 1 @" d $end
$var wire 1 u$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 G( state $end
$upscope $end
$upscope $end

$scope module B_C_14 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 A" D $end
$var wire 1 u$ WriteEnable $end
$var wire 1 U$ ReadEnabel1 $end
$var wire 1 e$ ReadEnable2 $end
$var wire 1 ~$ Bitline1 $end
$var wire 1 0% Bitline2 $end
$var wire 1 H( q_2_reg $end

$scope module b_c $end
$var wire 1 H( q $end
$var wire 1 A" d $end
$var wire 1 u$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 I( state $end
$upscope $end
$upscope $end

$scope module B_C_13 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 B" D $end
$var wire 1 u$ WriteEnable $end
$var wire 1 U$ ReadEnabel1 $end
$var wire 1 e$ ReadEnable2 $end
$var wire 1 !% Bitline1 $end
$var wire 1 1% Bitline2 $end
$var wire 1 J( q_2_reg $end

$scope module b_c $end
$var wire 1 J( q $end
$var wire 1 B" d $end
$var wire 1 u$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 K( state $end
$upscope $end
$upscope $end

$scope module B_C_12 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 C" D $end
$var wire 1 u$ WriteEnable $end
$var wire 1 U$ ReadEnabel1 $end
$var wire 1 e$ ReadEnable2 $end
$var wire 1 "% Bitline1 $end
$var wire 1 2% Bitline2 $end
$var wire 1 L( q_2_reg $end

$scope module b_c $end
$var wire 1 L( q $end
$var wire 1 C" d $end
$var wire 1 u$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 M( state $end
$upscope $end
$upscope $end

$scope module B_C_11 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 D" D $end
$var wire 1 u$ WriteEnable $end
$var wire 1 U$ ReadEnabel1 $end
$var wire 1 e$ ReadEnable2 $end
$var wire 1 #% Bitline1 $end
$var wire 1 3% Bitline2 $end
$var wire 1 N( q_2_reg $end

$scope module b_c $end
$var wire 1 N( q $end
$var wire 1 D" d $end
$var wire 1 u$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 O( state $end
$upscope $end
$upscope $end

$scope module B_C_10 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 E" D $end
$var wire 1 u$ WriteEnable $end
$var wire 1 U$ ReadEnabel1 $end
$var wire 1 e$ ReadEnable2 $end
$var wire 1 $% Bitline1 $end
$var wire 1 4% Bitline2 $end
$var wire 1 P( q_2_reg $end

$scope module b_c $end
$var wire 1 P( q $end
$var wire 1 E" d $end
$var wire 1 u$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 Q( state $end
$upscope $end
$upscope $end

$scope module B_C_9 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 F" D $end
$var wire 1 u$ WriteEnable $end
$var wire 1 U$ ReadEnabel1 $end
$var wire 1 e$ ReadEnable2 $end
$var wire 1 %% Bitline1 $end
$var wire 1 5% Bitline2 $end
$var wire 1 R( q_2_reg $end

$scope module b_c $end
$var wire 1 R( q $end
$var wire 1 F" d $end
$var wire 1 u$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 S( state $end
$upscope $end
$upscope $end

$scope module B_C_8 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 G" D $end
$var wire 1 u$ WriteEnable $end
$var wire 1 U$ ReadEnabel1 $end
$var wire 1 e$ ReadEnable2 $end
$var wire 1 &% Bitline1 $end
$var wire 1 6% Bitline2 $end
$var wire 1 T( q_2_reg $end

$scope module b_c $end
$var wire 1 T( q $end
$var wire 1 G" d $end
$var wire 1 u$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 U( state $end
$upscope $end
$upscope $end

$scope module B_C_7 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 H" D $end
$var wire 1 u$ WriteEnable $end
$var wire 1 U$ ReadEnabel1 $end
$var wire 1 e$ ReadEnable2 $end
$var wire 1 '% Bitline1 $end
$var wire 1 7% Bitline2 $end
$var wire 1 V( q_2_reg $end

$scope module b_c $end
$var wire 1 V( q $end
$var wire 1 H" d $end
$var wire 1 u$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 W( state $end
$upscope $end
$upscope $end

$scope module B_C_6 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 I" D $end
$var wire 1 u$ WriteEnable $end
$var wire 1 U$ ReadEnabel1 $end
$var wire 1 e$ ReadEnable2 $end
$var wire 1 (% Bitline1 $end
$var wire 1 8% Bitline2 $end
$var wire 1 X( q_2_reg $end

$scope module b_c $end
$var wire 1 X( q $end
$var wire 1 I" d $end
$var wire 1 u$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 Y( state $end
$upscope $end
$upscope $end

$scope module B_C_5 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 J" D $end
$var wire 1 u$ WriteEnable $end
$var wire 1 U$ ReadEnabel1 $end
$var wire 1 e$ ReadEnable2 $end
$var wire 1 )% Bitline1 $end
$var wire 1 9% Bitline2 $end
$var wire 1 Z( q_2_reg $end

$scope module b_c $end
$var wire 1 Z( q $end
$var wire 1 J" d $end
$var wire 1 u$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 [( state $end
$upscope $end
$upscope $end

$scope module B_C_4 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 K" D $end
$var wire 1 u$ WriteEnable $end
$var wire 1 U$ ReadEnabel1 $end
$var wire 1 e$ ReadEnable2 $end
$var wire 1 *% Bitline1 $end
$var wire 1 :% Bitline2 $end
$var wire 1 \( q_2_reg $end

$scope module b_c $end
$var wire 1 \( q $end
$var wire 1 K" d $end
$var wire 1 u$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 ]( state $end
$upscope $end
$upscope $end

$scope module B_C_3 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 L" D $end
$var wire 1 u$ WriteEnable $end
$var wire 1 U$ ReadEnabel1 $end
$var wire 1 e$ ReadEnable2 $end
$var wire 1 +% Bitline1 $end
$var wire 1 ;% Bitline2 $end
$var wire 1 ^( q_2_reg $end

$scope module b_c $end
$var wire 1 ^( q $end
$var wire 1 L" d $end
$var wire 1 u$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 _( state $end
$upscope $end
$upscope $end

$scope module B_C_2 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 M" D $end
$var wire 1 u$ WriteEnable $end
$var wire 1 U$ ReadEnabel1 $end
$var wire 1 e$ ReadEnable2 $end
$var wire 1 ,% Bitline1 $end
$var wire 1 <% Bitline2 $end
$var wire 1 `( q_2_reg $end

$scope module b_c $end
$var wire 1 `( q $end
$var wire 1 M" d $end
$var wire 1 u$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 a( state $end
$upscope $end
$upscope $end

$scope module B_C_1 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 N" D $end
$var wire 1 u$ WriteEnable $end
$var wire 1 U$ ReadEnabel1 $end
$var wire 1 e$ ReadEnable2 $end
$var wire 1 -% Bitline1 $end
$var wire 1 =% Bitline2 $end
$var wire 1 b( q_2_reg $end

$scope module b_c $end
$var wire 1 b( q $end
$var wire 1 N" d $end
$var wire 1 u$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 c( state $end
$upscope $end
$upscope $end
$upscope $end

$scope module R6 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 v$ WriteReg $end
$var wire 1 V$ ReadEnable1 $end
$var wire 1 f$ ReadEnable2 $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 |$ Bitline1 [15] $end
$var wire 1 }$ Bitline1 [14] $end
$var wire 1 ~$ Bitline1 [13] $end
$var wire 1 !% Bitline1 [12] $end
$var wire 1 "% Bitline1 [11] $end
$var wire 1 #% Bitline1 [10] $end
$var wire 1 $% Bitline1 [9] $end
$var wire 1 %% Bitline1 [8] $end
$var wire 1 &% Bitline1 [7] $end
$var wire 1 '% Bitline1 [6] $end
$var wire 1 (% Bitline1 [5] $end
$var wire 1 )% Bitline1 [4] $end
$var wire 1 *% Bitline1 [3] $end
$var wire 1 +% Bitline1 [2] $end
$var wire 1 ,% Bitline1 [1] $end
$var wire 1 -% Bitline1 [0] $end
$var wire 1 .% Bitline2 [15] $end
$var wire 1 /% Bitline2 [14] $end
$var wire 1 0% Bitline2 [13] $end
$var wire 1 1% Bitline2 [12] $end
$var wire 1 2% Bitline2 [11] $end
$var wire 1 3% Bitline2 [10] $end
$var wire 1 4% Bitline2 [9] $end
$var wire 1 5% Bitline2 [8] $end
$var wire 1 6% Bitline2 [7] $end
$var wire 1 7% Bitline2 [6] $end
$var wire 1 8% Bitline2 [5] $end
$var wire 1 9% Bitline2 [4] $end
$var wire 1 :% Bitline2 [3] $end
$var wire 1 ;% Bitline2 [2] $end
$var wire 1 <% Bitline2 [1] $end
$var wire 1 =% Bitline2 [0] $end

$scope module B_C_16 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 ?" D $end
$var wire 1 v$ WriteEnable $end
$var wire 1 V$ ReadEnabel1 $end
$var wire 1 f$ ReadEnable2 $end
$var wire 1 |$ Bitline1 $end
$var wire 1 .% Bitline2 $end
$var wire 1 d( q_2_reg $end

$scope module b_c $end
$var wire 1 d( q $end
$var wire 1 ?" d $end
$var wire 1 v$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 e( state $end
$upscope $end
$upscope $end

$scope module B_C_15 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 @" D $end
$var wire 1 v$ WriteEnable $end
$var wire 1 V$ ReadEnabel1 $end
$var wire 1 f$ ReadEnable2 $end
$var wire 1 }$ Bitline1 $end
$var wire 1 /% Bitline2 $end
$var wire 1 f( q_2_reg $end

$scope module b_c $end
$var wire 1 f( q $end
$var wire 1 @" d $end
$var wire 1 v$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 g( state $end
$upscope $end
$upscope $end

$scope module B_C_14 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 A" D $end
$var wire 1 v$ WriteEnable $end
$var wire 1 V$ ReadEnabel1 $end
$var wire 1 f$ ReadEnable2 $end
$var wire 1 ~$ Bitline1 $end
$var wire 1 0% Bitline2 $end
$var wire 1 h( q_2_reg $end

$scope module b_c $end
$var wire 1 h( q $end
$var wire 1 A" d $end
$var wire 1 v$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 i( state $end
$upscope $end
$upscope $end

$scope module B_C_13 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 B" D $end
$var wire 1 v$ WriteEnable $end
$var wire 1 V$ ReadEnabel1 $end
$var wire 1 f$ ReadEnable2 $end
$var wire 1 !% Bitline1 $end
$var wire 1 1% Bitline2 $end
$var wire 1 j( q_2_reg $end

$scope module b_c $end
$var wire 1 j( q $end
$var wire 1 B" d $end
$var wire 1 v$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 k( state $end
$upscope $end
$upscope $end

$scope module B_C_12 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 C" D $end
$var wire 1 v$ WriteEnable $end
$var wire 1 V$ ReadEnabel1 $end
$var wire 1 f$ ReadEnable2 $end
$var wire 1 "% Bitline1 $end
$var wire 1 2% Bitline2 $end
$var wire 1 l( q_2_reg $end

$scope module b_c $end
$var wire 1 l( q $end
$var wire 1 C" d $end
$var wire 1 v$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 m( state $end
$upscope $end
$upscope $end

$scope module B_C_11 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 D" D $end
$var wire 1 v$ WriteEnable $end
$var wire 1 V$ ReadEnabel1 $end
$var wire 1 f$ ReadEnable2 $end
$var wire 1 #% Bitline1 $end
$var wire 1 3% Bitline2 $end
$var wire 1 n( q_2_reg $end

$scope module b_c $end
$var wire 1 n( q $end
$var wire 1 D" d $end
$var wire 1 v$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 o( state $end
$upscope $end
$upscope $end

$scope module B_C_10 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 E" D $end
$var wire 1 v$ WriteEnable $end
$var wire 1 V$ ReadEnabel1 $end
$var wire 1 f$ ReadEnable2 $end
$var wire 1 $% Bitline1 $end
$var wire 1 4% Bitline2 $end
$var wire 1 p( q_2_reg $end

$scope module b_c $end
$var wire 1 p( q $end
$var wire 1 E" d $end
$var wire 1 v$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 q( state $end
$upscope $end
$upscope $end

$scope module B_C_9 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 F" D $end
$var wire 1 v$ WriteEnable $end
$var wire 1 V$ ReadEnabel1 $end
$var wire 1 f$ ReadEnable2 $end
$var wire 1 %% Bitline1 $end
$var wire 1 5% Bitline2 $end
$var wire 1 r( q_2_reg $end

$scope module b_c $end
$var wire 1 r( q $end
$var wire 1 F" d $end
$var wire 1 v$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 s( state $end
$upscope $end
$upscope $end

$scope module B_C_8 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 G" D $end
$var wire 1 v$ WriteEnable $end
$var wire 1 V$ ReadEnabel1 $end
$var wire 1 f$ ReadEnable2 $end
$var wire 1 &% Bitline1 $end
$var wire 1 6% Bitline2 $end
$var wire 1 t( q_2_reg $end

$scope module b_c $end
$var wire 1 t( q $end
$var wire 1 G" d $end
$var wire 1 v$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 u( state $end
$upscope $end
$upscope $end

$scope module B_C_7 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 H" D $end
$var wire 1 v$ WriteEnable $end
$var wire 1 V$ ReadEnabel1 $end
$var wire 1 f$ ReadEnable2 $end
$var wire 1 '% Bitline1 $end
$var wire 1 7% Bitline2 $end
$var wire 1 v( q_2_reg $end

$scope module b_c $end
$var wire 1 v( q $end
$var wire 1 H" d $end
$var wire 1 v$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 w( state $end
$upscope $end
$upscope $end

$scope module B_C_6 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 I" D $end
$var wire 1 v$ WriteEnable $end
$var wire 1 V$ ReadEnabel1 $end
$var wire 1 f$ ReadEnable2 $end
$var wire 1 (% Bitline1 $end
$var wire 1 8% Bitline2 $end
$var wire 1 x( q_2_reg $end

$scope module b_c $end
$var wire 1 x( q $end
$var wire 1 I" d $end
$var wire 1 v$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 y( state $end
$upscope $end
$upscope $end

$scope module B_C_5 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 J" D $end
$var wire 1 v$ WriteEnable $end
$var wire 1 V$ ReadEnabel1 $end
$var wire 1 f$ ReadEnable2 $end
$var wire 1 )% Bitline1 $end
$var wire 1 9% Bitline2 $end
$var wire 1 z( q_2_reg $end

$scope module b_c $end
$var wire 1 z( q $end
$var wire 1 J" d $end
$var wire 1 v$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 {( state $end
$upscope $end
$upscope $end

$scope module B_C_4 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 K" D $end
$var wire 1 v$ WriteEnable $end
$var wire 1 V$ ReadEnabel1 $end
$var wire 1 f$ ReadEnable2 $end
$var wire 1 *% Bitline1 $end
$var wire 1 :% Bitline2 $end
$var wire 1 |( q_2_reg $end

$scope module b_c $end
$var wire 1 |( q $end
$var wire 1 K" d $end
$var wire 1 v$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 }( state $end
$upscope $end
$upscope $end

$scope module B_C_3 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 L" D $end
$var wire 1 v$ WriteEnable $end
$var wire 1 V$ ReadEnabel1 $end
$var wire 1 f$ ReadEnable2 $end
$var wire 1 +% Bitline1 $end
$var wire 1 ;% Bitline2 $end
$var wire 1 ~( q_2_reg $end

$scope module b_c $end
$var wire 1 ~( q $end
$var wire 1 L" d $end
$var wire 1 v$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 !) state $end
$upscope $end
$upscope $end

$scope module B_C_2 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 M" D $end
$var wire 1 v$ WriteEnable $end
$var wire 1 V$ ReadEnabel1 $end
$var wire 1 f$ ReadEnable2 $end
$var wire 1 ,% Bitline1 $end
$var wire 1 <% Bitline2 $end
$var wire 1 ") q_2_reg $end

$scope module b_c $end
$var wire 1 ") q $end
$var wire 1 M" d $end
$var wire 1 v$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 #) state $end
$upscope $end
$upscope $end

$scope module B_C_1 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 N" D $end
$var wire 1 v$ WriteEnable $end
$var wire 1 V$ ReadEnabel1 $end
$var wire 1 f$ ReadEnable2 $end
$var wire 1 -% Bitline1 $end
$var wire 1 =% Bitline2 $end
$var wire 1 $) q_2_reg $end

$scope module b_c $end
$var wire 1 $) q $end
$var wire 1 N" d $end
$var wire 1 v$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 %) state $end
$upscope $end
$upscope $end
$upscope $end

$scope module R5 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 w$ WriteReg $end
$var wire 1 W$ ReadEnable1 $end
$var wire 1 g$ ReadEnable2 $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 |$ Bitline1 [15] $end
$var wire 1 }$ Bitline1 [14] $end
$var wire 1 ~$ Bitline1 [13] $end
$var wire 1 !% Bitline1 [12] $end
$var wire 1 "% Bitline1 [11] $end
$var wire 1 #% Bitline1 [10] $end
$var wire 1 $% Bitline1 [9] $end
$var wire 1 %% Bitline1 [8] $end
$var wire 1 &% Bitline1 [7] $end
$var wire 1 '% Bitline1 [6] $end
$var wire 1 (% Bitline1 [5] $end
$var wire 1 )% Bitline1 [4] $end
$var wire 1 *% Bitline1 [3] $end
$var wire 1 +% Bitline1 [2] $end
$var wire 1 ,% Bitline1 [1] $end
$var wire 1 -% Bitline1 [0] $end
$var wire 1 .% Bitline2 [15] $end
$var wire 1 /% Bitline2 [14] $end
$var wire 1 0% Bitline2 [13] $end
$var wire 1 1% Bitline2 [12] $end
$var wire 1 2% Bitline2 [11] $end
$var wire 1 3% Bitline2 [10] $end
$var wire 1 4% Bitline2 [9] $end
$var wire 1 5% Bitline2 [8] $end
$var wire 1 6% Bitline2 [7] $end
$var wire 1 7% Bitline2 [6] $end
$var wire 1 8% Bitline2 [5] $end
$var wire 1 9% Bitline2 [4] $end
$var wire 1 :% Bitline2 [3] $end
$var wire 1 ;% Bitline2 [2] $end
$var wire 1 <% Bitline2 [1] $end
$var wire 1 =% Bitline2 [0] $end

$scope module B_C_16 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 ?" D $end
$var wire 1 w$ WriteEnable $end
$var wire 1 W$ ReadEnabel1 $end
$var wire 1 g$ ReadEnable2 $end
$var wire 1 |$ Bitline1 $end
$var wire 1 .% Bitline2 $end
$var wire 1 &) q_2_reg $end

$scope module b_c $end
$var wire 1 &) q $end
$var wire 1 ?" d $end
$var wire 1 w$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 ') state $end
$upscope $end
$upscope $end

$scope module B_C_15 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 @" D $end
$var wire 1 w$ WriteEnable $end
$var wire 1 W$ ReadEnabel1 $end
$var wire 1 g$ ReadEnable2 $end
$var wire 1 }$ Bitline1 $end
$var wire 1 /% Bitline2 $end
$var wire 1 () q_2_reg $end

$scope module b_c $end
$var wire 1 () q $end
$var wire 1 @" d $end
$var wire 1 w$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 )) state $end
$upscope $end
$upscope $end

$scope module B_C_14 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 A" D $end
$var wire 1 w$ WriteEnable $end
$var wire 1 W$ ReadEnabel1 $end
$var wire 1 g$ ReadEnable2 $end
$var wire 1 ~$ Bitline1 $end
$var wire 1 0% Bitline2 $end
$var wire 1 *) q_2_reg $end

$scope module b_c $end
$var wire 1 *) q $end
$var wire 1 A" d $end
$var wire 1 w$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 +) state $end
$upscope $end
$upscope $end

$scope module B_C_13 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 B" D $end
$var wire 1 w$ WriteEnable $end
$var wire 1 W$ ReadEnabel1 $end
$var wire 1 g$ ReadEnable2 $end
$var wire 1 !% Bitline1 $end
$var wire 1 1% Bitline2 $end
$var wire 1 ,) q_2_reg $end

$scope module b_c $end
$var wire 1 ,) q $end
$var wire 1 B" d $end
$var wire 1 w$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 -) state $end
$upscope $end
$upscope $end

$scope module B_C_12 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 C" D $end
$var wire 1 w$ WriteEnable $end
$var wire 1 W$ ReadEnabel1 $end
$var wire 1 g$ ReadEnable2 $end
$var wire 1 "% Bitline1 $end
$var wire 1 2% Bitline2 $end
$var wire 1 .) q_2_reg $end

$scope module b_c $end
$var wire 1 .) q $end
$var wire 1 C" d $end
$var wire 1 w$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 /) state $end
$upscope $end
$upscope $end

$scope module B_C_11 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 D" D $end
$var wire 1 w$ WriteEnable $end
$var wire 1 W$ ReadEnabel1 $end
$var wire 1 g$ ReadEnable2 $end
$var wire 1 #% Bitline1 $end
$var wire 1 3% Bitline2 $end
$var wire 1 0) q_2_reg $end

$scope module b_c $end
$var wire 1 0) q $end
$var wire 1 D" d $end
$var wire 1 w$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 1) state $end
$upscope $end
$upscope $end

$scope module B_C_10 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 E" D $end
$var wire 1 w$ WriteEnable $end
$var wire 1 W$ ReadEnabel1 $end
$var wire 1 g$ ReadEnable2 $end
$var wire 1 $% Bitline1 $end
$var wire 1 4% Bitline2 $end
$var wire 1 2) q_2_reg $end

$scope module b_c $end
$var wire 1 2) q $end
$var wire 1 E" d $end
$var wire 1 w$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 3) state $end
$upscope $end
$upscope $end

$scope module B_C_9 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 F" D $end
$var wire 1 w$ WriteEnable $end
$var wire 1 W$ ReadEnabel1 $end
$var wire 1 g$ ReadEnable2 $end
$var wire 1 %% Bitline1 $end
$var wire 1 5% Bitline2 $end
$var wire 1 4) q_2_reg $end

$scope module b_c $end
$var wire 1 4) q $end
$var wire 1 F" d $end
$var wire 1 w$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 5) state $end
$upscope $end
$upscope $end

$scope module B_C_8 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 G" D $end
$var wire 1 w$ WriteEnable $end
$var wire 1 W$ ReadEnabel1 $end
$var wire 1 g$ ReadEnable2 $end
$var wire 1 &% Bitline1 $end
$var wire 1 6% Bitline2 $end
$var wire 1 6) q_2_reg $end

$scope module b_c $end
$var wire 1 6) q $end
$var wire 1 G" d $end
$var wire 1 w$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 7) state $end
$upscope $end
$upscope $end

$scope module B_C_7 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 H" D $end
$var wire 1 w$ WriteEnable $end
$var wire 1 W$ ReadEnabel1 $end
$var wire 1 g$ ReadEnable2 $end
$var wire 1 '% Bitline1 $end
$var wire 1 7% Bitline2 $end
$var wire 1 8) q_2_reg $end

$scope module b_c $end
$var wire 1 8) q $end
$var wire 1 H" d $end
$var wire 1 w$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 9) state $end
$upscope $end
$upscope $end

$scope module B_C_6 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 I" D $end
$var wire 1 w$ WriteEnable $end
$var wire 1 W$ ReadEnabel1 $end
$var wire 1 g$ ReadEnable2 $end
$var wire 1 (% Bitline1 $end
$var wire 1 8% Bitline2 $end
$var wire 1 :) q_2_reg $end

$scope module b_c $end
$var wire 1 :) q $end
$var wire 1 I" d $end
$var wire 1 w$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 ;) state $end
$upscope $end
$upscope $end

$scope module B_C_5 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 J" D $end
$var wire 1 w$ WriteEnable $end
$var wire 1 W$ ReadEnabel1 $end
$var wire 1 g$ ReadEnable2 $end
$var wire 1 )% Bitline1 $end
$var wire 1 9% Bitline2 $end
$var wire 1 <) q_2_reg $end

$scope module b_c $end
$var wire 1 <) q $end
$var wire 1 J" d $end
$var wire 1 w$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 =) state $end
$upscope $end
$upscope $end

$scope module B_C_4 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 K" D $end
$var wire 1 w$ WriteEnable $end
$var wire 1 W$ ReadEnabel1 $end
$var wire 1 g$ ReadEnable2 $end
$var wire 1 *% Bitline1 $end
$var wire 1 :% Bitline2 $end
$var wire 1 >) q_2_reg $end

$scope module b_c $end
$var wire 1 >) q $end
$var wire 1 K" d $end
$var wire 1 w$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 ?) state $end
$upscope $end
$upscope $end

$scope module B_C_3 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 L" D $end
$var wire 1 w$ WriteEnable $end
$var wire 1 W$ ReadEnabel1 $end
$var wire 1 g$ ReadEnable2 $end
$var wire 1 +% Bitline1 $end
$var wire 1 ;% Bitline2 $end
$var wire 1 @) q_2_reg $end

$scope module b_c $end
$var wire 1 @) q $end
$var wire 1 L" d $end
$var wire 1 w$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 A) state $end
$upscope $end
$upscope $end

$scope module B_C_2 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 M" D $end
$var wire 1 w$ WriteEnable $end
$var wire 1 W$ ReadEnabel1 $end
$var wire 1 g$ ReadEnable2 $end
$var wire 1 ,% Bitline1 $end
$var wire 1 <% Bitline2 $end
$var wire 1 B) q_2_reg $end

$scope module b_c $end
$var wire 1 B) q $end
$var wire 1 M" d $end
$var wire 1 w$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 C) state $end
$upscope $end
$upscope $end

$scope module B_C_1 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 N" D $end
$var wire 1 w$ WriteEnable $end
$var wire 1 W$ ReadEnabel1 $end
$var wire 1 g$ ReadEnable2 $end
$var wire 1 -% Bitline1 $end
$var wire 1 =% Bitline2 $end
$var wire 1 D) q_2_reg $end

$scope module b_c $end
$var wire 1 D) q $end
$var wire 1 N" d $end
$var wire 1 w$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 E) state $end
$upscope $end
$upscope $end
$upscope $end

$scope module R4 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 x$ WriteReg $end
$var wire 1 X$ ReadEnable1 $end
$var wire 1 h$ ReadEnable2 $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 |$ Bitline1 [15] $end
$var wire 1 }$ Bitline1 [14] $end
$var wire 1 ~$ Bitline1 [13] $end
$var wire 1 !% Bitline1 [12] $end
$var wire 1 "% Bitline1 [11] $end
$var wire 1 #% Bitline1 [10] $end
$var wire 1 $% Bitline1 [9] $end
$var wire 1 %% Bitline1 [8] $end
$var wire 1 &% Bitline1 [7] $end
$var wire 1 '% Bitline1 [6] $end
$var wire 1 (% Bitline1 [5] $end
$var wire 1 )% Bitline1 [4] $end
$var wire 1 *% Bitline1 [3] $end
$var wire 1 +% Bitline1 [2] $end
$var wire 1 ,% Bitline1 [1] $end
$var wire 1 -% Bitline1 [0] $end
$var wire 1 .% Bitline2 [15] $end
$var wire 1 /% Bitline2 [14] $end
$var wire 1 0% Bitline2 [13] $end
$var wire 1 1% Bitline2 [12] $end
$var wire 1 2% Bitline2 [11] $end
$var wire 1 3% Bitline2 [10] $end
$var wire 1 4% Bitline2 [9] $end
$var wire 1 5% Bitline2 [8] $end
$var wire 1 6% Bitline2 [7] $end
$var wire 1 7% Bitline2 [6] $end
$var wire 1 8% Bitline2 [5] $end
$var wire 1 9% Bitline2 [4] $end
$var wire 1 :% Bitline2 [3] $end
$var wire 1 ;% Bitline2 [2] $end
$var wire 1 <% Bitline2 [1] $end
$var wire 1 =% Bitline2 [0] $end

$scope module B_C_16 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 ?" D $end
$var wire 1 x$ WriteEnable $end
$var wire 1 X$ ReadEnabel1 $end
$var wire 1 h$ ReadEnable2 $end
$var wire 1 |$ Bitline1 $end
$var wire 1 .% Bitline2 $end
$var wire 1 F) q_2_reg $end

$scope module b_c $end
$var wire 1 F) q $end
$var wire 1 ?" d $end
$var wire 1 x$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 G) state $end
$upscope $end
$upscope $end

$scope module B_C_15 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 @" D $end
$var wire 1 x$ WriteEnable $end
$var wire 1 X$ ReadEnabel1 $end
$var wire 1 h$ ReadEnable2 $end
$var wire 1 }$ Bitline1 $end
$var wire 1 /% Bitline2 $end
$var wire 1 H) q_2_reg $end

$scope module b_c $end
$var wire 1 H) q $end
$var wire 1 @" d $end
$var wire 1 x$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 I) state $end
$upscope $end
$upscope $end

$scope module B_C_14 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 A" D $end
$var wire 1 x$ WriteEnable $end
$var wire 1 X$ ReadEnabel1 $end
$var wire 1 h$ ReadEnable2 $end
$var wire 1 ~$ Bitline1 $end
$var wire 1 0% Bitline2 $end
$var wire 1 J) q_2_reg $end

$scope module b_c $end
$var wire 1 J) q $end
$var wire 1 A" d $end
$var wire 1 x$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 K) state $end
$upscope $end
$upscope $end

$scope module B_C_13 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 B" D $end
$var wire 1 x$ WriteEnable $end
$var wire 1 X$ ReadEnabel1 $end
$var wire 1 h$ ReadEnable2 $end
$var wire 1 !% Bitline1 $end
$var wire 1 1% Bitline2 $end
$var wire 1 L) q_2_reg $end

$scope module b_c $end
$var wire 1 L) q $end
$var wire 1 B" d $end
$var wire 1 x$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 M) state $end
$upscope $end
$upscope $end

$scope module B_C_12 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 C" D $end
$var wire 1 x$ WriteEnable $end
$var wire 1 X$ ReadEnabel1 $end
$var wire 1 h$ ReadEnable2 $end
$var wire 1 "% Bitline1 $end
$var wire 1 2% Bitline2 $end
$var wire 1 N) q_2_reg $end

$scope module b_c $end
$var wire 1 N) q $end
$var wire 1 C" d $end
$var wire 1 x$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 O) state $end
$upscope $end
$upscope $end

$scope module B_C_11 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 D" D $end
$var wire 1 x$ WriteEnable $end
$var wire 1 X$ ReadEnabel1 $end
$var wire 1 h$ ReadEnable2 $end
$var wire 1 #% Bitline1 $end
$var wire 1 3% Bitline2 $end
$var wire 1 P) q_2_reg $end

$scope module b_c $end
$var wire 1 P) q $end
$var wire 1 D" d $end
$var wire 1 x$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 Q) state $end
$upscope $end
$upscope $end

$scope module B_C_10 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 E" D $end
$var wire 1 x$ WriteEnable $end
$var wire 1 X$ ReadEnabel1 $end
$var wire 1 h$ ReadEnable2 $end
$var wire 1 $% Bitline1 $end
$var wire 1 4% Bitline2 $end
$var wire 1 R) q_2_reg $end

$scope module b_c $end
$var wire 1 R) q $end
$var wire 1 E" d $end
$var wire 1 x$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 S) state $end
$upscope $end
$upscope $end

$scope module B_C_9 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 F" D $end
$var wire 1 x$ WriteEnable $end
$var wire 1 X$ ReadEnabel1 $end
$var wire 1 h$ ReadEnable2 $end
$var wire 1 %% Bitline1 $end
$var wire 1 5% Bitline2 $end
$var wire 1 T) q_2_reg $end

$scope module b_c $end
$var wire 1 T) q $end
$var wire 1 F" d $end
$var wire 1 x$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 U) state $end
$upscope $end
$upscope $end

$scope module B_C_8 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 G" D $end
$var wire 1 x$ WriteEnable $end
$var wire 1 X$ ReadEnabel1 $end
$var wire 1 h$ ReadEnable2 $end
$var wire 1 &% Bitline1 $end
$var wire 1 6% Bitline2 $end
$var wire 1 V) q_2_reg $end

$scope module b_c $end
$var wire 1 V) q $end
$var wire 1 G" d $end
$var wire 1 x$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 W) state $end
$upscope $end
$upscope $end

$scope module B_C_7 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 H" D $end
$var wire 1 x$ WriteEnable $end
$var wire 1 X$ ReadEnabel1 $end
$var wire 1 h$ ReadEnable2 $end
$var wire 1 '% Bitline1 $end
$var wire 1 7% Bitline2 $end
$var wire 1 X) q_2_reg $end

$scope module b_c $end
$var wire 1 X) q $end
$var wire 1 H" d $end
$var wire 1 x$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 Y) state $end
$upscope $end
$upscope $end

$scope module B_C_6 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 I" D $end
$var wire 1 x$ WriteEnable $end
$var wire 1 X$ ReadEnabel1 $end
$var wire 1 h$ ReadEnable2 $end
$var wire 1 (% Bitline1 $end
$var wire 1 8% Bitline2 $end
$var wire 1 Z) q_2_reg $end

$scope module b_c $end
$var wire 1 Z) q $end
$var wire 1 I" d $end
$var wire 1 x$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 [) state $end
$upscope $end
$upscope $end

$scope module B_C_5 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 J" D $end
$var wire 1 x$ WriteEnable $end
$var wire 1 X$ ReadEnabel1 $end
$var wire 1 h$ ReadEnable2 $end
$var wire 1 )% Bitline1 $end
$var wire 1 9% Bitline2 $end
$var wire 1 \) q_2_reg $end

$scope module b_c $end
$var wire 1 \) q $end
$var wire 1 J" d $end
$var wire 1 x$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 ]) state $end
$upscope $end
$upscope $end

$scope module B_C_4 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 K" D $end
$var wire 1 x$ WriteEnable $end
$var wire 1 X$ ReadEnabel1 $end
$var wire 1 h$ ReadEnable2 $end
$var wire 1 *% Bitline1 $end
$var wire 1 :% Bitline2 $end
$var wire 1 ^) q_2_reg $end

$scope module b_c $end
$var wire 1 ^) q $end
$var wire 1 K" d $end
$var wire 1 x$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 _) state $end
$upscope $end
$upscope $end

$scope module B_C_3 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 L" D $end
$var wire 1 x$ WriteEnable $end
$var wire 1 X$ ReadEnabel1 $end
$var wire 1 h$ ReadEnable2 $end
$var wire 1 +% Bitline1 $end
$var wire 1 ;% Bitline2 $end
$var wire 1 `) q_2_reg $end

$scope module b_c $end
$var wire 1 `) q $end
$var wire 1 L" d $end
$var wire 1 x$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 a) state $end
$upscope $end
$upscope $end

$scope module B_C_2 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 M" D $end
$var wire 1 x$ WriteEnable $end
$var wire 1 X$ ReadEnabel1 $end
$var wire 1 h$ ReadEnable2 $end
$var wire 1 ,% Bitline1 $end
$var wire 1 <% Bitline2 $end
$var wire 1 b) q_2_reg $end

$scope module b_c $end
$var wire 1 b) q $end
$var wire 1 M" d $end
$var wire 1 x$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 c) state $end
$upscope $end
$upscope $end

$scope module B_C_1 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 N" D $end
$var wire 1 x$ WriteEnable $end
$var wire 1 X$ ReadEnabel1 $end
$var wire 1 h$ ReadEnable2 $end
$var wire 1 -% Bitline1 $end
$var wire 1 =% Bitline2 $end
$var wire 1 d) q_2_reg $end

$scope module b_c $end
$var wire 1 d) q $end
$var wire 1 N" d $end
$var wire 1 x$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 e) state $end
$upscope $end
$upscope $end
$upscope $end

$scope module R3 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 y$ WriteReg $end
$var wire 1 Y$ ReadEnable1 $end
$var wire 1 i$ ReadEnable2 $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 |$ Bitline1 [15] $end
$var wire 1 }$ Bitline1 [14] $end
$var wire 1 ~$ Bitline1 [13] $end
$var wire 1 !% Bitline1 [12] $end
$var wire 1 "% Bitline1 [11] $end
$var wire 1 #% Bitline1 [10] $end
$var wire 1 $% Bitline1 [9] $end
$var wire 1 %% Bitline1 [8] $end
$var wire 1 &% Bitline1 [7] $end
$var wire 1 '% Bitline1 [6] $end
$var wire 1 (% Bitline1 [5] $end
$var wire 1 )% Bitline1 [4] $end
$var wire 1 *% Bitline1 [3] $end
$var wire 1 +% Bitline1 [2] $end
$var wire 1 ,% Bitline1 [1] $end
$var wire 1 -% Bitline1 [0] $end
$var wire 1 .% Bitline2 [15] $end
$var wire 1 /% Bitline2 [14] $end
$var wire 1 0% Bitline2 [13] $end
$var wire 1 1% Bitline2 [12] $end
$var wire 1 2% Bitline2 [11] $end
$var wire 1 3% Bitline2 [10] $end
$var wire 1 4% Bitline2 [9] $end
$var wire 1 5% Bitline2 [8] $end
$var wire 1 6% Bitline2 [7] $end
$var wire 1 7% Bitline2 [6] $end
$var wire 1 8% Bitline2 [5] $end
$var wire 1 9% Bitline2 [4] $end
$var wire 1 :% Bitline2 [3] $end
$var wire 1 ;% Bitline2 [2] $end
$var wire 1 <% Bitline2 [1] $end
$var wire 1 =% Bitline2 [0] $end

$scope module B_C_16 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 ?" D $end
$var wire 1 y$ WriteEnable $end
$var wire 1 Y$ ReadEnabel1 $end
$var wire 1 i$ ReadEnable2 $end
$var wire 1 |$ Bitline1 $end
$var wire 1 .% Bitline2 $end
$var wire 1 f) q_2_reg $end

$scope module b_c $end
$var wire 1 f) q $end
$var wire 1 ?" d $end
$var wire 1 y$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 g) state $end
$upscope $end
$upscope $end

$scope module B_C_15 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 @" D $end
$var wire 1 y$ WriteEnable $end
$var wire 1 Y$ ReadEnabel1 $end
$var wire 1 i$ ReadEnable2 $end
$var wire 1 }$ Bitline1 $end
$var wire 1 /% Bitline2 $end
$var wire 1 h) q_2_reg $end

$scope module b_c $end
$var wire 1 h) q $end
$var wire 1 @" d $end
$var wire 1 y$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 i) state $end
$upscope $end
$upscope $end

$scope module B_C_14 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 A" D $end
$var wire 1 y$ WriteEnable $end
$var wire 1 Y$ ReadEnabel1 $end
$var wire 1 i$ ReadEnable2 $end
$var wire 1 ~$ Bitline1 $end
$var wire 1 0% Bitline2 $end
$var wire 1 j) q_2_reg $end

$scope module b_c $end
$var wire 1 j) q $end
$var wire 1 A" d $end
$var wire 1 y$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 k) state $end
$upscope $end
$upscope $end

$scope module B_C_13 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 B" D $end
$var wire 1 y$ WriteEnable $end
$var wire 1 Y$ ReadEnabel1 $end
$var wire 1 i$ ReadEnable2 $end
$var wire 1 !% Bitline1 $end
$var wire 1 1% Bitline2 $end
$var wire 1 l) q_2_reg $end

$scope module b_c $end
$var wire 1 l) q $end
$var wire 1 B" d $end
$var wire 1 y$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 m) state $end
$upscope $end
$upscope $end

$scope module B_C_12 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 C" D $end
$var wire 1 y$ WriteEnable $end
$var wire 1 Y$ ReadEnabel1 $end
$var wire 1 i$ ReadEnable2 $end
$var wire 1 "% Bitline1 $end
$var wire 1 2% Bitline2 $end
$var wire 1 n) q_2_reg $end

$scope module b_c $end
$var wire 1 n) q $end
$var wire 1 C" d $end
$var wire 1 y$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 o) state $end
$upscope $end
$upscope $end

$scope module B_C_11 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 D" D $end
$var wire 1 y$ WriteEnable $end
$var wire 1 Y$ ReadEnabel1 $end
$var wire 1 i$ ReadEnable2 $end
$var wire 1 #% Bitline1 $end
$var wire 1 3% Bitline2 $end
$var wire 1 p) q_2_reg $end

$scope module b_c $end
$var wire 1 p) q $end
$var wire 1 D" d $end
$var wire 1 y$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 q) state $end
$upscope $end
$upscope $end

$scope module B_C_10 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 E" D $end
$var wire 1 y$ WriteEnable $end
$var wire 1 Y$ ReadEnabel1 $end
$var wire 1 i$ ReadEnable2 $end
$var wire 1 $% Bitline1 $end
$var wire 1 4% Bitline2 $end
$var wire 1 r) q_2_reg $end

$scope module b_c $end
$var wire 1 r) q $end
$var wire 1 E" d $end
$var wire 1 y$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 s) state $end
$upscope $end
$upscope $end

$scope module B_C_9 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 F" D $end
$var wire 1 y$ WriteEnable $end
$var wire 1 Y$ ReadEnabel1 $end
$var wire 1 i$ ReadEnable2 $end
$var wire 1 %% Bitline1 $end
$var wire 1 5% Bitline2 $end
$var wire 1 t) q_2_reg $end

$scope module b_c $end
$var wire 1 t) q $end
$var wire 1 F" d $end
$var wire 1 y$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 u) state $end
$upscope $end
$upscope $end

$scope module B_C_8 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 G" D $end
$var wire 1 y$ WriteEnable $end
$var wire 1 Y$ ReadEnabel1 $end
$var wire 1 i$ ReadEnable2 $end
$var wire 1 &% Bitline1 $end
$var wire 1 6% Bitline2 $end
$var wire 1 v) q_2_reg $end

$scope module b_c $end
$var wire 1 v) q $end
$var wire 1 G" d $end
$var wire 1 y$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 w) state $end
$upscope $end
$upscope $end

$scope module B_C_7 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 H" D $end
$var wire 1 y$ WriteEnable $end
$var wire 1 Y$ ReadEnabel1 $end
$var wire 1 i$ ReadEnable2 $end
$var wire 1 '% Bitline1 $end
$var wire 1 7% Bitline2 $end
$var wire 1 x) q_2_reg $end

$scope module b_c $end
$var wire 1 x) q $end
$var wire 1 H" d $end
$var wire 1 y$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 y) state $end
$upscope $end
$upscope $end

$scope module B_C_6 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 I" D $end
$var wire 1 y$ WriteEnable $end
$var wire 1 Y$ ReadEnabel1 $end
$var wire 1 i$ ReadEnable2 $end
$var wire 1 (% Bitline1 $end
$var wire 1 8% Bitline2 $end
$var wire 1 z) q_2_reg $end

$scope module b_c $end
$var wire 1 z) q $end
$var wire 1 I" d $end
$var wire 1 y$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 {) state $end
$upscope $end
$upscope $end

$scope module B_C_5 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 J" D $end
$var wire 1 y$ WriteEnable $end
$var wire 1 Y$ ReadEnabel1 $end
$var wire 1 i$ ReadEnable2 $end
$var wire 1 )% Bitline1 $end
$var wire 1 9% Bitline2 $end
$var wire 1 |) q_2_reg $end

$scope module b_c $end
$var wire 1 |) q $end
$var wire 1 J" d $end
$var wire 1 y$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 }) state $end
$upscope $end
$upscope $end

$scope module B_C_4 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 K" D $end
$var wire 1 y$ WriteEnable $end
$var wire 1 Y$ ReadEnabel1 $end
$var wire 1 i$ ReadEnable2 $end
$var wire 1 *% Bitline1 $end
$var wire 1 :% Bitline2 $end
$var wire 1 ~) q_2_reg $end

$scope module b_c $end
$var wire 1 ~) q $end
$var wire 1 K" d $end
$var wire 1 y$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 !* state $end
$upscope $end
$upscope $end

$scope module B_C_3 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 L" D $end
$var wire 1 y$ WriteEnable $end
$var wire 1 Y$ ReadEnabel1 $end
$var wire 1 i$ ReadEnable2 $end
$var wire 1 +% Bitline1 $end
$var wire 1 ;% Bitline2 $end
$var wire 1 "* q_2_reg $end

$scope module b_c $end
$var wire 1 "* q $end
$var wire 1 L" d $end
$var wire 1 y$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 #* state $end
$upscope $end
$upscope $end

$scope module B_C_2 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 M" D $end
$var wire 1 y$ WriteEnable $end
$var wire 1 Y$ ReadEnabel1 $end
$var wire 1 i$ ReadEnable2 $end
$var wire 1 ,% Bitline1 $end
$var wire 1 <% Bitline2 $end
$var wire 1 $* q_2_reg $end

$scope module b_c $end
$var wire 1 $* q $end
$var wire 1 M" d $end
$var wire 1 y$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 %* state $end
$upscope $end
$upscope $end

$scope module B_C_1 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 N" D $end
$var wire 1 y$ WriteEnable $end
$var wire 1 Y$ ReadEnabel1 $end
$var wire 1 i$ ReadEnable2 $end
$var wire 1 -% Bitline1 $end
$var wire 1 =% Bitline2 $end
$var wire 1 &* q_2_reg $end

$scope module b_c $end
$var wire 1 &* q $end
$var wire 1 N" d $end
$var wire 1 y$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 '* state $end
$upscope $end
$upscope $end
$upscope $end

$scope module R2 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 z$ WriteReg $end
$var wire 1 Z$ ReadEnable1 $end
$var wire 1 j$ ReadEnable2 $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 |$ Bitline1 [15] $end
$var wire 1 }$ Bitline1 [14] $end
$var wire 1 ~$ Bitline1 [13] $end
$var wire 1 !% Bitline1 [12] $end
$var wire 1 "% Bitline1 [11] $end
$var wire 1 #% Bitline1 [10] $end
$var wire 1 $% Bitline1 [9] $end
$var wire 1 %% Bitline1 [8] $end
$var wire 1 &% Bitline1 [7] $end
$var wire 1 '% Bitline1 [6] $end
$var wire 1 (% Bitline1 [5] $end
$var wire 1 )% Bitline1 [4] $end
$var wire 1 *% Bitline1 [3] $end
$var wire 1 +% Bitline1 [2] $end
$var wire 1 ,% Bitline1 [1] $end
$var wire 1 -% Bitline1 [0] $end
$var wire 1 .% Bitline2 [15] $end
$var wire 1 /% Bitline2 [14] $end
$var wire 1 0% Bitline2 [13] $end
$var wire 1 1% Bitline2 [12] $end
$var wire 1 2% Bitline2 [11] $end
$var wire 1 3% Bitline2 [10] $end
$var wire 1 4% Bitline2 [9] $end
$var wire 1 5% Bitline2 [8] $end
$var wire 1 6% Bitline2 [7] $end
$var wire 1 7% Bitline2 [6] $end
$var wire 1 8% Bitline2 [5] $end
$var wire 1 9% Bitline2 [4] $end
$var wire 1 :% Bitline2 [3] $end
$var wire 1 ;% Bitline2 [2] $end
$var wire 1 <% Bitline2 [1] $end
$var wire 1 =% Bitline2 [0] $end

$scope module B_C_16 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 ?" D $end
$var wire 1 z$ WriteEnable $end
$var wire 1 Z$ ReadEnabel1 $end
$var wire 1 j$ ReadEnable2 $end
$var wire 1 |$ Bitline1 $end
$var wire 1 .% Bitline2 $end
$var wire 1 (* q_2_reg $end

$scope module b_c $end
$var wire 1 (* q $end
$var wire 1 ?" d $end
$var wire 1 z$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 )* state $end
$upscope $end
$upscope $end

$scope module B_C_15 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 @" D $end
$var wire 1 z$ WriteEnable $end
$var wire 1 Z$ ReadEnabel1 $end
$var wire 1 j$ ReadEnable2 $end
$var wire 1 }$ Bitline1 $end
$var wire 1 /% Bitline2 $end
$var wire 1 ** q_2_reg $end

$scope module b_c $end
$var wire 1 ** q $end
$var wire 1 @" d $end
$var wire 1 z$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 +* state $end
$upscope $end
$upscope $end

$scope module B_C_14 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 A" D $end
$var wire 1 z$ WriteEnable $end
$var wire 1 Z$ ReadEnabel1 $end
$var wire 1 j$ ReadEnable2 $end
$var wire 1 ~$ Bitline1 $end
$var wire 1 0% Bitline2 $end
$var wire 1 ,* q_2_reg $end

$scope module b_c $end
$var wire 1 ,* q $end
$var wire 1 A" d $end
$var wire 1 z$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 -* state $end
$upscope $end
$upscope $end

$scope module B_C_13 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 B" D $end
$var wire 1 z$ WriteEnable $end
$var wire 1 Z$ ReadEnabel1 $end
$var wire 1 j$ ReadEnable2 $end
$var wire 1 !% Bitline1 $end
$var wire 1 1% Bitline2 $end
$var wire 1 .* q_2_reg $end

$scope module b_c $end
$var wire 1 .* q $end
$var wire 1 B" d $end
$var wire 1 z$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 /* state $end
$upscope $end
$upscope $end

$scope module B_C_12 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 C" D $end
$var wire 1 z$ WriteEnable $end
$var wire 1 Z$ ReadEnabel1 $end
$var wire 1 j$ ReadEnable2 $end
$var wire 1 "% Bitline1 $end
$var wire 1 2% Bitline2 $end
$var wire 1 0* q_2_reg $end

$scope module b_c $end
$var wire 1 0* q $end
$var wire 1 C" d $end
$var wire 1 z$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 1* state $end
$upscope $end
$upscope $end

$scope module B_C_11 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 D" D $end
$var wire 1 z$ WriteEnable $end
$var wire 1 Z$ ReadEnabel1 $end
$var wire 1 j$ ReadEnable2 $end
$var wire 1 #% Bitline1 $end
$var wire 1 3% Bitline2 $end
$var wire 1 2* q_2_reg $end

$scope module b_c $end
$var wire 1 2* q $end
$var wire 1 D" d $end
$var wire 1 z$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 3* state $end
$upscope $end
$upscope $end

$scope module B_C_10 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 E" D $end
$var wire 1 z$ WriteEnable $end
$var wire 1 Z$ ReadEnabel1 $end
$var wire 1 j$ ReadEnable2 $end
$var wire 1 $% Bitline1 $end
$var wire 1 4% Bitline2 $end
$var wire 1 4* q_2_reg $end

$scope module b_c $end
$var wire 1 4* q $end
$var wire 1 E" d $end
$var wire 1 z$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 5* state $end
$upscope $end
$upscope $end

$scope module B_C_9 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 F" D $end
$var wire 1 z$ WriteEnable $end
$var wire 1 Z$ ReadEnabel1 $end
$var wire 1 j$ ReadEnable2 $end
$var wire 1 %% Bitline1 $end
$var wire 1 5% Bitline2 $end
$var wire 1 6* q_2_reg $end

$scope module b_c $end
$var wire 1 6* q $end
$var wire 1 F" d $end
$var wire 1 z$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 7* state $end
$upscope $end
$upscope $end

$scope module B_C_8 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 G" D $end
$var wire 1 z$ WriteEnable $end
$var wire 1 Z$ ReadEnabel1 $end
$var wire 1 j$ ReadEnable2 $end
$var wire 1 &% Bitline1 $end
$var wire 1 6% Bitline2 $end
$var wire 1 8* q_2_reg $end

$scope module b_c $end
$var wire 1 8* q $end
$var wire 1 G" d $end
$var wire 1 z$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 9* state $end
$upscope $end
$upscope $end

$scope module B_C_7 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 H" D $end
$var wire 1 z$ WriteEnable $end
$var wire 1 Z$ ReadEnabel1 $end
$var wire 1 j$ ReadEnable2 $end
$var wire 1 '% Bitline1 $end
$var wire 1 7% Bitline2 $end
$var wire 1 :* q_2_reg $end

$scope module b_c $end
$var wire 1 :* q $end
$var wire 1 H" d $end
$var wire 1 z$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 ;* state $end
$upscope $end
$upscope $end

$scope module B_C_6 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 I" D $end
$var wire 1 z$ WriteEnable $end
$var wire 1 Z$ ReadEnabel1 $end
$var wire 1 j$ ReadEnable2 $end
$var wire 1 (% Bitline1 $end
$var wire 1 8% Bitline2 $end
$var wire 1 <* q_2_reg $end

$scope module b_c $end
$var wire 1 <* q $end
$var wire 1 I" d $end
$var wire 1 z$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 =* state $end
$upscope $end
$upscope $end

$scope module B_C_5 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 J" D $end
$var wire 1 z$ WriteEnable $end
$var wire 1 Z$ ReadEnabel1 $end
$var wire 1 j$ ReadEnable2 $end
$var wire 1 )% Bitline1 $end
$var wire 1 9% Bitline2 $end
$var wire 1 >* q_2_reg $end

$scope module b_c $end
$var wire 1 >* q $end
$var wire 1 J" d $end
$var wire 1 z$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 ?* state $end
$upscope $end
$upscope $end

$scope module B_C_4 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 K" D $end
$var wire 1 z$ WriteEnable $end
$var wire 1 Z$ ReadEnabel1 $end
$var wire 1 j$ ReadEnable2 $end
$var wire 1 *% Bitline1 $end
$var wire 1 :% Bitline2 $end
$var wire 1 @* q_2_reg $end

$scope module b_c $end
$var wire 1 @* q $end
$var wire 1 K" d $end
$var wire 1 z$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 A* state $end
$upscope $end
$upscope $end

$scope module B_C_3 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 L" D $end
$var wire 1 z$ WriteEnable $end
$var wire 1 Z$ ReadEnabel1 $end
$var wire 1 j$ ReadEnable2 $end
$var wire 1 +% Bitline1 $end
$var wire 1 ;% Bitline2 $end
$var wire 1 B* q_2_reg $end

$scope module b_c $end
$var wire 1 B* q $end
$var wire 1 L" d $end
$var wire 1 z$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 C* state $end
$upscope $end
$upscope $end

$scope module B_C_2 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 M" D $end
$var wire 1 z$ WriteEnable $end
$var wire 1 Z$ ReadEnabel1 $end
$var wire 1 j$ ReadEnable2 $end
$var wire 1 ,% Bitline1 $end
$var wire 1 <% Bitline2 $end
$var wire 1 D* q_2_reg $end

$scope module b_c $end
$var wire 1 D* q $end
$var wire 1 M" d $end
$var wire 1 z$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 E* state $end
$upscope $end
$upscope $end

$scope module B_C_1 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 N" D $end
$var wire 1 z$ WriteEnable $end
$var wire 1 Z$ ReadEnabel1 $end
$var wire 1 j$ ReadEnable2 $end
$var wire 1 -% Bitline1 $end
$var wire 1 =% Bitline2 $end
$var wire 1 F* q_2_reg $end

$scope module b_c $end
$var wire 1 F* q $end
$var wire 1 N" d $end
$var wire 1 z$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 G* state $end
$upscope $end
$upscope $end
$upscope $end

$scope module R1 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 {$ WriteReg $end
$var wire 1 [$ ReadEnable1 $end
$var wire 1 k$ ReadEnable2 $end
$var wire 1 ?" D [15] $end
$var wire 1 @" D [14] $end
$var wire 1 A" D [13] $end
$var wire 1 B" D [12] $end
$var wire 1 C" D [11] $end
$var wire 1 D" D [10] $end
$var wire 1 E" D [9] $end
$var wire 1 F" D [8] $end
$var wire 1 G" D [7] $end
$var wire 1 H" D [6] $end
$var wire 1 I" D [5] $end
$var wire 1 J" D [4] $end
$var wire 1 K" D [3] $end
$var wire 1 L" D [2] $end
$var wire 1 M" D [1] $end
$var wire 1 N" D [0] $end
$var wire 1 |$ Bitline1 [15] $end
$var wire 1 }$ Bitline1 [14] $end
$var wire 1 ~$ Bitline1 [13] $end
$var wire 1 !% Bitline1 [12] $end
$var wire 1 "% Bitline1 [11] $end
$var wire 1 #% Bitline1 [10] $end
$var wire 1 $% Bitline1 [9] $end
$var wire 1 %% Bitline1 [8] $end
$var wire 1 &% Bitline1 [7] $end
$var wire 1 '% Bitline1 [6] $end
$var wire 1 (% Bitline1 [5] $end
$var wire 1 )% Bitline1 [4] $end
$var wire 1 *% Bitline1 [3] $end
$var wire 1 +% Bitline1 [2] $end
$var wire 1 ,% Bitline1 [1] $end
$var wire 1 -% Bitline1 [0] $end
$var wire 1 .% Bitline2 [15] $end
$var wire 1 /% Bitline2 [14] $end
$var wire 1 0% Bitline2 [13] $end
$var wire 1 1% Bitline2 [12] $end
$var wire 1 2% Bitline2 [11] $end
$var wire 1 3% Bitline2 [10] $end
$var wire 1 4% Bitline2 [9] $end
$var wire 1 5% Bitline2 [8] $end
$var wire 1 6% Bitline2 [7] $end
$var wire 1 7% Bitline2 [6] $end
$var wire 1 8% Bitline2 [5] $end
$var wire 1 9% Bitline2 [4] $end
$var wire 1 :% Bitline2 [3] $end
$var wire 1 ;% Bitline2 [2] $end
$var wire 1 <% Bitline2 [1] $end
$var wire 1 =% Bitline2 [0] $end

$scope module B_C_16 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 ?" D $end
$var wire 1 {$ WriteEnable $end
$var wire 1 [$ ReadEnabel1 $end
$var wire 1 k$ ReadEnable2 $end
$var wire 1 |$ Bitline1 $end
$var wire 1 .% Bitline2 $end
$var wire 1 H* q_2_reg $end

$scope module b_c $end
$var wire 1 H* q $end
$var wire 1 ?" d $end
$var wire 1 {$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 I* state $end
$upscope $end
$upscope $end

$scope module B_C_15 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 @" D $end
$var wire 1 {$ WriteEnable $end
$var wire 1 [$ ReadEnabel1 $end
$var wire 1 k$ ReadEnable2 $end
$var wire 1 }$ Bitline1 $end
$var wire 1 /% Bitline2 $end
$var wire 1 J* q_2_reg $end

$scope module b_c $end
$var wire 1 J* q $end
$var wire 1 @" d $end
$var wire 1 {$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 K* state $end
$upscope $end
$upscope $end

$scope module B_C_14 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 A" D $end
$var wire 1 {$ WriteEnable $end
$var wire 1 [$ ReadEnabel1 $end
$var wire 1 k$ ReadEnable2 $end
$var wire 1 ~$ Bitline1 $end
$var wire 1 0% Bitline2 $end
$var wire 1 L* q_2_reg $end

$scope module b_c $end
$var wire 1 L* q $end
$var wire 1 A" d $end
$var wire 1 {$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 M* state $end
$upscope $end
$upscope $end

$scope module B_C_13 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 B" D $end
$var wire 1 {$ WriteEnable $end
$var wire 1 [$ ReadEnabel1 $end
$var wire 1 k$ ReadEnable2 $end
$var wire 1 !% Bitline1 $end
$var wire 1 1% Bitline2 $end
$var wire 1 N* q_2_reg $end

$scope module b_c $end
$var wire 1 N* q $end
$var wire 1 B" d $end
$var wire 1 {$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 O* state $end
$upscope $end
$upscope $end

$scope module B_C_12 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 C" D $end
$var wire 1 {$ WriteEnable $end
$var wire 1 [$ ReadEnabel1 $end
$var wire 1 k$ ReadEnable2 $end
$var wire 1 "% Bitline1 $end
$var wire 1 2% Bitline2 $end
$var wire 1 P* q_2_reg $end

$scope module b_c $end
$var wire 1 P* q $end
$var wire 1 C" d $end
$var wire 1 {$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 Q* state $end
$upscope $end
$upscope $end

$scope module B_C_11 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 D" D $end
$var wire 1 {$ WriteEnable $end
$var wire 1 [$ ReadEnabel1 $end
$var wire 1 k$ ReadEnable2 $end
$var wire 1 #% Bitline1 $end
$var wire 1 3% Bitline2 $end
$var wire 1 R* q_2_reg $end

$scope module b_c $end
$var wire 1 R* q $end
$var wire 1 D" d $end
$var wire 1 {$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 S* state $end
$upscope $end
$upscope $end

$scope module B_C_10 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 E" D $end
$var wire 1 {$ WriteEnable $end
$var wire 1 [$ ReadEnabel1 $end
$var wire 1 k$ ReadEnable2 $end
$var wire 1 $% Bitline1 $end
$var wire 1 4% Bitline2 $end
$var wire 1 T* q_2_reg $end

$scope module b_c $end
$var wire 1 T* q $end
$var wire 1 E" d $end
$var wire 1 {$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 U* state $end
$upscope $end
$upscope $end

$scope module B_C_9 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 F" D $end
$var wire 1 {$ WriteEnable $end
$var wire 1 [$ ReadEnabel1 $end
$var wire 1 k$ ReadEnable2 $end
$var wire 1 %% Bitline1 $end
$var wire 1 5% Bitline2 $end
$var wire 1 V* q_2_reg $end

$scope module b_c $end
$var wire 1 V* q $end
$var wire 1 F" d $end
$var wire 1 {$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 W* state $end
$upscope $end
$upscope $end

$scope module B_C_8 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 G" D $end
$var wire 1 {$ WriteEnable $end
$var wire 1 [$ ReadEnabel1 $end
$var wire 1 k$ ReadEnable2 $end
$var wire 1 &% Bitline1 $end
$var wire 1 6% Bitline2 $end
$var wire 1 X* q_2_reg $end

$scope module b_c $end
$var wire 1 X* q $end
$var wire 1 G" d $end
$var wire 1 {$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 Y* state $end
$upscope $end
$upscope $end

$scope module B_C_7 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 H" D $end
$var wire 1 {$ WriteEnable $end
$var wire 1 [$ ReadEnabel1 $end
$var wire 1 k$ ReadEnable2 $end
$var wire 1 '% Bitline1 $end
$var wire 1 7% Bitline2 $end
$var wire 1 Z* q_2_reg $end

$scope module b_c $end
$var wire 1 Z* q $end
$var wire 1 H" d $end
$var wire 1 {$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 [* state $end
$upscope $end
$upscope $end

$scope module B_C_6 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 I" D $end
$var wire 1 {$ WriteEnable $end
$var wire 1 [$ ReadEnabel1 $end
$var wire 1 k$ ReadEnable2 $end
$var wire 1 (% Bitline1 $end
$var wire 1 8% Bitline2 $end
$var wire 1 \* q_2_reg $end

$scope module b_c $end
$var wire 1 \* q $end
$var wire 1 I" d $end
$var wire 1 {$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 ]* state $end
$upscope $end
$upscope $end

$scope module B_C_5 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 J" D $end
$var wire 1 {$ WriteEnable $end
$var wire 1 [$ ReadEnabel1 $end
$var wire 1 k$ ReadEnable2 $end
$var wire 1 )% Bitline1 $end
$var wire 1 9% Bitline2 $end
$var wire 1 ^* q_2_reg $end

$scope module b_c $end
$var wire 1 ^* q $end
$var wire 1 J" d $end
$var wire 1 {$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 _* state $end
$upscope $end
$upscope $end

$scope module B_C_4 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 K" D $end
$var wire 1 {$ WriteEnable $end
$var wire 1 [$ ReadEnabel1 $end
$var wire 1 k$ ReadEnable2 $end
$var wire 1 *% Bitline1 $end
$var wire 1 :% Bitline2 $end
$var wire 1 `* q_2_reg $end

$scope module b_c $end
$var wire 1 `* q $end
$var wire 1 K" d $end
$var wire 1 {$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 a* state $end
$upscope $end
$upscope $end

$scope module B_C_3 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 L" D $end
$var wire 1 {$ WriteEnable $end
$var wire 1 [$ ReadEnabel1 $end
$var wire 1 k$ ReadEnable2 $end
$var wire 1 +% Bitline1 $end
$var wire 1 ;% Bitline2 $end
$var wire 1 b* q_2_reg $end

$scope module b_c $end
$var wire 1 b* q $end
$var wire 1 L" d $end
$var wire 1 {$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 c* state $end
$upscope $end
$upscope $end

$scope module B_C_2 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 M" D $end
$var wire 1 {$ WriteEnable $end
$var wire 1 [$ ReadEnabel1 $end
$var wire 1 k$ ReadEnable2 $end
$var wire 1 ,% Bitline1 $end
$var wire 1 <% Bitline2 $end
$var wire 1 d* q_2_reg $end

$scope module b_c $end
$var wire 1 d* q $end
$var wire 1 M" d $end
$var wire 1 {$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 e* state $end
$upscope $end
$upscope $end

$scope module B_C_1 $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var wire 1 N" D $end
$var wire 1 {$ WriteEnable $end
$var wire 1 [$ ReadEnabel1 $end
$var wire 1 k$ ReadEnable2 $end
$var wire 1 -% Bitline1 $end
$var wire 1 =% Bitline2 $end
$var wire 1 f* q_2_reg $end

$scope module b_c $end
$var wire 1 f* q $end
$var wire 1 N" d $end
$var wire 1 {$ wen $end
$var wire 1 K! clk $end
$var wire 1 K$ rst $end
$var reg 1 g* state $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module alu_op $end
$var parameter 4 h* ADD $end
$var parameter 4 i* SUB $end
$var parameter 4 j* RED $end
$var parameter 4 k* XOR $end
$var parameter 4 l* SLL $end
$var parameter 4 m* SRA $end
$var parameter 4 n* ROR $end
$var parameter 4 o* PADDSB $end
$var parameter 4 p* LW $end
$var parameter 4 q* SW $end
$var parameter 4 r* LHB $end
$var parameter 4 s* LLB $end
$var parameter 4 t* B $end
$var parameter 4 u* BR $end
$var parameter 4 v* PCS $end
$var parameter 4 w* HLT $end
$var wire 1 _" ALU_In1 [15] $end
$var wire 1 `" ALU_In1 [14] $end
$var wire 1 a" ALU_In1 [13] $end
$var wire 1 b" ALU_In1 [12] $end
$var wire 1 c" ALU_In1 [11] $end
$var wire 1 d" ALU_In1 [10] $end
$var wire 1 e" ALU_In1 [9] $end
$var wire 1 f" ALU_In1 [8] $end
$var wire 1 g" ALU_In1 [7] $end
$var wire 1 h" ALU_In1 [6] $end
$var wire 1 i" ALU_In1 [5] $end
$var wire 1 j" ALU_In1 [4] $end
$var wire 1 k" ALU_In1 [3] $end
$var wire 1 l" ALU_In1 [2] $end
$var wire 1 m" ALU_In1 [1] $end
$var wire 1 n" ALU_In1 [0] $end
$var wire 1 O" ALU_In2 [15] $end
$var wire 1 P" ALU_In2 [14] $end
$var wire 1 Q" ALU_In2 [13] $end
$var wire 1 R" ALU_In2 [12] $end
$var wire 1 S" ALU_In2 [11] $end
$var wire 1 T" ALU_In2 [10] $end
$var wire 1 U" ALU_In2 [9] $end
$var wire 1 V" ALU_In2 [8] $end
$var wire 1 W" ALU_In2 [7] $end
$var wire 1 X" ALU_In2 [6] $end
$var wire 1 Y" ALU_In2 [5] $end
$var wire 1 Z" ALU_In2 [4] $end
$var wire 1 [" ALU_In2 [3] $end
$var wire 1 \" ALU_In2 [2] $end
$var wire 1 ]" ALU_In2 [1] $end
$var wire 1 ^" ALU_In2 [0] $end
$var wire 1 M! Opcode [3] $end
$var wire 1 N! Opcode [2] $end
$var wire 1 O! Opcode [1] $end
$var wire 1 P! Opcode [0] $end
$var wire 1 }! ALU_Out [15] $end
$var wire 1 ~! ALU_Out [14] $end
$var wire 1 !" ALU_Out [13] $end
$var wire 1 "" ALU_Out [12] $end
$var wire 1 #" ALU_Out [11] $end
$var wire 1 $" ALU_Out [10] $end
$var wire 1 %" ALU_Out [9] $end
$var wire 1 &" ALU_Out [8] $end
$var wire 1 '" ALU_Out [7] $end
$var wire 1 (" ALU_Out [6] $end
$var wire 1 )" ALU_Out [5] $end
$var wire 1 *" ALU_Out [4] $end
$var wire 1 +" ALU_Out [3] $end
$var wire 1 ," ALU_Out [2] $end
$var wire 1 -" ALU_Out [1] $end
$var wire 1 ." ALU_Out [0] $end
$var wire 1 d# Flags_out [2] $end
$var wire 1 e# Flags_out [1] $end
$var wire 1 f# Flags_out [0] $end
$var wire 1 x* CLA_out [15] $end
$var wire 1 y* CLA_out [14] $end
$var wire 1 z* CLA_out [13] $end
$var wire 1 {* CLA_out [12] $end
$var wire 1 |* CLA_out [11] $end
$var wire 1 }* CLA_out [10] $end
$var wire 1 ~* CLA_out [9] $end
$var wire 1 !+ CLA_out [8] $end
$var wire 1 "+ CLA_out [7] $end
$var wire 1 #+ CLA_out [6] $end
$var wire 1 $+ CLA_out [5] $end
$var wire 1 %+ CLA_out [4] $end
$var wire 1 &+ CLA_out [3] $end
$var wire 1 '+ CLA_out [2] $end
$var wire 1 (+ CLA_out [1] $end
$var wire 1 )+ CLA_out [0] $end
$var wire 1 *+ Shift_out [15] $end
$var wire 1 ++ Shift_out [14] $end
$var wire 1 ,+ Shift_out [13] $end
$var wire 1 -+ Shift_out [12] $end
$var wire 1 .+ Shift_out [11] $end
$var wire 1 /+ Shift_out [10] $end
$var wire 1 0+ Shift_out [9] $end
$var wire 1 1+ Shift_out [8] $end
$var wire 1 2+ Shift_out [7] $end
$var wire 1 3+ Shift_out [6] $end
$var wire 1 4+ Shift_out [5] $end
$var wire 1 5+ Shift_out [4] $end
$var wire 1 6+ Shift_out [3] $end
$var wire 1 7+ Shift_out [2] $end
$var wire 1 8+ Shift_out [1] $end
$var wire 1 9+ Shift_out [0] $end
$var wire 1 :+ RED_out [15] $end
$var wire 1 ;+ RED_out [14] $end
$var wire 1 <+ RED_out [13] $end
$var wire 1 =+ RED_out [12] $end
$var wire 1 >+ RED_out [11] $end
$var wire 1 ?+ RED_out [10] $end
$var wire 1 @+ RED_out [9] $end
$var wire 1 A+ RED_out [8] $end
$var wire 1 B+ RED_out [7] $end
$var wire 1 C+ RED_out [6] $end
$var wire 1 D+ RED_out [5] $end
$var wire 1 E+ RED_out [4] $end
$var wire 1 F+ RED_out [3] $end
$var wire 1 G+ RED_out [2] $end
$var wire 1 H+ RED_out [1] $end
$var wire 1 I+ RED_out [0] $end
$var wire 1 J+ PADDSB_out [15] $end
$var wire 1 K+ PADDSB_out [14] $end
$var wire 1 L+ PADDSB_out [13] $end
$var wire 1 M+ PADDSB_out [12] $end
$var wire 1 N+ PADDSB_out [11] $end
$var wire 1 O+ PADDSB_out [10] $end
$var wire 1 P+ PADDSB_out [9] $end
$var wire 1 Q+ PADDSB_out [8] $end
$var wire 1 R+ PADDSB_out [7] $end
$var wire 1 S+ PADDSB_out [6] $end
$var wire 1 T+ PADDSB_out [5] $end
$var wire 1 U+ PADDSB_out [4] $end
$var wire 1 V+ PADDSB_out [3] $end
$var wire 1 W+ PADDSB_out [2] $end
$var wire 1 X+ PADDSB_out [1] $end
$var wire 1 Y+ PADDSB_out [0] $end
$var wire 1 Z+ LLB_out [15] $end
$var wire 1 [+ LLB_out [14] $end
$var wire 1 \+ LLB_out [13] $end
$var wire 1 ]+ LLB_out [12] $end
$var wire 1 ^+ LLB_out [11] $end
$var wire 1 _+ LLB_out [10] $end
$var wire 1 `+ LLB_out [9] $end
$var wire 1 a+ LLB_out [8] $end
$var wire 1 b+ LLB_out [7] $end
$var wire 1 c+ LLB_out [6] $end
$var wire 1 d+ LLB_out [5] $end
$var wire 1 e+ LLB_out [4] $end
$var wire 1 f+ LLB_out [3] $end
$var wire 1 g+ LLB_out [2] $end
$var wire 1 h+ LLB_out [1] $end
$var wire 1 i+ LLB_out [0] $end
$var wire 1 j+ LHB_out [15] $end
$var wire 1 k+ LHB_out [14] $end
$var wire 1 l+ LHB_out [13] $end
$var wire 1 m+ LHB_out [12] $end
$var wire 1 n+ LHB_out [11] $end
$var wire 1 o+ LHB_out [10] $end
$var wire 1 p+ LHB_out [9] $end
$var wire 1 q+ LHB_out [8] $end
$var wire 1 r+ LHB_out [7] $end
$var wire 1 s+ LHB_out [6] $end
$var wire 1 t+ LHB_out [5] $end
$var wire 1 u+ LHB_out [4] $end
$var wire 1 v+ LHB_out [3] $end
$var wire 1 w+ LHB_out [2] $end
$var wire 1 x+ LHB_out [1] $end
$var wire 1 y+ LHB_out [0] $end
$var wire 1 z+ LW_SW_out [15] $end
$var wire 1 {+ LW_SW_out [14] $end
$var wire 1 |+ LW_SW_out [13] $end
$var wire 1 }+ LW_SW_out [12] $end
$var wire 1 ~+ LW_SW_out [11] $end
$var wire 1 !, LW_SW_out [10] $end
$var wire 1 ", LW_SW_out [9] $end
$var wire 1 #, LW_SW_out [8] $end
$var wire 1 $, LW_SW_out [7] $end
$var wire 1 %, LW_SW_out [6] $end
$var wire 1 &, LW_SW_out [5] $end
$var wire 1 ', LW_SW_out [4] $end
$var wire 1 (, LW_SW_out [3] $end
$var wire 1 ), LW_SW_out [2] $end
$var wire 1 *, LW_SW_out [1] $end
$var wire 1 +, LW_SW_out [0] $end
$var wire 1 ,, Ovfl $end
$var wire 1 -, dont_care $end
$var wire 1 ., dont_care2 $end

$scope module add_sub $end
$var wire 1 _" A [15] $end
$var wire 1 `" A [14] $end
$var wire 1 a" A [13] $end
$var wire 1 b" A [12] $end
$var wire 1 c" A [11] $end
$var wire 1 d" A [10] $end
$var wire 1 e" A [9] $end
$var wire 1 f" A [8] $end
$var wire 1 g" A [7] $end
$var wire 1 h" A [6] $end
$var wire 1 i" A [5] $end
$var wire 1 j" A [4] $end
$var wire 1 k" A [3] $end
$var wire 1 l" A [2] $end
$var wire 1 m" A [1] $end
$var wire 1 n" A [0] $end
$var wire 1 O" B [15] $end
$var wire 1 P" B [14] $end
$var wire 1 Q" B [13] $end
$var wire 1 R" B [12] $end
$var wire 1 S" B [11] $end
$var wire 1 T" B [10] $end
$var wire 1 U" B [9] $end
$var wire 1 V" B [8] $end
$var wire 1 W" B [7] $end
$var wire 1 X" B [6] $end
$var wire 1 Y" B [5] $end
$var wire 1 Z" B [4] $end
$var wire 1 [" B [3] $end
$var wire 1 \" B [2] $end
$var wire 1 ]" B [1] $end
$var wire 1 ^" B [0] $end
$var wire 1 P! sub $end
$var wire 1 x* Sum [15] $end
$var wire 1 y* Sum [14] $end
$var wire 1 z* Sum [13] $end
$var wire 1 {* Sum [12] $end
$var wire 1 |* Sum [11] $end
$var wire 1 }* Sum [10] $end
$var wire 1 ~* Sum [9] $end
$var wire 1 !+ Sum [8] $end
$var wire 1 "+ Sum [7] $end
$var wire 1 #+ Sum [6] $end
$var wire 1 $+ Sum [5] $end
$var wire 1 %+ Sum [4] $end
$var wire 1 &+ Sum [3] $end
$var wire 1 '+ Sum [2] $end
$var wire 1 (+ Sum [1] $end
$var wire 1 )+ Sum [0] $end
$var wire 1 ,, Ovfl $end
$var wire 1 /, carry [15] $end
$var wire 1 0, carry [14] $end
$var wire 1 1, carry [13] $end
$var wire 1 2, carry [12] $end
$var wire 1 3, carry [11] $end
$var wire 1 4, carry [10] $end
$var wire 1 5, carry [9] $end
$var wire 1 6, carry [8] $end
$var wire 1 7, carry [7] $end
$var wire 1 8, carry [6] $end
$var wire 1 9, carry [5] $end
$var wire 1 :, carry [4] $end
$var wire 1 ;, carry [3] $end
$var wire 1 <, carry [2] $end
$var wire 1 =, carry [1] $end
$var wire 1 >, carry [0] $end
$var wire 1 ?, Sum_temp [15] $end
$var wire 1 @, Sum_temp [14] $end
$var wire 1 A, Sum_temp [13] $end
$var wire 1 B, Sum_temp [12] $end
$var wire 1 C, Sum_temp [11] $end
$var wire 1 D, Sum_temp [10] $end
$var wire 1 E, Sum_temp [9] $end
$var wire 1 F, Sum_temp [8] $end
$var wire 1 G, Sum_temp [7] $end
$var wire 1 H, Sum_temp [6] $end
$var wire 1 I, Sum_temp [5] $end
$var wire 1 J, Sum_temp [4] $end
$var wire 1 K, Sum_temp [3] $end
$var wire 1 L, Sum_temp [2] $end
$var wire 1 M, Sum_temp [1] $end
$var wire 1 N, Sum_temp [0] $end

$scope module FA1 $end
$var wire 1 n" A $end
$var wire 1 ^" B $end
$var wire 1 P! Cin $end
$var wire 1 N, S $end
$var wire 1 >, Cout $end
$upscope $end

$scope module FA2 $end
$var wire 1 m" A $end
$var wire 1 ]" B $end
$var wire 1 >, Cin $end
$var wire 1 M, S $end
$var wire 1 =, Cout $end
$upscope $end

$scope module FA3 $end
$var wire 1 l" A $end
$var wire 1 \" B $end
$var wire 1 =, Cin $end
$var wire 1 L, S $end
$var wire 1 <, Cout $end
$upscope $end

$scope module FA4 $end
$var wire 1 k" A $end
$var wire 1 [" B $end
$var wire 1 <, Cin $end
$var wire 1 K, S $end
$var wire 1 ;, Cout $end
$upscope $end

$scope module FA5 $end
$var wire 1 j" A $end
$var wire 1 Z" B $end
$var wire 1 ;, Cin $end
$var wire 1 J, S $end
$var wire 1 :, Cout $end
$upscope $end

$scope module FA6 $end
$var wire 1 i" A $end
$var wire 1 Y" B $end
$var wire 1 :, Cin $end
$var wire 1 I, S $end
$var wire 1 9, Cout $end
$upscope $end

$scope module FA7 $end
$var wire 1 h" A $end
$var wire 1 X" B $end
$var wire 1 9, Cin $end
$var wire 1 H, S $end
$var wire 1 8, Cout $end
$upscope $end

$scope module FA8 $end
$var wire 1 g" A $end
$var wire 1 W" B $end
$var wire 1 8, Cin $end
$var wire 1 G, S $end
$var wire 1 7, Cout $end
$upscope $end

$scope module FA9 $end
$var wire 1 f" A $end
$var wire 1 V" B $end
$var wire 1 7, Cin $end
$var wire 1 F, S $end
$var wire 1 6, Cout $end
$upscope $end

$scope module FA10 $end
$var wire 1 e" A $end
$var wire 1 U" B $end
$var wire 1 6, Cin $end
$var wire 1 E, S $end
$var wire 1 5, Cout $end
$upscope $end

$scope module FA11 $end
$var wire 1 d" A $end
$var wire 1 T" B $end
$var wire 1 5, Cin $end
$var wire 1 D, S $end
$var wire 1 4, Cout $end
$upscope $end

$scope module FA12 $end
$var wire 1 c" A $end
$var wire 1 S" B $end
$var wire 1 4, Cin $end
$var wire 1 C, S $end
$var wire 1 3, Cout $end
$upscope $end

$scope module FA13 $end
$var wire 1 b" A $end
$var wire 1 R" B $end
$var wire 1 3, Cin $end
$var wire 1 B, S $end
$var wire 1 2, Cout $end
$upscope $end

$scope module FA14 $end
$var wire 1 a" A $end
$var wire 1 Q" B $end
$var wire 1 2, Cin $end
$var wire 1 A, S $end
$var wire 1 1, Cout $end
$upscope $end

$scope module FA15 $end
$var wire 1 `" A $end
$var wire 1 P" B $end
$var wire 1 1, Cin $end
$var wire 1 @, S $end
$var wire 1 0, Cout $end
$upscope $end

$scope module FA16 $end
$var wire 1 _" A $end
$var wire 1 O" B $end
$var wire 1 0, Cin $end
$var wire 1 ?, S $end
$var wire 1 /, Cout $end
$upscope $end
$upscope $end

$scope module shift_ops $end
$var wire 1 _" Shift_In [15] $end
$var wire 1 `" Shift_In [14] $end
$var wire 1 a" Shift_In [13] $end
$var wire 1 b" Shift_In [12] $end
$var wire 1 c" Shift_In [11] $end
$var wire 1 d" Shift_In [10] $end
$var wire 1 e" Shift_In [9] $end
$var wire 1 f" Shift_In [8] $end
$var wire 1 g" Shift_In [7] $end
$var wire 1 h" Shift_In [6] $end
$var wire 1 i" Shift_In [5] $end
$var wire 1 j" Shift_In [4] $end
$var wire 1 k" Shift_In [3] $end
$var wire 1 l" Shift_In [2] $end
$var wire 1 m" Shift_In [1] $end
$var wire 1 n" Shift_In [0] $end
$var wire 1 [" Shift_Val [3] $end
$var wire 1 \" Shift_Val [2] $end
$var wire 1 ]" Shift_Val [1] $end
$var wire 1 ^" Shift_Val [0] $end
$var wire 1 O! Mode_In [1] $end
$var wire 1 P! Mode_In [0] $end
$var wire 1 *+ Shift_Out [15] $end
$var wire 1 ++ Shift_Out [14] $end
$var wire 1 ,+ Shift_Out [13] $end
$var wire 1 -+ Shift_Out [12] $end
$var wire 1 .+ Shift_Out [11] $end
$var wire 1 /+ Shift_Out [10] $end
$var wire 1 0+ Shift_Out [9] $end
$var wire 1 1+ Shift_Out [8] $end
$var wire 1 2+ Shift_Out [7] $end
$var wire 1 3+ Shift_Out [6] $end
$var wire 1 4+ Shift_Out [5] $end
$var wire 1 5+ Shift_Out [4] $end
$var wire 1 6+ Shift_Out [3] $end
$var wire 1 7+ Shift_Out [2] $end
$var wire 1 8+ Shift_Out [1] $end
$var wire 1 9+ Shift_Out [0] $end
$var wire 1 O, L1_1 $end
$var wire 1 P, L1_2 $end
$var wire 1 Q, L1_3 $end
$var wire 1 R, L1_4 $end
$var wire 1 S, L1_5 $end
$var wire 1 T, L1_6 $end
$var wire 1 U, L1_7 $end
$var wire 1 V, L1_8 $end
$var wire 1 W, L1_9 $end
$var wire 1 X, L1_10 $end
$var wire 1 Y, L1_11 $end
$var wire 1 Z, L1_12 $end
$var wire 1 [, L1_13 $end
$var wire 1 \, L1_14 $end
$var wire 1 ], L1_15 $end
$var wire 1 ^, L1_16 $end
$var wire 1 _, L2_1 $end
$var wire 1 `, L2_2 $end
$var wire 1 a, L2_3 $end
$var wire 1 b, L2_4 $end
$var wire 1 c, L2_5 $end
$var wire 1 d, L2_6 $end
$var wire 1 e, L2_7 $end
$var wire 1 f, L2_8 $end
$var wire 1 g, L2_9 $end
$var wire 1 h, L2_10 $end
$var wire 1 i, L2_11 $end
$var wire 1 j, L2_12 $end
$var wire 1 k, L2_13 $end
$var wire 1 l, L2_14 $end
$var wire 1 m, L2_15 $end
$var wire 1 n, L2_16 $end
$var wire 1 o, L3_1 $end
$var wire 1 p, L3_2 $end
$var wire 1 q, L3_3 $end
$var wire 1 r, L3_4 $end
$var wire 1 s, L3_5 $end
$var wire 1 t, L3_6 $end
$var wire 1 u, L3_7 $end
$var wire 1 v, L3_8 $end
$var wire 1 w, L3_9 $end
$var wire 1 x, L3_10 $end
$var wire 1 y, L3_11 $end
$var wire 1 z, L3_12 $end
$var wire 1 {, L3_13 $end
$var wire 1 |, L3_14 $end
$var wire 1 }, L3_15 $end
$var wire 1 ~, L3_16 $end
$var wire 1 !- Sel_1 [1] $end
$var wire 1 "- Sel_1 [0] $end
$var wire 1 #- Sel_2 [1] $end
$var wire 1 $- Sel_2 [0] $end
$var wire 1 %- Sel_3 [1] $end
$var wire 1 &- Sel_3 [0] $end
$var wire 1 '- Sel_4 [1] $end
$var wire 1 (- Sel_4 [0] $end
$var wire 1 )- Mode [1] $end
$var wire 1 *- Mode [0] $end
$var wire 1 +- M1_rot $end
$var wire 1 ,- M2_rot_16 $end
$var wire 1 -- M2_rot_15 $end
$var wire 1 .- M3_rot_16 $end
$var wire 1 /- M3_rot_15 $end
$var wire 1 0- M3_rot_14 $end
$var wire 1 1- M3_rot_13 $end
$var wire 1 2- M4_rot_16 $end
$var wire 1 3- M4_rot_15 $end
$var wire 1 4- M4_rot_14 $end
$var wire 1 5- M4_rot_13 $end
$var wire 1 6- M4_rot_12 $end
$var wire 1 7- M4_rot_11 $end
$var wire 1 8- M4_rot_10 $end
$var wire 1 9- M4_rot_9 $end

$scope module M1_16 $end
$var wire 1 !- Sel [1] $end
$var wire 1 "- Sel [0] $end
$var wire 1 _" A $end
$var wire 1 `" B $end
$var wire 1 +- C $end
$var wire 1 ^, Out $end
$upscope $end

$scope module M1_15 $end
$var wire 1 !- Sel [1] $end
$var wire 1 "- Sel [0] $end
$var wire 1 `" A $end
$var wire 1 a" B $end
$var wire 1 _" C $end
$var wire 1 ], Out $end
$upscope $end

$scope module M1_14 $end
$var wire 1 !- Sel [1] $end
$var wire 1 "- Sel [0] $end
$var wire 1 a" A $end
$var wire 1 b" B $end
$var wire 1 `" C $end
$var wire 1 \, Out $end
$upscope $end

$scope module M1_13 $end
$var wire 1 !- Sel [1] $end
$var wire 1 "- Sel [0] $end
$var wire 1 b" A $end
$var wire 1 c" B $end
$var wire 1 a" C $end
$var wire 1 [, Out $end
$upscope $end

$scope module M1_12 $end
$var wire 1 !- Sel [1] $end
$var wire 1 "- Sel [0] $end
$var wire 1 c" A $end
$var wire 1 d" B $end
$var wire 1 b" C $end
$var wire 1 Z, Out $end
$upscope $end

$scope module M1_11 $end
$var wire 1 !- Sel [1] $end
$var wire 1 "- Sel [0] $end
$var wire 1 d" A $end
$var wire 1 e" B $end
$var wire 1 c" C $end
$var wire 1 Y, Out $end
$upscope $end

$scope module M1_10 $end
$var wire 1 !- Sel [1] $end
$var wire 1 "- Sel [0] $end
$var wire 1 e" A $end
$var wire 1 f" B $end
$var wire 1 d" C $end
$var wire 1 X, Out $end
$upscope $end

$scope module M1_9 $end
$var wire 1 !- Sel [1] $end
$var wire 1 "- Sel [0] $end
$var wire 1 f" A $end
$var wire 1 g" B $end
$var wire 1 e" C $end
$var wire 1 W, Out $end
$upscope $end

$scope module M1_8 $end
$var wire 1 !- Sel [1] $end
$var wire 1 "- Sel [0] $end
$var wire 1 g" A $end
$var wire 1 h" B $end
$var wire 1 f" C $end
$var wire 1 V, Out $end
$upscope $end

$scope module M1_7 $end
$var wire 1 !- Sel [1] $end
$var wire 1 "- Sel [0] $end
$var wire 1 h" A $end
$var wire 1 i" B $end
$var wire 1 g" C $end
$var wire 1 U, Out $end
$upscope $end

$scope module M1_6 $end
$var wire 1 !- Sel [1] $end
$var wire 1 "- Sel [0] $end
$var wire 1 i" A $end
$var wire 1 j" B $end
$var wire 1 h" C $end
$var wire 1 T, Out $end
$upscope $end

$scope module M1_5 $end
$var wire 1 !- Sel [1] $end
$var wire 1 "- Sel [0] $end
$var wire 1 j" A $end
$var wire 1 k" B $end
$var wire 1 i" C $end
$var wire 1 S, Out $end
$upscope $end

$scope module M1_4 $end
$var wire 1 !- Sel [1] $end
$var wire 1 "- Sel [0] $end
$var wire 1 k" A $end
$var wire 1 l" B $end
$var wire 1 j" C $end
$var wire 1 R, Out $end
$upscope $end

$scope module M1_3 $end
$var wire 1 !- Sel [1] $end
$var wire 1 "- Sel [0] $end
$var wire 1 l" A $end
$var wire 1 m" B $end
$var wire 1 k" C $end
$var wire 1 Q, Out $end
$upscope $end

$scope module M1_2 $end
$var wire 1 !- Sel [1] $end
$var wire 1 "- Sel [0] $end
$var wire 1 m" A $end
$var wire 1 n" B $end
$var wire 1 l" C $end
$var wire 1 P, Out $end
$upscope $end

$scope module M1_1 $end
$var wire 1 !- Sel [1] $end
$var wire 1 "- Sel [0] $end
$var wire 1 n" A $end
$var wire 1 :- B $end
$var wire 1 m" C $end
$var wire 1 O, Out $end
$upscope $end

$scope module M2_16 $end
$var wire 1 #- Sel [1] $end
$var wire 1 $- Sel [0] $end
$var wire 1 ^, A $end
$var wire 1 \, B $end
$var wire 1 ,- C $end
$var wire 1 n, Out $end
$upscope $end

$scope module M2_15 $end
$var wire 1 #- Sel [1] $end
$var wire 1 $- Sel [0] $end
$var wire 1 ], A $end
$var wire 1 [, B $end
$var wire 1 -- C $end
$var wire 1 m, Out $end
$upscope $end

$scope module M2_14 $end
$var wire 1 #- Sel [1] $end
$var wire 1 $- Sel [0] $end
$var wire 1 \, A $end
$var wire 1 Z, B $end
$var wire 1 ^, C $end
$var wire 1 l, Out $end
$upscope $end

$scope module M2_13 $end
$var wire 1 #- Sel [1] $end
$var wire 1 $- Sel [0] $end
$var wire 1 [, A $end
$var wire 1 Y, B $end
$var wire 1 ], C $end
$var wire 1 k, Out $end
$upscope $end

$scope module M2_12 $end
$var wire 1 #- Sel [1] $end
$var wire 1 $- Sel [0] $end
$var wire 1 Z, A $end
$var wire 1 X, B $end
$var wire 1 \, C $end
$var wire 1 j, Out $end
$upscope $end

$scope module M2_11 $end
$var wire 1 #- Sel [1] $end
$var wire 1 $- Sel [0] $end
$var wire 1 Y, A $end
$var wire 1 W, B $end
$var wire 1 [, C $end
$var wire 1 i, Out $end
$upscope $end

$scope module M2_10 $end
$var wire 1 #- Sel [1] $end
$var wire 1 $- Sel [0] $end
$var wire 1 X, A $end
$var wire 1 V, B $end
$var wire 1 Z, C $end
$var wire 1 h, Out $end
$upscope $end

$scope module M2_9 $end
$var wire 1 #- Sel [1] $end
$var wire 1 $- Sel [0] $end
$var wire 1 W, A $end
$var wire 1 U, B $end
$var wire 1 Y, C $end
$var wire 1 g, Out $end
$upscope $end

$scope module M2_8 $end
$var wire 1 #- Sel [1] $end
$var wire 1 $- Sel [0] $end
$var wire 1 V, A $end
$var wire 1 T, B $end
$var wire 1 X, C $end
$var wire 1 f, Out $end
$upscope $end

$scope module M2_7 $end
$var wire 1 #- Sel [1] $end
$var wire 1 $- Sel [0] $end
$var wire 1 U, A $end
$var wire 1 S, B $end
$var wire 1 W, C $end
$var wire 1 e, Out $end
$upscope $end

$scope module M2_6 $end
$var wire 1 #- Sel [1] $end
$var wire 1 $- Sel [0] $end
$var wire 1 T, A $end
$var wire 1 R, B $end
$var wire 1 V, C $end
$var wire 1 d, Out $end
$upscope $end

$scope module M2_5 $end
$var wire 1 #- Sel [1] $end
$var wire 1 $- Sel [0] $end
$var wire 1 S, A $end
$var wire 1 Q, B $end
$var wire 1 U, C $end
$var wire 1 c, Out $end
$upscope $end

$scope module M2_4 $end
$var wire 1 #- Sel [1] $end
$var wire 1 $- Sel [0] $end
$var wire 1 R, A $end
$var wire 1 P, B $end
$var wire 1 T, C $end
$var wire 1 b, Out $end
$upscope $end

$scope module M2_3 $end
$var wire 1 #- Sel [1] $end
$var wire 1 $- Sel [0] $end
$var wire 1 Q, A $end
$var wire 1 O, B $end
$var wire 1 S, C $end
$var wire 1 a, Out $end
$upscope $end

$scope module M2_2 $end
$var wire 1 #- Sel [1] $end
$var wire 1 $- Sel [0] $end
$var wire 1 P, A $end
$var wire 1 ;- B $end
$var wire 1 R, C $end
$var wire 1 `, Out $end
$upscope $end

$scope module M2_1 $end
$var wire 1 #- Sel [1] $end
$var wire 1 $- Sel [0] $end
$var wire 1 O, A $end
$var wire 1 <- B $end
$var wire 1 Q, C $end
$var wire 1 _, Out $end
$upscope $end

$scope module M3_16 $end
$var wire 1 %- Sel [1] $end
$var wire 1 &- Sel [0] $end
$var wire 1 n, A $end
$var wire 1 j, B $end
$var wire 1 .- C $end
$var wire 1 ~, Out $end
$upscope $end

$scope module M3_15 $end
$var wire 1 %- Sel [1] $end
$var wire 1 &- Sel [0] $end
$var wire 1 m, A $end
$var wire 1 i, B $end
$var wire 1 /- C $end
$var wire 1 }, Out $end
$upscope $end

$scope module M3_14 $end
$var wire 1 %- Sel [1] $end
$var wire 1 &- Sel [0] $end
$var wire 1 l, A $end
$var wire 1 h, B $end
$var wire 1 0- C $end
$var wire 1 |, Out $end
$upscope $end

$scope module M3_13 $end
$var wire 1 %- Sel [1] $end
$var wire 1 &- Sel [0] $end
$var wire 1 k, A $end
$var wire 1 g, B $end
$var wire 1 1- C $end
$var wire 1 {, Out $end
$upscope $end

$scope module M3_12 $end
$var wire 1 %- Sel [1] $end
$var wire 1 &- Sel [0] $end
$var wire 1 j, A $end
$var wire 1 f, B $end
$var wire 1 n, C $end
$var wire 1 z, Out $end
$upscope $end

$scope module M3_11 $end
$var wire 1 %- Sel [1] $end
$var wire 1 &- Sel [0] $end
$var wire 1 i, A $end
$var wire 1 e, B $end
$var wire 1 m, C $end
$var wire 1 y, Out $end
$upscope $end

$scope module M3_10 $end
$var wire 1 %- Sel [1] $end
$var wire 1 &- Sel [0] $end
$var wire 1 h, A $end
$var wire 1 d, B $end
$var wire 1 l, C $end
$var wire 1 x, Out $end
$upscope $end

$scope module M3_9 $end
$var wire 1 %- Sel [1] $end
$var wire 1 &- Sel [0] $end
$var wire 1 g, A $end
$var wire 1 c, B $end
$var wire 1 k, C $end
$var wire 1 w, Out $end
$upscope $end

$scope module M3_8 $end
$var wire 1 %- Sel [1] $end
$var wire 1 &- Sel [0] $end
$var wire 1 f, A $end
$var wire 1 b, B $end
$var wire 1 j, C $end
$var wire 1 v, Out $end
$upscope $end

$scope module M3_7 $end
$var wire 1 %- Sel [1] $end
$var wire 1 &- Sel [0] $end
$var wire 1 e, A $end
$var wire 1 a, B $end
$var wire 1 i, C $end
$var wire 1 u, Out $end
$upscope $end

$scope module M3_6 $end
$var wire 1 %- Sel [1] $end
$var wire 1 &- Sel [0] $end
$var wire 1 d, A $end
$var wire 1 `, B $end
$var wire 1 h, C $end
$var wire 1 t, Out $end
$upscope $end

$scope module M3_5 $end
$var wire 1 %- Sel [1] $end
$var wire 1 &- Sel [0] $end
$var wire 1 c, A $end
$var wire 1 _, B $end
$var wire 1 g, C $end
$var wire 1 s, Out $end
$upscope $end

$scope module M3_4 $end
$var wire 1 %- Sel [1] $end
$var wire 1 &- Sel [0] $end
$var wire 1 b, A $end
$var wire 1 =- B $end
$var wire 1 f, C $end
$var wire 1 r, Out $end
$upscope $end

$scope module M3_3 $end
$var wire 1 %- Sel [1] $end
$var wire 1 &- Sel [0] $end
$var wire 1 a, A $end
$var wire 1 >- B $end
$var wire 1 e, C $end
$var wire 1 q, Out $end
$upscope $end

$scope module M3_2 $end
$var wire 1 %- Sel [1] $end
$var wire 1 &- Sel [0] $end
$var wire 1 `, A $end
$var wire 1 ?- B $end
$var wire 1 d, C $end
$var wire 1 p, Out $end
$upscope $end

$scope module M3_1 $end
$var wire 1 %- Sel [1] $end
$var wire 1 &- Sel [0] $end
$var wire 1 _, A $end
$var wire 1 @- B $end
$var wire 1 c, C $end
$var wire 1 o, Out $end
$upscope $end

$scope module M4_16 $end
$var wire 1 '- Sel [1] $end
$var wire 1 (- Sel [0] $end
$var wire 1 ~, A $end
$var wire 1 v, B $end
$var wire 1 2- C $end
$var wire 1 *+ Out $end
$upscope $end

$scope module M4_15 $end
$var wire 1 '- Sel [1] $end
$var wire 1 (- Sel [0] $end
$var wire 1 }, A $end
$var wire 1 u, B $end
$var wire 1 3- C $end
$var wire 1 ++ Out $end
$upscope $end

$scope module M4_14 $end
$var wire 1 '- Sel [1] $end
$var wire 1 (- Sel [0] $end
$var wire 1 |, A $end
$var wire 1 t, B $end
$var wire 1 4- C $end
$var wire 1 ,+ Out $end
$upscope $end

$scope module M4_13 $end
$var wire 1 '- Sel [1] $end
$var wire 1 (- Sel [0] $end
$var wire 1 {, A $end
$var wire 1 s, B $end
$var wire 1 5- C $end
$var wire 1 -+ Out $end
$upscope $end

$scope module M4_12 $end
$var wire 1 '- Sel [1] $end
$var wire 1 (- Sel [0] $end
$var wire 1 z, A $end
$var wire 1 r, B $end
$var wire 1 6- C $end
$var wire 1 .+ Out $end
$upscope $end

$scope module M4_11 $end
$var wire 1 '- Sel [1] $end
$var wire 1 (- Sel [0] $end
$var wire 1 y, A $end
$var wire 1 q, B $end
$var wire 1 7- C $end
$var wire 1 /+ Out $end
$upscope $end

$scope module M4_10 $end
$var wire 1 '- Sel [1] $end
$var wire 1 (- Sel [0] $end
$var wire 1 x, A $end
$var wire 1 p, B $end
$var wire 1 8- C $end
$var wire 1 0+ Out $end
$upscope $end

$scope module M4_9 $end
$var wire 1 '- Sel [1] $end
$var wire 1 (- Sel [0] $end
$var wire 1 w, A $end
$var wire 1 o, B $end
$var wire 1 9- C $end
$var wire 1 1+ Out $end
$upscope $end

$scope module M4_8 $end
$var wire 1 '- Sel [1] $end
$var wire 1 (- Sel [0] $end
$var wire 1 v, A $end
$var wire 1 A- B $end
$var wire 1 ~, C $end
$var wire 1 2+ Out $end
$upscope $end

$scope module M4_7 $end
$var wire 1 '- Sel [1] $end
$var wire 1 (- Sel [0] $end
$var wire 1 u, A $end
$var wire 1 B- B $end
$var wire 1 }, C $end
$var wire 1 3+ Out $end
$upscope $end

$scope module M4_6 $end
$var wire 1 '- Sel [1] $end
$var wire 1 (- Sel [0] $end
$var wire 1 t, A $end
$var wire 1 C- B $end
$var wire 1 |, C $end
$var wire 1 4+ Out $end
$upscope $end

$scope module M4_5 $end
$var wire 1 '- Sel [1] $end
$var wire 1 (- Sel [0] $end
$var wire 1 s, A $end
$var wire 1 D- B $end
$var wire 1 {, C $end
$var wire 1 5+ Out $end
$upscope $end

$scope module M4_4 $end
$var wire 1 '- Sel [1] $end
$var wire 1 (- Sel [0] $end
$var wire 1 r, A $end
$var wire 1 E- B $end
$var wire 1 z, C $end
$var wire 1 6+ Out $end
$upscope $end

$scope module M4_3 $end
$var wire 1 '- Sel [1] $end
$var wire 1 (- Sel [0] $end
$var wire 1 q, A $end
$var wire 1 F- B $end
$var wire 1 y, C $end
$var wire 1 7+ Out $end
$upscope $end

$scope module M4_2 $end
$var wire 1 '- Sel [1] $end
$var wire 1 (- Sel [0] $end
$var wire 1 p, A $end
$var wire 1 G- B $end
$var wire 1 x, C $end
$var wire 1 8+ Out $end
$upscope $end

$scope module M4_1 $end
$var wire 1 '- Sel [1] $end
$var wire 1 (- Sel [0] $end
$var wire 1 o, A $end
$var wire 1 H- B $end
$var wire 1 w, C $end
$var wire 1 9+ Out $end
$upscope $end
$upscope $end

$scope module paddsub_ops $end
$var wire 1 _" A [15] $end
$var wire 1 `" A [14] $end
$var wire 1 a" A [13] $end
$var wire 1 b" A [12] $end
$var wire 1 c" A [11] $end
$var wire 1 d" A [10] $end
$var wire 1 e" A [9] $end
$var wire 1 f" A [8] $end
$var wire 1 g" A [7] $end
$var wire 1 h" A [6] $end
$var wire 1 i" A [5] $end
$var wire 1 j" A [4] $end
$var wire 1 k" A [3] $end
$var wire 1 l" A [2] $end
$var wire 1 m" A [1] $end
$var wire 1 n" A [0] $end
$var wire 1 O" B [15] $end
$var wire 1 P" B [14] $end
$var wire 1 Q" B [13] $end
$var wire 1 R" B [12] $end
$var wire 1 S" B [11] $end
$var wire 1 T" B [10] $end
$var wire 1 U" B [9] $end
$var wire 1 V" B [8] $end
$var wire 1 W" B [7] $end
$var wire 1 X" B [6] $end
$var wire 1 Y" B [5] $end
$var wire 1 Z" B [4] $end
$var wire 1 [" B [3] $end
$var wire 1 \" B [2] $end
$var wire 1 ]" B [1] $end
$var wire 1 ^" B [0] $end
$var wire 1 J+ Sum [15] $end
$var wire 1 K+ Sum [14] $end
$var wire 1 L+ Sum [13] $end
$var wire 1 M+ Sum [12] $end
$var wire 1 N+ Sum [11] $end
$var wire 1 O+ Sum [10] $end
$var wire 1 P+ Sum [9] $end
$var wire 1 Q+ Sum [8] $end
$var wire 1 R+ Sum [7] $end
$var wire 1 S+ Sum [6] $end
$var wire 1 T+ Sum [5] $end
$var wire 1 U+ Sum [4] $end
$var wire 1 V+ Sum [3] $end
$var wire 1 W+ Sum [2] $end
$var wire 1 X+ Sum [1] $end
$var wire 1 Y+ Sum [0] $end
$var wire 1 ., Error $end
$var wire 1 I- Ovfl_check [3] $end
$var wire 1 J- Ovfl_check [2] $end
$var wire 1 K- Ovfl_check [1] $end
$var wire 1 L- Ovfl_check [0] $end

$scope module a_e $end
$var wire 1 _" A [3] $end
$var wire 1 `" A [2] $end
$var wire 1 a" A [1] $end
$var wire 1 b" A [0] $end
$var wire 1 O" B [3] $end
$var wire 1 P" B [2] $end
$var wire 1 Q" B [1] $end
$var wire 1 R" B [0] $end
$var wire 1 M- sub $end
$var wire 1 J+ Sum [3] $end
$var wire 1 K+ Sum [2] $end
$var wire 1 L+ Sum [1] $end
$var wire 1 M+ Sum [0] $end
$var wire 1 I- Ovfl $end
$var wire 1 N- Sum_temp [3] $end
$var wire 1 O- Sum_temp [2] $end
$var wire 1 P- Sum_temp [1] $end
$var wire 1 Q- Sum_temp [0] $end
$var wire 1 R- carry [4] $end
$var wire 1 S- carry [3] $end
$var wire 1 T- carry [2] $end
$var wire 1 U- carry [1] $end

$scope module FA1 $end
$var wire 1 b" A $end
$var wire 1 V- B $end
$var wire 1 M- Cin $end
$var wire 1 Q- S $end
$var wire 1 U- Cout $end
$upscope $end

$scope module FA2 $end
$var wire 1 a" A $end
$var wire 1 W- B $end
$var wire 1 U- Cin $end
$var wire 1 P- S $end
$var wire 1 T- Cout $end
$upscope $end

$scope module FA3 $end
$var wire 1 `" A $end
$var wire 1 X- B $end
$var wire 1 T- Cin $end
$var wire 1 O- S $end
$var wire 1 S- Cout $end
$upscope $end

$scope module FA4 $end
$var wire 1 _" A $end
$var wire 1 Y- B $end
$var wire 1 S- Cin $end
$var wire 1 N- S $end
$var wire 1 R- Cout $end
$upscope $end
$upscope $end

$scope module b_f $end
$var wire 1 c" A [3] $end
$var wire 1 d" A [2] $end
$var wire 1 e" A [1] $end
$var wire 1 f" A [0] $end
$var wire 1 c" B [3] $end
$var wire 1 d" B [2] $end
$var wire 1 e" B [1] $end
$var wire 1 f" B [0] $end
$var wire 1 Z- sub $end
$var wire 1 N+ Sum [3] $end
$var wire 1 O+ Sum [2] $end
$var wire 1 P+ Sum [1] $end
$var wire 1 Q+ Sum [0] $end
$var wire 1 J- Ovfl $end
$var wire 1 [- Sum_temp [3] $end
$var wire 1 \- Sum_temp [2] $end
$var wire 1 ]- Sum_temp [1] $end
$var wire 1 ^- Sum_temp [0] $end
$var wire 1 _- carry [4] $end
$var wire 1 `- carry [3] $end
$var wire 1 a- carry [2] $end
$var wire 1 b- carry [1] $end

$scope module FA1 $end
$var wire 1 f" A $end
$var wire 1 c- B $end
$var wire 1 Z- Cin $end
$var wire 1 ^- S $end
$var wire 1 b- Cout $end
$upscope $end

$scope module FA2 $end
$var wire 1 e" A $end
$var wire 1 d- B $end
$var wire 1 b- Cin $end
$var wire 1 ]- S $end
$var wire 1 a- Cout $end
$upscope $end

$scope module FA3 $end
$var wire 1 d" A $end
$var wire 1 e- B $end
$var wire 1 a- Cin $end
$var wire 1 \- S $end
$var wire 1 `- Cout $end
$upscope $end

$scope module FA4 $end
$var wire 1 c" A $end
$var wire 1 f- B $end
$var wire 1 `- Cin $end
$var wire 1 [- S $end
$var wire 1 _- Cout $end
$upscope $end
$upscope $end

$scope module c_g $end
$var wire 1 g" A [3] $end
$var wire 1 h" A [2] $end
$var wire 1 i" A [1] $end
$var wire 1 j" A [0] $end
$var wire 1 W" B [3] $end
$var wire 1 X" B [2] $end
$var wire 1 Y" B [1] $end
$var wire 1 Z" B [0] $end
$var wire 1 g- sub $end
$var wire 1 R+ Sum [3] $end
$var wire 1 S+ Sum [2] $end
$var wire 1 T+ Sum [1] $end
$var wire 1 U+ Sum [0] $end
$var wire 1 K- Ovfl $end
$var wire 1 h- Sum_temp [3] $end
$var wire 1 i- Sum_temp [2] $end
$var wire 1 j- Sum_temp [1] $end
$var wire 1 k- Sum_temp [0] $end
$var wire 1 l- carry [4] $end
$var wire 1 m- carry [3] $end
$var wire 1 n- carry [2] $end
$var wire 1 o- carry [1] $end

$scope module FA1 $end
$var wire 1 j" A $end
$var wire 1 p- B $end
$var wire 1 g- Cin $end
$var wire 1 k- S $end
$var wire 1 o- Cout $end
$upscope $end

$scope module FA2 $end
$var wire 1 i" A $end
$var wire 1 q- B $end
$var wire 1 o- Cin $end
$var wire 1 j- S $end
$var wire 1 n- Cout $end
$upscope $end

$scope module FA3 $end
$var wire 1 h" A $end
$var wire 1 r- B $end
$var wire 1 n- Cin $end
$var wire 1 i- S $end
$var wire 1 m- Cout $end
$upscope $end

$scope module FA4 $end
$var wire 1 g" A $end
$var wire 1 s- B $end
$var wire 1 m- Cin $end
$var wire 1 h- S $end
$var wire 1 l- Cout $end
$upscope $end
$upscope $end

$scope module d_h $end
$var wire 1 k" A [3] $end
$var wire 1 l" A [2] $end
$var wire 1 m" A [1] $end
$var wire 1 n" A [0] $end
$var wire 1 [" B [3] $end
$var wire 1 \" B [2] $end
$var wire 1 ]" B [1] $end
$var wire 1 ^" B [0] $end
$var wire 1 t- sub $end
$var wire 1 V+ Sum [3] $end
$var wire 1 W+ Sum [2] $end
$var wire 1 X+ Sum [1] $end
$var wire 1 Y+ Sum [0] $end
$var wire 1 L- Ovfl $end
$var wire 1 u- Sum_temp [3] $end
$var wire 1 v- Sum_temp [2] $end
$var wire 1 w- Sum_temp [1] $end
$var wire 1 x- Sum_temp [0] $end
$var wire 1 y- carry [4] $end
$var wire 1 z- carry [3] $end
$var wire 1 {- carry [2] $end
$var wire 1 |- carry [1] $end

$scope module FA1 $end
$var wire 1 n" A $end
$var wire 1 }- B $end
$var wire 1 t- Cin $end
$var wire 1 x- S $end
$var wire 1 |- Cout $end
$upscope $end

$scope module FA2 $end
$var wire 1 m" A $end
$var wire 1 ~- B $end
$var wire 1 |- Cin $end
$var wire 1 w- S $end
$var wire 1 {- Cout $end
$upscope $end

$scope module FA3 $end
$var wire 1 l" A $end
$var wire 1 !. B $end
$var wire 1 {- Cin $end
$var wire 1 v- S $end
$var wire 1 z- Cout $end
$upscope $end

$scope module FA4 $end
$var wire 1 k" A $end
$var wire 1 ". B $end
$var wire 1 z- Cin $end
$var wire 1 u- S $end
$var wire 1 y- Cout $end
$upscope $end
$upscope $end
$upscope $end

$scope module sw_lw_add $end
$var wire 1 #. A [15] $end
$var wire 1 $. A [14] $end
$var wire 1 %. A [13] $end
$var wire 1 &. A [12] $end
$var wire 1 '. A [11] $end
$var wire 1 (. A [10] $end
$var wire 1 ). A [9] $end
$var wire 1 *. A [8] $end
$var wire 1 +. A [7] $end
$var wire 1 ,. A [6] $end
$var wire 1 -. A [5] $end
$var wire 1 .. A [4] $end
$var wire 1 /. A [3] $end
$var wire 1 0. A [2] $end
$var wire 1 1. A [1] $end
$var wire 1 2. A [0] $end
$var wire 1 3. B [15] $end
$var wire 1 4. B [14] $end
$var wire 1 5. B [13] $end
$var wire 1 6. B [12] $end
$var wire 1 7. B [11] $end
$var wire 1 8. B [10] $end
$var wire 1 9. B [9] $end
$var wire 1 :. B [8] $end
$var wire 1 ;. B [7] $end
$var wire 1 <. B [6] $end
$var wire 1 =. B [5] $end
$var wire 1 >. B [4] $end
$var wire 1 ?. B [3] $end
$var wire 1 @. B [2] $end
$var wire 1 A. B [1] $end
$var wire 1 B. B [0] $end
$var wire 1 C. sub $end
$var wire 1 z+ Sum [15] $end
$var wire 1 {+ Sum [14] $end
$var wire 1 |+ Sum [13] $end
$var wire 1 }+ Sum [12] $end
$var wire 1 ~+ Sum [11] $end
$var wire 1 !, Sum [10] $end
$var wire 1 ", Sum [9] $end
$var wire 1 #, Sum [8] $end
$var wire 1 $, Sum [7] $end
$var wire 1 %, Sum [6] $end
$var wire 1 &, Sum [5] $end
$var wire 1 ', Sum [4] $end
$var wire 1 (, Sum [3] $end
$var wire 1 ), Sum [2] $end
$var wire 1 *, Sum [1] $end
$var wire 1 +, Sum [0] $end
$var wire 1 -, Ovfl $end
$var wire 1 D. carry [15] $end
$var wire 1 E. carry [14] $end
$var wire 1 F. carry [13] $end
$var wire 1 G. carry [12] $end
$var wire 1 H. carry [11] $end
$var wire 1 I. carry [10] $end
$var wire 1 J. carry [9] $end
$var wire 1 K. carry [8] $end
$var wire 1 L. carry [7] $end
$var wire 1 M. carry [6] $end
$var wire 1 N. carry [5] $end
$var wire 1 O. carry [4] $end
$var wire 1 P. carry [3] $end
$var wire 1 Q. carry [2] $end
$var wire 1 R. carry [1] $end
$var wire 1 S. carry [0] $end
$var wire 1 T. Sum_temp [15] $end
$var wire 1 U. Sum_temp [14] $end
$var wire 1 V. Sum_temp [13] $end
$var wire 1 W. Sum_temp [12] $end
$var wire 1 X. Sum_temp [11] $end
$var wire 1 Y. Sum_temp [10] $end
$var wire 1 Z. Sum_temp [9] $end
$var wire 1 [. Sum_temp [8] $end
$var wire 1 \. Sum_temp [7] $end
$var wire 1 ]. Sum_temp [6] $end
$var wire 1 ^. Sum_temp [5] $end
$var wire 1 _. Sum_temp [4] $end
$var wire 1 `. Sum_temp [3] $end
$var wire 1 a. Sum_temp [2] $end
$var wire 1 b. Sum_temp [1] $end
$var wire 1 c. Sum_temp [0] $end

$scope module FA1 $end
$var wire 1 2. A $end
$var wire 1 B. B $end
$var wire 1 C. Cin $end
$var wire 1 c. S $end
$var wire 1 S. Cout $end
$upscope $end

$scope module FA2 $end
$var wire 1 1. A $end
$var wire 1 A. B $end
$var wire 1 S. Cin $end
$var wire 1 b. S $end
$var wire 1 R. Cout $end
$upscope $end

$scope module FA3 $end
$var wire 1 0. A $end
$var wire 1 @. B $end
$var wire 1 R. Cin $end
$var wire 1 a. S $end
$var wire 1 Q. Cout $end
$upscope $end

$scope module FA4 $end
$var wire 1 /. A $end
$var wire 1 ?. B $end
$var wire 1 Q. Cin $end
$var wire 1 `. S $end
$var wire 1 P. Cout $end
$upscope $end

$scope module FA5 $end
$var wire 1 .. A $end
$var wire 1 >. B $end
$var wire 1 P. Cin $end
$var wire 1 _. S $end
$var wire 1 O. Cout $end
$upscope $end

$scope module FA6 $end
$var wire 1 -. A $end
$var wire 1 =. B $end
$var wire 1 O. Cin $end
$var wire 1 ^. S $end
$var wire 1 N. Cout $end
$upscope $end

$scope module FA7 $end
$var wire 1 ,. A $end
$var wire 1 <. B $end
$var wire 1 N. Cin $end
$var wire 1 ]. S $end
$var wire 1 M. Cout $end
$upscope $end

$scope module FA8 $end
$var wire 1 +. A $end
$var wire 1 ;. B $end
$var wire 1 M. Cin $end
$var wire 1 \. S $end
$var wire 1 L. Cout $end
$upscope $end

$scope module FA9 $end
$var wire 1 *. A $end
$var wire 1 :. B $end
$var wire 1 L. Cin $end
$var wire 1 [. S $end
$var wire 1 K. Cout $end
$upscope $end

$scope module FA10 $end
$var wire 1 ). A $end
$var wire 1 9. B $end
$var wire 1 K. Cin $end
$var wire 1 Z. S $end
$var wire 1 J. Cout $end
$upscope $end

$scope module FA11 $end
$var wire 1 (. A $end
$var wire 1 8. B $end
$var wire 1 J. Cin $end
$var wire 1 Y. S $end
$var wire 1 I. Cout $end
$upscope $end

$scope module FA12 $end
$var wire 1 '. A $end
$var wire 1 7. B $end
$var wire 1 I. Cin $end
$var wire 1 X. S $end
$var wire 1 H. Cout $end
$upscope $end

$scope module FA13 $end
$var wire 1 &. A $end
$var wire 1 6. B $end
$var wire 1 H. Cin $end
$var wire 1 W. S $end
$var wire 1 G. Cout $end
$upscope $end

$scope module FA14 $end
$var wire 1 %. A $end
$var wire 1 5. B $end
$var wire 1 G. Cin $end
$var wire 1 V. S $end
$var wire 1 F. Cout $end
$upscope $end

$scope module FA15 $end
$var wire 1 $. A $end
$var wire 1 4. B $end
$var wire 1 F. Cin $end
$var wire 1 U. S $end
$var wire 1 E. Cout $end
$upscope $end

$scope module FA16 $end
$var wire 1 #. A $end
$var wire 1 3. B $end
$var wire 1 E. Cin $end
$var wire 1 T. S $end
$var wire 1 D. Cout $end
$upscope $end
$upscope $end
$upscope $end

$scope module D_mem $end
$var parameter 32 d. ADDR_WIDTH $end
$var wire 1 /" data_out [15] $end
$var wire 1 0" data_out [14] $end
$var wire 1 1" data_out [13] $end
$var wire 1 2" data_out [12] $end
$var wire 1 3" data_out [11] $end
$var wire 1 4" data_out [10] $end
$var wire 1 5" data_out [9] $end
$var wire 1 6" data_out [8] $end
$var wire 1 7" data_out [7] $end
$var wire 1 8" data_out [6] $end
$var wire 1 9" data_out [5] $end
$var wire 1 :" data_out [4] $end
$var wire 1 ;" data_out [3] $end
$var wire 1 <" data_out [2] $end
$var wire 1 =" data_out [1] $end
$var wire 1 >" data_out [0] $end
$var wire 1 m! data_in [15] $end
$var wire 1 n! data_in [14] $end
$var wire 1 o! data_in [13] $end
$var wire 1 p! data_in [12] $end
$var wire 1 q! data_in [11] $end
$var wire 1 r! data_in [10] $end
$var wire 1 s! data_in [9] $end
$var wire 1 t! data_in [8] $end
$var wire 1 u! data_in [7] $end
$var wire 1 v! data_in [6] $end
$var wire 1 w! data_in [5] $end
$var wire 1 x! data_in [4] $end
$var wire 1 y! data_in [3] $end
$var wire 1 z! data_in [2] $end
$var wire 1 {! data_in [1] $end
$var wire 1 |! data_in [0] $end
$var wire 1 }! addr [15] $end
$var wire 1 ~! addr [14] $end
$var wire 1 !" addr [13] $end
$var wire 1 "" addr [12] $end
$var wire 1 #" addr [11] $end
$var wire 1 $" addr [10] $end
$var wire 1 %" addr [9] $end
$var wire 1 &" addr [8] $end
$var wire 1 '" addr [7] $end
$var wire 1 (" addr [6] $end
$var wire 1 )" addr [5] $end
$var wire 1 *" addr [4] $end
$var wire 1 +" addr [3] $end
$var wire 1 ," addr [2] $end
$var wire 1 -" addr [1] $end
$var wire 1 ." addr [0] $end
$var wire 1 e. enable $end
$var wire 1 }# wr $end
$var wire 1 K! clk $end
$var wire 1 f. rst $end
$var reg 1 g. loaded $end
$upscope $end

$scope module PC_control $end
$var wire 1 a# C [2] $end
$var wire 1 b# C [1] $end
$var wire 1 c# C [0] $end
$var wire 1 d# F [2] $end
$var wire 1 e# F [1] $end
$var wire 1 f# F [0] $end
$var wire 1 v" I [8] $end
$var wire 1 w" I [7] $end
$var wire 1 x" I [6] $end
$var wire 1 y" I [5] $end
$var wire 1 z" I [4] $end
$var wire 1 {" I [3] $end
$var wire 1 |" I [2] $end
$var wire 1 }" I [1] $end
$var wire 1 ~" I [0] $end
$var wire 1 ! PC_in [15] $end
$var wire 1 " PC_in [14] $end
$var wire 1 # PC_in [13] $end
$var wire 1 $ PC_in [12] $end
$var wire 1 % PC_in [11] $end
$var wire 1 & PC_in [10] $end
$var wire 1 ' PC_in [9] $end
$var wire 1 ( PC_in [8] $end
$var wire 1 ) PC_in [7] $end
$var wire 1 * PC_in [6] $end
$var wire 1 + PC_in [5] $end
$var wire 1 , PC_in [4] $end
$var wire 1 - PC_in [3] $end
$var wire 1 . PC_in [2] $end
$var wire 1 / PC_in [1] $end
$var wire 1 0 PC_in [0] $end
$var wire 1 1# PC_out [15] $end
$var wire 1 2# PC_out [14] $end
$var wire 1 3# PC_out [13] $end
$var wire 1 4# PC_out [12] $end
$var wire 1 5# PC_out [11] $end
$var wire 1 6# PC_out [10] $end
$var wire 1 7# PC_out [9] $end
$var wire 1 8# PC_out [8] $end
$var wire 1 9# PC_out [7] $end
$var wire 1 :# PC_out [6] $end
$var wire 1 ;# PC_out [5] $end
$var wire 1 <# PC_out [4] $end
$var wire 1 =# PC_out [3] $end
$var wire 1 ># PC_out [2] $end
$var wire 1 ?# PC_out [1] $end
$var wire 1 @# PC_out [0] $end
$var wire 1 h. ovfl_0 $end
$var wire 1 i. ovfl_1 $end
$var wire 1 j. I_shift [8] $end
$var wire 1 k. I_shift [7] $end
$var wire 1 l. I_shift [6] $end
$var wire 1 m. I_shift [5] $end
$var wire 1 n. I_shift [4] $end
$var wire 1 o. I_shift [3] $end
$var wire 1 p. I_shift [2] $end
$var wire 1 q. I_shift [1] $end
$var wire 1 r. I_shift [0] $end
$var wire 1 s. branch_take [15] $end
$var wire 1 t. branch_take [14] $end
$var wire 1 u. branch_take [13] $end
$var wire 1 v. branch_take [12] $end
$var wire 1 w. branch_take [11] $end
$var wire 1 x. branch_take [10] $end
$var wire 1 y. branch_take [9] $end
$var wire 1 z. branch_take [8] $end
$var wire 1 {. branch_take [7] $end
$var wire 1 |. branch_take [6] $end
$var wire 1 }. branch_take [5] $end
$var wire 1 ~. branch_take [4] $end
$var wire 1 !/ branch_take [3] $end
$var wire 1 "/ branch_take [2] $end
$var wire 1 #/ branch_take [1] $end
$var wire 1 $/ branch_take [0] $end
$var wire 1 %/ normal_pc [15] $end
$var wire 1 &/ normal_pc [14] $end
$var wire 1 '/ normal_pc [13] $end
$var wire 1 (/ normal_pc [12] $end
$var wire 1 )/ normal_pc [11] $end
$var wire 1 */ normal_pc [10] $end
$var wire 1 +/ normal_pc [9] $end
$var wire 1 ,/ normal_pc [8] $end
$var wire 1 -/ normal_pc [7] $end
$var wire 1 ./ normal_pc [6] $end
$var wire 1 // normal_pc [5] $end
$var wire 1 0/ normal_pc [4] $end
$var wire 1 1/ normal_pc [3] $end
$var wire 1 2/ normal_pc [2] $end
$var wire 1 3/ normal_pc [1] $end
$var wire 1 4/ normal_pc [0] $end
$var wire 1 5/ I_input [15] $end
$var wire 1 6/ I_input [14] $end
$var wire 1 7/ I_input [13] $end
$var wire 1 8/ I_input [12] $end
$var wire 1 9/ I_input [11] $end
$var wire 1 :/ I_input [10] $end
$var wire 1 ;/ I_input [9] $end
$var wire 1 </ I_input [8] $end
$var wire 1 =/ I_input [7] $end
$var wire 1 >/ I_input [6] $end
$var wire 1 ?/ I_input [5] $end
$var wire 1 @/ I_input [4] $end
$var wire 1 A/ I_input [3] $end
$var wire 1 B/ I_input [2] $end
$var wire 1 C/ I_input [1] $end
$var wire 1 D/ I_input [0] $end

$scope module INC_PC $end
$var wire 1 ! A [15] $end
$var wire 1 " A [14] $end
$var wire 1 # A [13] $end
$var wire 1 $ A [12] $end
$var wire 1 % A [11] $end
$var wire 1 & A [10] $end
$var wire 1 ' A [9] $end
$var wire 1 ( A [8] $end
$var wire 1 ) A [7] $end
$var wire 1 * A [6] $end
$var wire 1 + A [5] $end
$var wire 1 , A [4] $end
$var wire 1 - A [3] $end
$var wire 1 . A [2] $end
$var wire 1 / A [1] $end
$var wire 1 0 A [0] $end
$var wire 1 E/ B [15] $end
$var wire 1 F/ B [14] $end
$var wire 1 G/ B [13] $end
$var wire 1 H/ B [12] $end
$var wire 1 I/ B [11] $end
$var wire 1 J/ B [10] $end
$var wire 1 K/ B [9] $end
$var wire 1 L/ B [8] $end
$var wire 1 M/ B [7] $end
$var wire 1 N/ B [6] $end
$var wire 1 O/ B [5] $end
$var wire 1 P/ B [4] $end
$var wire 1 Q/ B [3] $end
$var wire 1 R/ B [2] $end
$var wire 1 S/ B [1] $end
$var wire 1 T/ B [0] $end
$var wire 1 U/ sub $end
$var wire 1 %/ Sum [15] $end
$var wire 1 &/ Sum [14] $end
$var wire 1 '/ Sum [13] $end
$var wire 1 (/ Sum [12] $end
$var wire 1 )/ Sum [11] $end
$var wire 1 */ Sum [10] $end
$var wire 1 +/ Sum [9] $end
$var wire 1 ,/ Sum [8] $end
$var wire 1 -/ Sum [7] $end
$var wire 1 ./ Sum [6] $end
$var wire 1 // Sum [5] $end
$var wire 1 0/ Sum [4] $end
$var wire 1 1/ Sum [3] $end
$var wire 1 2/ Sum [2] $end
$var wire 1 3/ Sum [1] $end
$var wire 1 4/ Sum [0] $end
$var wire 1 h. Ovfl $end
$var wire 1 V/ carry [15] $end
$var wire 1 W/ carry [14] $end
$var wire 1 X/ carry [13] $end
$var wire 1 Y/ carry [12] $end
$var wire 1 Z/ carry [11] $end
$var wire 1 [/ carry [10] $end
$var wire 1 \/ carry [9] $end
$var wire 1 ]/ carry [8] $end
$var wire 1 ^/ carry [7] $end
$var wire 1 _/ carry [6] $end
$var wire 1 `/ carry [5] $end
$var wire 1 a/ carry [4] $end
$var wire 1 b/ carry [3] $end
$var wire 1 c/ carry [2] $end
$var wire 1 d/ carry [1] $end
$var wire 1 e/ carry [0] $end
$var wire 1 f/ Sum_temp [15] $end
$var wire 1 g/ Sum_temp [14] $end
$var wire 1 h/ Sum_temp [13] $end
$var wire 1 i/ Sum_temp [12] $end
$var wire 1 j/ Sum_temp [11] $end
$var wire 1 k/ Sum_temp [10] $end
$var wire 1 l/ Sum_temp [9] $end
$var wire 1 m/ Sum_temp [8] $end
$var wire 1 n/ Sum_temp [7] $end
$var wire 1 o/ Sum_temp [6] $end
$var wire 1 p/ Sum_temp [5] $end
$var wire 1 q/ Sum_temp [4] $end
$var wire 1 r/ Sum_temp [3] $end
$var wire 1 s/ Sum_temp [2] $end
$var wire 1 t/ Sum_temp [1] $end
$var wire 1 u/ Sum_temp [0] $end

$scope module FA1 $end
$var wire 1 0 A $end
$var wire 1 T/ B $end
$var wire 1 U/ Cin $end
$var wire 1 u/ S $end
$var wire 1 e/ Cout $end
$upscope $end

$scope module FA2 $end
$var wire 1 / A $end
$var wire 1 S/ B $end
$var wire 1 e/ Cin $end
$var wire 1 t/ S $end
$var wire 1 d/ Cout $end
$upscope $end

$scope module FA3 $end
$var wire 1 . A $end
$var wire 1 R/ B $end
$var wire 1 d/ Cin $end
$var wire 1 s/ S $end
$var wire 1 c/ Cout $end
$upscope $end

$scope module FA4 $end
$var wire 1 - A $end
$var wire 1 Q/ B $end
$var wire 1 c/ Cin $end
$var wire 1 r/ S $end
$var wire 1 b/ Cout $end
$upscope $end

$scope module FA5 $end
$var wire 1 , A $end
$var wire 1 P/ B $end
$var wire 1 b/ Cin $end
$var wire 1 q/ S $end
$var wire 1 a/ Cout $end
$upscope $end

$scope module FA6 $end
$var wire 1 + A $end
$var wire 1 O/ B $end
$var wire 1 a/ Cin $end
$var wire 1 p/ S $end
$var wire 1 `/ Cout $end
$upscope $end

$scope module FA7 $end
$var wire 1 * A $end
$var wire 1 N/ B $end
$var wire 1 `/ Cin $end
$var wire 1 o/ S $end
$var wire 1 _/ Cout $end
$upscope $end

$scope module FA8 $end
$var wire 1 ) A $end
$var wire 1 M/ B $end
$var wire 1 _/ Cin $end
$var wire 1 n/ S $end
$var wire 1 ^/ Cout $end
$upscope $end

$scope module FA9 $end
$var wire 1 ( A $end
$var wire 1 L/ B $end
$var wire 1 ^/ Cin $end
$var wire 1 m/ S $end
$var wire 1 ]/ Cout $end
$upscope $end

$scope module FA10 $end
$var wire 1 ' A $end
$var wire 1 K/ B $end
$var wire 1 ]/ Cin $end
$var wire 1 l/ S $end
$var wire 1 \/ Cout $end
$upscope $end

$scope module FA11 $end
$var wire 1 & A $end
$var wire 1 J/ B $end
$var wire 1 \/ Cin $end
$var wire 1 k/ S $end
$var wire 1 [/ Cout $end
$upscope $end

$scope module FA12 $end
$var wire 1 % A $end
$var wire 1 I/ B $end
$var wire 1 [/ Cin $end
$var wire 1 j/ S $end
$var wire 1 Z/ Cout $end
$upscope $end

$scope module FA13 $end
$var wire 1 $ A $end
$var wire 1 H/ B $end
$var wire 1 Z/ Cin $end
$var wire 1 i/ S $end
$var wire 1 Y/ Cout $end
$upscope $end

$scope module FA14 $end
$var wire 1 # A $end
$var wire 1 G/ B $end
$var wire 1 Y/ Cin $end
$var wire 1 h/ S $end
$var wire 1 X/ Cout $end
$upscope $end

$scope module FA15 $end
$var wire 1 " A $end
$var wire 1 F/ B $end
$var wire 1 X/ Cin $end
$var wire 1 g/ S $end
$var wire 1 W/ Cout $end
$upscope $end

$scope module FA16 $end
$var wire 1 ! A $end
$var wire 1 E/ B $end
$var wire 1 W/ Cin $end
$var wire 1 f/ S $end
$var wire 1 V/ Cout $end
$upscope $end
$upscope $end

$scope module BRANCH_PC $end
$var wire 1 %/ A [15] $end
$var wire 1 &/ A [14] $end
$var wire 1 '/ A [13] $end
$var wire 1 (/ A [12] $end
$var wire 1 )/ A [11] $end
$var wire 1 */ A [10] $end
$var wire 1 +/ A [9] $end
$var wire 1 ,/ A [8] $end
$var wire 1 -/ A [7] $end
$var wire 1 ./ A [6] $end
$var wire 1 // A [5] $end
$var wire 1 0/ A [4] $end
$var wire 1 1/ A [3] $end
$var wire 1 2/ A [2] $end
$var wire 1 3/ A [1] $end
$var wire 1 4/ A [0] $end
$var wire 1 5/ B [15] $end
$var wire 1 6/ B [14] $end
$var wire 1 7/ B [13] $end
$var wire 1 8/ B [12] $end
$var wire 1 9/ B [11] $end
$var wire 1 :/ B [10] $end
$var wire 1 ;/ B [9] $end
$var wire 1 </ B [8] $end
$var wire 1 =/ B [7] $end
$var wire 1 >/ B [6] $end
$var wire 1 ?/ B [5] $end
$var wire 1 @/ B [4] $end
$var wire 1 A/ B [3] $end
$var wire 1 B/ B [2] $end
$var wire 1 C/ B [1] $end
$var wire 1 D/ B [0] $end
$var wire 1 v/ sub $end
$var wire 1 s. Sum [15] $end
$var wire 1 t. Sum [14] $end
$var wire 1 u. Sum [13] $end
$var wire 1 v. Sum [12] $end
$var wire 1 w. Sum [11] $end
$var wire 1 x. Sum [10] $end
$var wire 1 y. Sum [9] $end
$var wire 1 z. Sum [8] $end
$var wire 1 {. Sum [7] $end
$var wire 1 |. Sum [6] $end
$var wire 1 }. Sum [5] $end
$var wire 1 ~. Sum [4] $end
$var wire 1 !/ Sum [3] $end
$var wire 1 "/ Sum [2] $end
$var wire 1 #/ Sum [1] $end
$var wire 1 $/ Sum [0] $end
$var wire 1 i. Ovfl $end
$var wire 1 w/ carry [15] $end
$var wire 1 x/ carry [14] $end
$var wire 1 y/ carry [13] $end
$var wire 1 z/ carry [12] $end
$var wire 1 {/ carry [11] $end
$var wire 1 |/ carry [10] $end
$var wire 1 }/ carry [9] $end
$var wire 1 ~/ carry [8] $end
$var wire 1 !0 carry [7] $end
$var wire 1 "0 carry [6] $end
$var wire 1 #0 carry [5] $end
$var wire 1 $0 carry [4] $end
$var wire 1 %0 carry [3] $end
$var wire 1 &0 carry [2] $end
$var wire 1 '0 carry [1] $end
$var wire 1 (0 carry [0] $end
$var wire 1 )0 Sum_temp [15] $end
$var wire 1 *0 Sum_temp [14] $end
$var wire 1 +0 Sum_temp [13] $end
$var wire 1 ,0 Sum_temp [12] $end
$var wire 1 -0 Sum_temp [11] $end
$var wire 1 .0 Sum_temp [10] $end
$var wire 1 /0 Sum_temp [9] $end
$var wire 1 00 Sum_temp [8] $end
$var wire 1 10 Sum_temp [7] $end
$var wire 1 20 Sum_temp [6] $end
$var wire 1 30 Sum_temp [5] $end
$var wire 1 40 Sum_temp [4] $end
$var wire 1 50 Sum_temp [3] $end
$var wire 1 60 Sum_temp [2] $end
$var wire 1 70 Sum_temp [1] $end
$var wire 1 80 Sum_temp [0] $end

$scope module FA1 $end
$var wire 1 4/ A $end
$var wire 1 D/ B $end
$var wire 1 v/ Cin $end
$var wire 1 80 S $end
$var wire 1 (0 Cout $end
$upscope $end

$scope module FA2 $end
$var wire 1 3/ A $end
$var wire 1 C/ B $end
$var wire 1 (0 Cin $end
$var wire 1 70 S $end
$var wire 1 '0 Cout $end
$upscope $end

$scope module FA3 $end
$var wire 1 2/ A $end
$var wire 1 B/ B $end
$var wire 1 '0 Cin $end
$var wire 1 60 S $end
$var wire 1 &0 Cout $end
$upscope $end

$scope module FA4 $end
$var wire 1 1/ A $end
$var wire 1 A/ B $end
$var wire 1 &0 Cin $end
$var wire 1 50 S $end
$var wire 1 %0 Cout $end
$upscope $end

$scope module FA5 $end
$var wire 1 0/ A $end
$var wire 1 @/ B $end
$var wire 1 %0 Cin $end
$var wire 1 40 S $end
$var wire 1 $0 Cout $end
$upscope $end

$scope module FA6 $end
$var wire 1 // A $end
$var wire 1 ?/ B $end
$var wire 1 $0 Cin $end
$var wire 1 30 S $end
$var wire 1 #0 Cout $end
$upscope $end

$scope module FA7 $end
$var wire 1 ./ A $end
$var wire 1 >/ B $end
$var wire 1 #0 Cin $end
$var wire 1 20 S $end
$var wire 1 "0 Cout $end
$upscope $end

$scope module FA8 $end
$var wire 1 -/ A $end
$var wire 1 =/ B $end
$var wire 1 "0 Cin $end
$var wire 1 10 S $end
$var wire 1 !0 Cout $end
$upscope $end

$scope module FA9 $end
$var wire 1 ,/ A $end
$var wire 1 </ B $end
$var wire 1 !0 Cin $end
$var wire 1 00 S $end
$var wire 1 ~/ Cout $end
$upscope $end

$scope module FA10 $end
$var wire 1 +/ A $end
$var wire 1 ;/ B $end
$var wire 1 ~/ Cin $end
$var wire 1 /0 S $end
$var wire 1 }/ Cout $end
$upscope $end

$scope module FA11 $end
$var wire 1 */ A $end
$var wire 1 :/ B $end
$var wire 1 }/ Cin $end
$var wire 1 .0 S $end
$var wire 1 |/ Cout $end
$upscope $end

$scope module FA12 $end
$var wire 1 )/ A $end
$var wire 1 9/ B $end
$var wire 1 |/ Cin $end
$var wire 1 -0 S $end
$var wire 1 {/ Cout $end
$upscope $end

$scope module FA13 $end
$var wire 1 (/ A $end
$var wire 1 8/ B $end
$var wire 1 {/ Cin $end
$var wire 1 ,0 S $end
$var wire 1 z/ Cout $end
$upscope $end

$scope module FA14 $end
$var wire 1 '/ A $end
$var wire 1 7/ B $end
$var wire 1 z/ Cin $end
$var wire 1 +0 S $end
$var wire 1 y/ Cout $end
$upscope $end

$scope module FA15 $end
$var wire 1 &/ A $end
$var wire 1 6/ B $end
$var wire 1 y/ Cin $end
$var wire 1 *0 S $end
$var wire 1 x/ Cout $end
$upscope $end

$scope module FA16 $end
$var wire 1 %/ A $end
$var wire 1 5/ B $end
$var wire 1 x/ Cin $end
$var wire 1 )0 S $end
$var wire 1 w/ Cout $end
$upscope $end
$upscope $end
$upscope $end

$scope module pc_reg $end
$var wire 1 K! clk $end
$var wire 1 90 rst $end
$var wire 1 Q# D [15] $end
$var wire 1 R# D [14] $end
$var wire 1 S# D [13] $end
$var wire 1 T# D [12] $end
$var wire 1 U# D [11] $end
$var wire 1 V# D [10] $end
$var wire 1 W# D [9] $end
$var wire 1 X# D [8] $end
$var wire 1 Y# D [7] $end
$var wire 1 Z# D [6] $end
$var wire 1 [# D [5] $end
$var wire 1 \# D [4] $end
$var wire 1 ]# D [3] $end
$var wire 1 ^# D [2] $end
$var wire 1 _# D [1] $end
$var wire 1 `# D [0] $end
$var wire 1 :0 WriteReg $end
$var wire 1 ! out [15] $end
$var wire 1 " out [14] $end
$var wire 1 # out [13] $end
$var wire 1 $ out [12] $end
$var wire 1 % out [11] $end
$var wire 1 & out [10] $end
$var wire 1 ' out [9] $end
$var wire 1 ( out [8] $end
$var wire 1 ) out [7] $end
$var wire 1 * out [6] $end
$var wire 1 + out [5] $end
$var wire 1 , out [4] $end
$var wire 1 - out [3] $end
$var wire 1 . out [2] $end
$var wire 1 / out [1] $end
$var wire 1 0 out [0] $end

$scope module ff0 $end
$var wire 1 0 q $end
$var wire 1 `# d $end
$var wire 1 :0 wen $end
$var wire 1 K! clk $end
$var wire 1 90 rst $end
$var reg 1 ;0 state $end
$upscope $end

$scope module ff1 $end
$var wire 1 / q $end
$var wire 1 _# d $end
$var wire 1 :0 wen $end
$var wire 1 K! clk $end
$var wire 1 90 rst $end
$var reg 1 <0 state $end
$upscope $end

$scope module ff2 $end
$var wire 1 . q $end
$var wire 1 ^# d $end
$var wire 1 :0 wen $end
$var wire 1 K! clk $end
$var wire 1 90 rst $end
$var reg 1 =0 state $end
$upscope $end

$scope module ff3 $end
$var wire 1 - q $end
$var wire 1 ]# d $end
$var wire 1 :0 wen $end
$var wire 1 K! clk $end
$var wire 1 90 rst $end
$var reg 1 >0 state $end
$upscope $end

$scope module ff4 $end
$var wire 1 , q $end
$var wire 1 \# d $end
$var wire 1 :0 wen $end
$var wire 1 K! clk $end
$var wire 1 90 rst $end
$var reg 1 ?0 state $end
$upscope $end

$scope module ff5 $end
$var wire 1 + q $end
$var wire 1 [# d $end
$var wire 1 :0 wen $end
$var wire 1 K! clk $end
$var wire 1 90 rst $end
$var reg 1 @0 state $end
$upscope $end

$scope module ff6 $end
$var wire 1 * q $end
$var wire 1 Z# d $end
$var wire 1 :0 wen $end
$var wire 1 K! clk $end
$var wire 1 90 rst $end
$var reg 1 A0 state $end
$upscope $end

$scope module ff7 $end
$var wire 1 ) q $end
$var wire 1 Y# d $end
$var wire 1 :0 wen $end
$var wire 1 K! clk $end
$var wire 1 90 rst $end
$var reg 1 B0 state $end
$upscope $end

$scope module ff8 $end
$var wire 1 ( q $end
$var wire 1 X# d $end
$var wire 1 :0 wen $end
$var wire 1 K! clk $end
$var wire 1 90 rst $end
$var reg 1 C0 state $end
$upscope $end

$scope module ff9 $end
$var wire 1 ' q $end
$var wire 1 W# d $end
$var wire 1 :0 wen $end
$var wire 1 K! clk $end
$var wire 1 90 rst $end
$var reg 1 D0 state $end
$upscope $end

$scope module ff10 $end
$var wire 1 & q $end
$var wire 1 V# d $end
$var wire 1 :0 wen $end
$var wire 1 K! clk $end
$var wire 1 90 rst $end
$var reg 1 E0 state $end
$upscope $end

$scope module ff11 $end
$var wire 1 % q $end
$var wire 1 U# d $end
$var wire 1 :0 wen $end
$var wire 1 K! clk $end
$var wire 1 90 rst $end
$var reg 1 F0 state $end
$upscope $end

$scope module ff12 $end
$var wire 1 $ q $end
$var wire 1 T# d $end
$var wire 1 :0 wen $end
$var wire 1 K! clk $end
$var wire 1 90 rst $end
$var reg 1 G0 state $end
$upscope $end

$scope module ff13 $end
$var wire 1 # q $end
$var wire 1 S# d $end
$var wire 1 :0 wen $end
$var wire 1 K! clk $end
$var wire 1 90 rst $end
$var reg 1 H0 state $end
$upscope $end

$scope module ff14 $end
$var wire 1 " q $end
$var wire 1 R# d $end
$var wire 1 :0 wen $end
$var wire 1 K! clk $end
$var wire 1 90 rst $end
$var reg 1 I0 state $end
$upscope $end

$scope module ff15 $end
$var wire 1 ! q $end
$var wire 1 Q# d $end
$var wire 1 :0 wen $end
$var wire 1 K! clk $end
$var wire 1 90 rst $end
$var reg 1 J0 state $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1g.
0;0
0<0
0=0
0>0
0?0
0@0
0A0
0B0
0C0
0D0
0E0
0F0
0G0
0H0
0I0
0J0
0o&
0q&
0s&
0u&
0w&
0y&
0{&
0}&
0!'
0#'
0%'
0''
0)'
0+'
0-'
0/'
01'
03'
05'
07'
09'
0;'
0='
0?'
0A'
0C'
0E'
0G'
0I'
0K'
0M'
0O'
0Q'
0S'
0U'
0W'
0Y'
0['
0]'
0_'
0a'
0c'
0e'
0g'
0i'
0k'
0m'
0o'
0q'
0s'
0u'
0w'
0y'
0{'
0}'
0!(
0#(
0%(
0'(
0)(
0+(
0-(
0/(
01(
03(
05(
07(
09(
0;(
0=(
0?(
0A(
0C(
0E(
0G(
0I(
0K(
0M(
0O(
0Q(
0S(
0U(
0W(
0Y(
0[(
0](
0_(
0a(
0c(
0e(
0g(
0i(
0k(
0m(
0o(
0q(
0s(
0u(
0w(
0y(
0{(
0}(
0!)
0#)
0%)
0')
0))
0+)
0-)
0/)
01)
03)
05)
07)
09)
0;)
0=)
0?)
0A)
0C)
0E)
0G)
0I)
0K)
0M)
0O)
0Q)
0S)
0U)
0W)
0Y)
0[)
0])
0_)
0a)
0c)
0e)
0g)
0i)
0k)
0m)
0o)
0q)
0s)
0u)
0w)
0y)
0{)
0})
0!*
0#*
0%*
0'*
0)*
0+*
0-*
0/*
01*
03*
05*
07*
09*
0;*
0=*
0?*
0A*
0C*
0E*
0G*
0I*
0K*
0M*
0O*
0Q*
0S*
0U*
0W*
0Y*
0[*
0]*
0_*
0a*
0c*
0e*
0g*
1I!
0J!
16$
0?%
0A%
0C%
0E%
0G%
0I%
0K%
0M%
0O%
0Q%
0S%
0U%
0W%
0Y%
0[%
0]%
0_%
0a%
0c%
0e%
0g%
0i%
0k%
0m%
0o%
0q%
0s%
0u%
0w%
0y%
0{%
0}%
0!&
0#&
0%&
0'&
0)&
0+&
0-&
0/&
01&
03&
05&
07&
09&
0;&
0=&
0?&
0A&
0C&
0E&
0G&
0I&
0K&
0M&
0O&
0Q&
0S&
0U&
0W&
0Y&
0[&
0]&
0_&
0a&
0c&
0e&
0g&
0i&
0k&
0m&
b10000 "$
b0 7$
b1 8$
b10 9$
b11 :$
b100 ;$
b101 <$
b110 =$
b111 >$
b1000 ?$
b1001 @$
b1010 A$
b1011 B$
b1100 C$
b1101 D$
b1110 E$
b1111 F$
b0 h*
b1 i*
b10 j*
b11 k*
b100 l*
b101 m*
b110 n*
b111 o*
b1000 p*
b1001 q*
b1010 r*
b1011 s*
b1100 t*
b1101 u*
b1110 v*
b1111 w*
b10000 d.
b0 E!
b1 F!
b10 G!
b100 H!
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
1@
0?
0>
0=
1<
0;
0:
09
18
07
06
05
04
03
02
01
1A
1E
0D
0C
0B
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
0V
0W
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
1#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0x
x3!
x2!
x1!
x0!
x/!
x.!
x-!
x,!
x+!
x*!
x)!
x(!
x'!
x&!
x%!
x$!
xC!
xB!
xA!
x@!
x?!
x>!
x=!
x<!
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
zD!
1\!
0[!
0Z!
0Y!
1X!
0W!
0V!
0U!
1T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
xl!
xk!
xj!
xi!
xh!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
x]!
x|!
x{!
xz!
xy!
xx!
xw!
xv!
xu!
xt!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
1~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
00#
x/#
x.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0@#
x?#
x>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
0P#
1O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0`#
1_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0c#
0b#
0a#
xf#
xe#
xd#
1j#
0i#
0h#
0g#
1t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
1u#
0v#
0w#
0x#
0y#
0z#
0{#
0|#
0}#
0~#
1!$
0J$
0I$
0H$
0G$
0[$
1Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0k$
1j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0{$
1z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0>%
0@%
0B%
0D%
0F%
0H%
0J%
0L%
0N%
0P%
0R%
0T%
0V%
0X%
0Z%
0\%
0^%
0`%
0b%
0d%
0f%
0h%
0j%
0l%
0n%
0p%
0r%
0t%
0v%
0x%
0z%
0|%
0~%
0"&
0$&
0&&
0(&
0*&
0,&
0.&
00&
02&
04&
06&
08&
0:&
0<&
0>&
0@&
0B&
0D&
0F&
0H&
0J&
0L&
0N&
0P&
0R&
0T&
0V&
0X&
0Z&
0\&
0^&
0`&
0b&
0d&
0f&
0h&
0j&
0l&
0n&
0p&
0r&
0t&
0v&
0x&
0z&
0|&
0~&
0"'
0$'
0&'
0('
0*'
0,'
0.'
00'
02'
04'
06'
08'
0:'
0<'
0>'
0@'
0B'
0D'
0F'
0H'
0J'
0L'
0N'
0P'
0R'
0T'
0V'
0X'
0Z'
0\'
0^'
0`'
0b'
0d'
0f'
0h'
0j'
0l'
0n'
0p'
0r'
0t'
0v'
0x'
0z'
0|'
0~'
0"(
0$(
0&(
0((
0*(
0,(
0.(
00(
02(
04(
06(
08(
0:(
0<(
0>(
0@(
0B(
0D(
0F(
0H(
0J(
0L(
0N(
0P(
0R(
0T(
0V(
0X(
0Z(
0\(
0^(
0`(
0b(
0d(
0f(
0h(
0j(
0l(
0n(
0p(
0r(
0t(
0v(
0x(
0z(
0|(
0~(
0")
0$)
0&)
0()
0*)
0,)
0.)
00)
02)
04)
06)
08)
0:)
0<)
0>)
0@)
0B)
0D)
0F)
0H)
0J)
0L)
0N)
0P)
0R)
0T)
0V)
0X)
0Z)
0\)
0^)
0`)
0b)
0d)
0f)
0h)
0j)
0l)
0n)
0p)
0r)
0t)
0v)
0x)
0z)
0|)
0~)
0"*
0$*
0&*
0(*
0**
0,*
0.*
00*
02*
04*
06*
08*
0:*
0<*
0>*
0@*
0B*
0D*
0F*
0H*
0J*
0L*
0N*
0P*
0R*
0T*
0V*
0X*
0Z*
0\*
0^*
0`*
0b*
0d*
0f*
x)+
x(+
x'+
x&+
x%+
x$+
x#+
x"+
x!+
x~*
x}*
x|*
x{*
xz*
xy*
xx*
x9+
x8+
x7+
x6+
x5+
x4+
x3+
x2+
x1+
x0+
x/+
x.+
x-+
x,+
x++
x*+
zI+
zH+
zG+
zF+
zE+
zD+
zC+
zB+
zA+
z@+
z?+
z>+
z=+
z<+
z;+
z:+
xY+
xX+
xW+
xV+
xU+
xT+
xS+
xR+
xQ+
xP+
xO+
xN+
xM+
xL+
xK+
xJ+
xi+
xh+
xg+
xf+
xe+
xd+
xc+
xb+
xa+
x`+
x_+
x^+
x]+
x\+
x[+
xZ+
xy+
xx+
xw+
xv+
xu+
xt+
xs+
xr+
xq+
xp+
xo+
xn+
xm+
xl+
xk+
xj+
x+,
x*,
x),
x(,
x',
x&,
x%,
x$,
x#,
x",
x!,
x~+
x}+
x|+
x{+
xz+
x,,
x-,
x.,
x>,
x=,
x<,
x;,
x:,
x9,
x8,
x7,
x6,
x5,
x4,
x3,
x2,
x1,
x0,
x/,
xN,
xM,
xL,
xK,
xJ,
xI,
xH,
xG,
xF,
xE,
xD,
xC,
xB,
xA,
x@,
x?,
xO,
xP,
xQ,
xR,
xS,
xT,
xU,
xV,
xW,
xX,
xY,
xZ,
x[,
x\,
x],
x^,
x_,
x`,
xa,
xb,
xc,
xd,
xe,
xf,
xg,
xh,
xi,
xj,
xk,
xl,
xm,
xn,
xo,
xp,
xq,
xr,
xs,
xt,
xu,
xv,
xw,
xx,
xy,
xz,
x{,
x|,
x},
x~,
0"-
x!-
0$-
x#-
0&-
x%-
0(-
x'-
0*-
0)-
x+-
x,-
x--
x.-
x/-
x0-
x1-
x2-
x3-
x4-
x5-
x6-
x7-
x8-
x9-
xL-
xK-
xJ-
xI-
xQ-
xP-
xO-
xN-
xU-
xT-
xS-
xR-
x^-
x]-
x\-
x[-
xb-
xa-
x`-
x_-
xk-
xj-
xi-
xh-
xo-
xn-
xm-
xl-
xx-
xw-
xv-
xu-
x|-
x{-
xz-
xy-
0S.
xR.
xQ.
xP.
xO.
xN.
xM.
xL.
xK.
xJ.
xI.
xH.
xG.
xF.
xE.
xD.
0c.
xb.
xa.
x`.
x_.
x^.
x].
x\.
x[.
xZ.
xY.
xX.
xW.
xV.
xU.
xT.
0h.
0i.
0r.
1q.
0p.
0o.
0n.
0m.
0l.
0k.
0j.
0$/
0#/
1"/
0!/
0~.
0}.
0|.
0{.
0z.
0y.
0x.
0w.
0v.
0u.
0t.
0s.
04/
13/
02/
01/
00/
0//
0./
0-/
0,/
0+/
0*/
0)/
0(/
0'/
0&/
0%/
0D/
1C/
0B/
0A/
0@/
0?/
0>/
0=/
0</
0;/
0:/
09/
08/
07/
06/
05/
0e/
0d/
0c/
0b/
0a/
0`/
0_/
0^/
0]/
0\/
0[/
0Z/
0Y/
0X/
0W/
0V/
0u/
1t/
0s/
0r/
0q/
0p/
0o/
0n/
0m/
0l/
0k/
0j/
0i/
0h/
0g/
0f/
0(0
1'0
0&0
0%0
0$0
0#0
0"0
0!0
0~/
0}/
0|/
0{/
0z/
0y/
0x/
0w/
080
070
160
050
040
030
020
010
000
0/0
0.0
0-0
0,0
0+0
0*0
0)0
0L!
1K!
1:0
190
1f.
0e.
1K$
15$
04$
13$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0C.
0B.
xA.
x@.
x?.
x>.
x=.
x<.
x;.
x:.
x9.
x8.
x7.
x6.
x5.
x4.
x3.
02.
x1.
x0.
x/.
x..
x-.
x,.
x+.
x*.
x)